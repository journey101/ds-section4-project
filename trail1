{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python (gym)",
      "language": "python",
      "name": "gym"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.5.6"
    },
    "colab": {
      "name": "tensorrec_모델생성_김현재_21.1.12",
      "provenance": [],
      "collapsed_sections": [
        "DF1MKRX40sM_",
        "z4JlyTW30sNE"
      ],
      "toc_visible": true
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "609kK-HV0sMx"
      },
      "source": [
        "# Recommendation System for Retail Customer—A Hands-On Example Using Tensorrec Python Module\n",
        "\n",
        "by Taufik Azri"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AOaJXzFu0sM5"
      },
      "source": [
        "This example will use a dataset available here: \n",
        "https://www.kaggle.com/darpan25bajaj/retail-case-study-data#prod_cat_info.csv\n",
        "\n",
        "Info and installation of Tensorrec module is here: https://github.com/jfkirk/tensorrec "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "foGifqQqcCeK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "aa7838f4-c886-4c96-d973-deb68964790a"
      },
      "source": [
        "!pip install tensorflow==2.4.0\n",
        "import tensorflow as tf\n",
        "print(tf.__version__)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting tensorflow==2.4.0\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/7a/ce/e76c4e3d2c245f4f20eff1bf9cbcc602109448142881e1f946ba2d7327bb/tensorflow-2.4.0-cp36-cp36m-manylinux2010_x86_64.whl (394.7MB)\n",
            "\u001b[K     |████████████████████████████████| 394.7MB 42kB/s \n",
            "\u001b[?25hRequirement already satisfied: opt-einsum~=3.3.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (3.3.0)\n",
            "Requirement already satisfied: numpy~=1.19.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (1.19.4)\n",
            "Requirement already satisfied: astunparse~=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (1.6.3)\n",
            "Requirement already satisfied: wheel~=0.35 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (0.36.2)\n",
            "Requirement already satisfied: h5py~=2.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (2.10.0)\n",
            "Requirement already satisfied: wrapt~=1.12.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (1.12.1)\n",
            "Collecting tensorboard~=2.4\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/02/83/179c8f76e5716030cc3ee9433721161cfcc1d854e9ba20c9205180bb100a/tensorboard-2.4.0-py3-none-any.whl (10.6MB)\n",
            "\u001b[K     |████████████████████████████████| 10.6MB 55.8MB/s \n",
            "\u001b[?25hRequirement already satisfied: grpcio~=1.32.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (1.32.0)\n",
            "Requirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (3.12.4)\n",
            "Requirement already satisfied: google-pasta~=0.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (0.2.0)\n",
            "Collecting six~=1.15.0\n",
            "  Downloading https://files.pythonhosted.org/packages/ee/ff/48bde5c0f013094d729fe4b0316ba2a24774b3ff1c52d924a8a4cb04078a/six-1.15.0-py2.py3-none-any.whl\n",
            "Requirement already satisfied: termcolor~=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (1.1.0)\n",
            "Requirement already satisfied: typing-extensions~=3.7.4 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (3.7.4.3)\n",
            "Requirement already satisfied: gast==0.3.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (0.3.3)\n",
            "Requirement already satisfied: keras-preprocessing~=1.1.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (1.1.2)\n",
            "Requirement already satisfied: tensorflow-estimator<2.5.0,>=2.4.0rc0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (2.4.0)\n",
            "Requirement already satisfied: absl-py~=0.10 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (0.10.0)\n",
            "Requirement already satisfied: flatbuffers~=1.12.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.4.0) (1.12)\n",
            "Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow==2.4.0) (1.7.0)\n",
            "Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow==2.4.0) (0.4.2)\n",
            "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow==2.4.0) (2.23.0)\n",
            "Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow==2.4.0) (1.0.1)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow==2.4.0) (3.3.3)\n",
            "Requirement already satisfied: setuptools>=41.0.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow==2.4.0) (51.1.1)\n",
            "Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow==2.4.0) (1.17.2)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow==2.4.0) (1.3.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow==2.4.0) (2020.12.5)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow==2.4.0) (2.10)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow==2.4.0) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow==2.4.0) (1.24.3)\n",
            "Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from markdown>=2.6.8->tensorboard~=2.4->tensorflow==2.4.0) (3.3.0)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow==2.4.0) (4.6)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow==2.4.0) (0.2.8)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow==2.4.0) (4.2.0)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow==2.4.0) (3.1.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard~=2.4->tensorflow==2.4.0) (3.4.0)\n",
            "Requirement already satisfied: pyasn1>=0.1.3 in /usr/local/lib/python3.6/dist-packages (from rsa<5,>=3.1.4; python_version >= \"3\"->google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow==2.4.0) (0.4.8)\n",
            "\u001b[31mERROR: nbclient 0.5.1 has requirement jupyter-client>=6.1.5, but you'll have jupyter-client 5.3.5 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: kimrec 0.26.4 has requirement six==1.11.0, but you'll have six 1.15.0 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: datascience 0.10.6 has requirement folium==0.2.1, but you'll have folium 0.8.3 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: albumentations 0.1.12 has requirement imgaug<0.2.7,>=0.2.5, but you'll have imgaug 0.2.9 which is incompatible.\u001b[0m\n",
            "Installing collected packages: six, tensorboard, tensorflow\n",
            "  Found existing installation: six 1.11.0\n",
            "    Uninstalling six-1.11.0:\n",
            "      Successfully uninstalled six-1.11.0\n",
            "  Found existing installation: tensorboard 1.12.2\n",
            "    Uninstalling tensorboard-1.12.2:\n",
            "      Successfully uninstalled tensorboard-1.12.2\n",
            "  Found existing installation: tensorflow 1.12.0\n",
            "    Uninstalling tensorflow-1.12.0:\n",
            "      Successfully uninstalled tensorflow-1.12.0\n",
            "Successfully installed six-1.15.0 tensorboard-2.4.0 tensorflow-2.4.0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "six",
                  "tensorboard",
                  "tensorflow"
                ]
              }
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "2.4.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fz3402t1UKJM",
        "outputId": "0225a540-2437-4262-e9c8-37d629a5c211"
      },
      "source": [
        "!pwd"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/drive/MyDrive/Recommendation-System-master\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "36fli3sjUUue",
        "outputId": "ab98f8e2-b295-4050-9215-cbdad98d39ad"
      },
      "source": [
        "%cd /content/drive/MyDrive/Recommendation-System-master"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/drive/MyDrive/Recommendation-System-master\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BAsiVz9aUU5I",
        "outputId": "11c78809-e03c-4d6c-b383-3029ec8b70ab"
      },
      "source": [
        "!pwd"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/drive/MyDrive/Recommendation-System-master\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "198ZLbcjUZcP",
        "outputId": "f1195fbe-db60-41d2-b2bd-dd1bd87a7252"
      },
      "source": [
        "!ls"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            " Customer.csv\t     README.md\t\t\t    tensorrecfolder\n",
            " prod_cat_info.csv  'Recommendation Engine.ipynb'   Transactions.csv\n",
            " __pycache__\t     session_management_py.py\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PhmKIyZEUZfY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "22eb2bd3-aa3e-4a6f-fa8c-f1b425f87954"
      },
      "source": [
        "%cd /content/drive/MyDrive/Recommendation-System-master/tensorrecfolder/tensorrec"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/drive/MyDrive/Recommendation-System-master/tensorrecfolder/tensorrec\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rMjZdl5IUZir",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "64ebbf84-9983-4e6e-9746-96263142649d"
      },
      "source": [
        "!ls\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "errors.py\tloss_graphs.py\t\t  representation_graphs.py\n",
            "eval.py\t\tprediction_graphs.py\t  session_management.py\n",
            "__init__.py\t__pycache__\t\t  tensorrec.py\n",
            "input_utils.py\trecommendation_graphs.py  util.py\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 855
        },
        "id": "XtmOmH98i0EJ",
        "outputId": "cbf54e22-67a0-46f8-cce8-9233d5515c64"
      },
      "source": [
        "!pip install kimrec"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting kimrec\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/89/13/39cd9feaaf34aa3cab6a8ada88a3db97593f8a8b0b2cb8bb7e2dc09e6ff3/kimrec-0.26.4-py3-none-any.whl (49kB)\n",
            "\r\u001b[K     |██████▋                         | 10kB 23.6MB/s eta 0:00:01\r\u001b[K     |█████████████▎                  | 20kB 15.9MB/s eta 0:00:01\r\u001b[K     |███████████████████▉            | 30kB 13.4MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▌     | 40kB 12.4MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 51kB 4.3MB/s \n",
            "\u001b[?25hRequirement already satisfied: six==1.11.0 in /usr/local/lib/python3.6/dist-packages (from kimrec) (1.11.0)\n",
            "Requirement already satisfied: scipy>=0.19.1 in /usr/local/lib/python3.6/dist-packages (from kimrec) (1.4.1)\n",
            "Requirement already satisfied: tensorflow>=1.7.0 in /usr/local/lib/python3.6/dist-packages (from kimrec) (2.4.0)\n",
            "Requirement already satisfied: numpy>=1.14.1 in /usr/local/lib/python3.6/dist-packages (from kimrec) (1.19.4)\n",
            "Requirement already satisfied: google-pasta~=0.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (0.2.0)\n",
            "Requirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (3.12.4)\n",
            "Requirement already satisfied: wrapt~=1.12.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (1.12.1)\n",
            "Requirement already satisfied: grpcio~=1.32.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (1.32.0)\n",
            "Requirement already satisfied: wheel~=0.35 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (0.36.2)\n",
            "Requirement already satisfied: flatbuffers~=1.12.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (1.12)\n",
            "Requirement already satisfied: absl-py~=0.10 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (0.10.0)\n",
            "Requirement already satisfied: keras-preprocessing~=1.1.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (1.1.2)\n",
            "Requirement already satisfied: typing-extensions~=3.7.4 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (3.7.4.3)\n",
            "Requirement already satisfied: tensorboard~=2.4 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (2.4.0)\n",
            "Requirement already satisfied: h5py~=2.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (2.10.0)\n",
            "Requirement already satisfied: astunparse~=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (1.6.3)\n",
            "Requirement already satisfied: tensorflow-estimator<2.5.0,>=2.4.0rc0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (2.4.0)\n",
            "Requirement already satisfied: termcolor~=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (1.1.0)\n",
            "Requirement already satisfied: gast==0.3.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (0.3.3)\n",
            "Requirement already satisfied: opt-einsum~=3.3.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->kimrec) (3.3.0)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf>=3.9.2->tensorflow>=1.7.0->kimrec) (51.1.1)\n",
            "Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (1.17.2)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (3.3.3)\n",
            "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (2.23.0)\n",
            "Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (1.0.1)\n",
            "Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (1.7.0)\n",
            "Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (0.4.2)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (4.2.0)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (4.6)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (0.2.8)\n",
            "Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from markdown>=2.6.8->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (3.3.0)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (2.10)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (1.24.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (2020.12.5)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (1.3.0)\n",
            "Requirement already satisfied: pyasn1>=0.1.3 in /usr/local/lib/python3.6/dist-packages (from rsa<5,>=3.1.4; python_version >= \"3\"->google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (0.4.8)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (3.4.0)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow>=1.7.0->kimrec) (3.1.0)\n",
            "Installing collected packages: kimrec\n",
            "Successfully installed kimrec-0.26.4\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "kimrec"
                ]
              }
            }
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:22:36.054847Z",
          "start_time": "2020-04-02T16:22:26.521341Z"
        },
        "id": "N_pV4Bg40sM6"
      },
      "source": [
        "# Import the standard packages normally utilize by Data Scientist\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import pickle\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "sns.set_style('whitegrid')\n",
        "%matplotlib inline\n",
        "\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn import preprocessing\n",
        "from collections import Counter\n",
        "import scipy.sparse as sparse\n",
        "\n",
        "# os is a handy module to explore operating system directory\n",
        "import os\n",
        "\n",
        "# import keras as the Tensorflow engine uses Keras Neural Net backend\n",
        "import keras as ks\n",
        "\n",
        "# Import Tensorrec recommendation packages\n",
        "import kimrec\n",
        "from kimrec import TensorRec\n",
        "from kimrec.eval import *\n",
        "from kimrec.util import append_to_string_at_point\n",
        "\n",
        "### the rest of these representation graphs are also available as an alternative\n",
        "### feel free to play around to tune up the model\n",
        "from kimrec.representation_graphs import (AbstractKerasRepresentationGraph, \n",
        "#                                              ReLURepresentationGraph, \n",
        "                                             NormalizedLinearRepresentationGraph, \n",
        "#                                              LinearRepresentationGraph\n",
        "                                            )\n",
        "\n",
        "from kimrec.loss_graphs import (WMRBLossGraph, \n",
        "#                                    BalancedWMRBLossGraph,\n",
        "#                                    RMSELossGraph, \n",
        "#                                    RMSEDenseLossGraph, \n",
        "#                                    SeparationDenseLossGraph\n",
        "                                  ) \n",
        "\n",
        "from kimrec.eval import fit_and_eval, eval_random_ranks_on_dataset\n",
        "from kimrec.util import append_to_string_at_point\n",
        "\n",
        "### we need to construct a Keras representation graph by inheriting tensorrec.representation_graphs.AbstractKerasRepresentationGraph\n",
        "### https://www.tensorflow.org/tensorboard/graphs\n",
        "### many thanks to James Kirk for his article: \n",
        "### https://medium.com/hackernoon/deep-learning-for-recommendation-with-keras-and-tensorrec-2b8935c795d0\n",
        "\n",
        "class DeepRepresentationGraph(AbstractKerasRepresentationGraph):\n",
        "\n",
        "    # This method returns an ordered list of Keras layers connecting the user/item features to the user/item\n",
        "    # representation. When TensorRec learns, the learning will happen in these layers.\n",
        "    def create_layers(self, n_features, n_components):\n",
        "        return [\n",
        "            ks.layers.Dense(n_components * 16, activation='relu'), #rectified linear unit\n",
        "            ks.layers.Dense(n_components * 8, activation='relu'), #you can try other activation layer too\n",
        "            ks.layers.Dense(n_components * 2, activation='relu'), #most likely changes only benefit other ML like image recog.\n",
        "            ks.layers.Dense(n_components, activation='tanh'),\n",
        "        ]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9PgoopHC0sM9"
      },
      "source": [
        "Import the data manually from Kaggle and save it somewhere in the directory\n",
        "\n",
        "The dowloaded data contains three separate csv files: Customer, prod_cat_info, and Transaction. We will refer the Transaction.csv as the master data, which we will append the relevant customer and product information from Customer.csv before we insert them into the engine."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:22:36.064733Z",
          "start_time": "2020-04-02T16:22:36.056830Z"
        },
        "id": "RkBTy1nm0sM-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "92ded657-1da8-4381-b6e7-a13564849f20"
      },
      "source": [
        "### use os.listdir to explore the files inside directory\n",
        "os.listdir('/content/drive/MyDrive/Recommendation-System-master')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Transactions.csv',\n",
              " 'Recommendation Engine.ipynb',\n",
              " 'Customer.csv',\n",
              " 'prod_cat_info.csv',\n",
              " 'README.md',\n",
              " 'session_management_py.py',\n",
              " '__pycache__',\n",
              " 'tensorrecfolder']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "578dwxnCJaPC",
        "outputId": "0185f148-9fb9-4b24-ddb4-a23412e89b72"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DF1MKRX40sM_"
      },
      "source": [
        "# Data Preparation"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:22:36.157023Z",
          "start_time": "2020-04-02T16:22:36.069730Z"
        },
        "scrolled": true,
        "id": "lWt6IrBA0sM_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "444438f4-db2a-4487-a9ee-c34ad57f19fc"
      },
      "source": [
        "#### MASTER DATA, a.k.a Interaction\n",
        "\n",
        "#### Import the master data, a.k.a transaction data\n",
        "masterdf = pd.read_csv('/content/drive/MyDrive/Recommendation-System-master/Transactions.csv')\n",
        "masterdf.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>transaction_id</th>\n",
              "      <th>cust_id</th>\n",
              "      <th>tran_date</th>\n",
              "      <th>prod_subcat_code</th>\n",
              "      <th>prod_cat_code</th>\n",
              "      <th>Qty</th>\n",
              "      <th>Rate</th>\n",
              "      <th>Tax</th>\n",
              "      <th>total_amt</th>\n",
              "      <th>Store_type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>80712190438</td>\n",
              "      <td>270351</td>\n",
              "      <td>28-02-2014</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>-5</td>\n",
              "      <td>-772</td>\n",
              "      <td>405.300</td>\n",
              "      <td>-4265.300</td>\n",
              "      <td>e-Shop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>29258453508</td>\n",
              "      <td>270384</td>\n",
              "      <td>27-02-2014</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>-5</td>\n",
              "      <td>-1497</td>\n",
              "      <td>785.925</td>\n",
              "      <td>-8270.925</td>\n",
              "      <td>e-Shop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>51750724947</td>\n",
              "      <td>273420</td>\n",
              "      <td>24-02-2014</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>-2</td>\n",
              "      <td>-791</td>\n",
              "      <td>166.110</td>\n",
              "      <td>-1748.110</td>\n",
              "      <td>TeleShop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>93274880719</td>\n",
              "      <td>271509</td>\n",
              "      <td>24-02-2014</td>\n",
              "      <td>11</td>\n",
              "      <td>6</td>\n",
              "      <td>-3</td>\n",
              "      <td>-1363</td>\n",
              "      <td>429.345</td>\n",
              "      <td>-4518.345</td>\n",
              "      <td>e-Shop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>51750724947</td>\n",
              "      <td>273420</td>\n",
              "      <td>23-02-2014</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>-2</td>\n",
              "      <td>-791</td>\n",
              "      <td>166.110</td>\n",
              "      <td>-1748.110</td>\n",
              "      <td>TeleShop</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   transaction_id  cust_id   tran_date  ...      Tax  total_amt  Store_type\n",
              "0     80712190438   270351  28-02-2014  ...  405.300  -4265.300      e-Shop\n",
              "1     29258453508   270384  27-02-2014  ...  785.925  -8270.925      e-Shop\n",
              "2     51750724947   273420  24-02-2014  ...  166.110  -1748.110    TeleShop\n",
              "3     93274880719   271509  24-02-2014  ...  429.345  -4518.345      e-Shop\n",
              "4     51750724947   273420  23-02-2014  ...  166.110  -1748.110    TeleShop\n",
              "\n",
              "[5 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:23:07.062546Z",
          "start_time": "2020-04-02T16:23:07.055108Z"
        },
        "id": "pHu40mPK0sM_"
      },
      "source": [
        "### rename the columns for data cleanliness and standardization.\n",
        "### Standardization will align the column name across tables for ease of merging\n",
        "\n",
        "masterdf.columns = ['Transaction ID', 'Customer ID', 'Transaction Date', 'Prod Subcat Code',\n",
        "       'Prod Cat Code', 'Qty', 'Rate', 'Tax', 'Total Amt', 'Store Type']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:23:07.378996Z",
          "start_time": "2020-04-02T16:23:07.342788Z"
        },
        "id": "BGgxUvPY0sNA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "cfafba9a-546e-44d1-d509-06e54cce4afb"
      },
      "source": [
        "### Categorize store type into numeric category and save it into a new column\n",
        "\n",
        "masterdf['Store Type Code'] = pd.factorize(masterdf['Store Type'])[0]\n",
        "masterdf.head(5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Transaction ID</th>\n",
              "      <th>Customer ID</th>\n",
              "      <th>Transaction Date</th>\n",
              "      <th>Prod Subcat Code</th>\n",
              "      <th>Prod Cat Code</th>\n",
              "      <th>Qty</th>\n",
              "      <th>Rate</th>\n",
              "      <th>Tax</th>\n",
              "      <th>Total Amt</th>\n",
              "      <th>Store Type</th>\n",
              "      <th>Store Type Code</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>80712190438</td>\n",
              "      <td>270351</td>\n",
              "      <td>28-02-2014</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>-5</td>\n",
              "      <td>-772</td>\n",
              "      <td>405.300</td>\n",
              "      <td>-4265.300</td>\n",
              "      <td>e-Shop</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>29258453508</td>\n",
              "      <td>270384</td>\n",
              "      <td>27-02-2014</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>-5</td>\n",
              "      <td>-1497</td>\n",
              "      <td>785.925</td>\n",
              "      <td>-8270.925</td>\n",
              "      <td>e-Shop</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>51750724947</td>\n",
              "      <td>273420</td>\n",
              "      <td>24-02-2014</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>-2</td>\n",
              "      <td>-791</td>\n",
              "      <td>166.110</td>\n",
              "      <td>-1748.110</td>\n",
              "      <td>TeleShop</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>93274880719</td>\n",
              "      <td>271509</td>\n",
              "      <td>24-02-2014</td>\n",
              "      <td>11</td>\n",
              "      <td>6</td>\n",
              "      <td>-3</td>\n",
              "      <td>-1363</td>\n",
              "      <td>429.345</td>\n",
              "      <td>-4518.345</td>\n",
              "      <td>e-Shop</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>51750724947</td>\n",
              "      <td>273420</td>\n",
              "      <td>23-02-2014</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>-2</td>\n",
              "      <td>-791</td>\n",
              "      <td>166.110</td>\n",
              "      <td>-1748.110</td>\n",
              "      <td>TeleShop</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Transaction ID  Customer ID  ... Store Type  Store Type Code\n",
              "0     80712190438       270351  ...     e-Shop                0\n",
              "1     29258453508       270384  ...     e-Shop                0\n",
              "2     51750724947       273420  ...   TeleShop                1\n",
              "3     93274880719       271509  ...     e-Shop                0\n",
              "4     51750724947       273420  ...   TeleShop                1\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:23:08.562959Z",
          "start_time": "2020-04-02T16:23:08.545607Z"
        },
        "id": "OGzPAWZq0sNA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 167
        },
        "outputId": "ff8513db-0418-49e2-b451-1e88ee7986d2"
      },
      "source": [
        "### ensure the categorization is unique\n",
        "masterdf[['Store Type', 'Store Type Code']].drop_duplicates()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Store Type</th>\n",
              "      <th>Store Type Code</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>e-Shop</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>TeleShop</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>MBR</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Flagship store</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Store Type  Store Type Code\n",
              "0           e-Shop                0\n",
              "2         TeleShop                1\n",
              "8              MBR                2\n",
              "17  Flagship store                3"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:23:09.062316Z",
          "start_time": "2020-04-02T16:23:09.000812Z"
        },
        "id": "SBPiGj4Z0sNB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 107
        },
        "outputId": "1c7badc3-dd25-499a-fd10-f1e1f5a0b269"
      },
      "source": [
        "#### CUSTOMER DATA a.k.a Customer Features\n",
        "\n",
        "custdf = pd.read_csv('/content/drive/MyDrive/Recommendation-System-master/Customer.csv')\n",
        "custdf.columns = ['Customer ID', 'DOB', 'Gender', 'City Code']\n",
        "custdf.head(2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Customer ID</th>\n",
              "      <th>DOB</th>\n",
              "      <th>Gender</th>\n",
              "      <th>City Code</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>268408</td>\n",
              "      <td>02-01-1970</td>\n",
              "      <td>M</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>269696</td>\n",
              "      <td>07-01-1970</td>\n",
              "      <td>F</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Customer ID         DOB Gender  City Code\n",
              "0       268408  02-01-1970      M        4.0\n",
              "1       269696  07-01-1970      F        8.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:23:09.537981Z",
          "start_time": "2020-04-02T16:23:09.527566Z"
        },
        "id": "9VLQCuE20sNB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bc16ee2d-9cab-42b4-f972-d4c7b13efb0a"
      },
      "source": [
        "### how many null entries in the City Code?\n",
        "\n",
        "len(custdf[custdf['City Code'].isnull()])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-01T13:52:57.392881Z",
          "start_time": "2020-04-01T13:52:57.384449Z"
        },
        "id": "wwwtCVPA0sNB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8dbf37de-5894-4547-cf25-0978ccf04623"
      },
      "source": [
        "## where does our customers come from?\n",
        "\n",
        "custdf['City Code'].unique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 4.,  8.,  2.,  1.,  5.,  9.,  7., 10.,  6.,  3., nan])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-01T13:52:57.403794Z",
          "start_time": "2020-04-01T13:52:57.396353Z"
        },
        "id": "LVa-t2sG0sNC",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8b538d30-b47d-459a-db58-783deff50f71"
      },
      "source": [
        "## how many customers exist in the transaction?\n",
        "\n",
        "len(custdf['Customer ID'].unique())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5647"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-01T13:52:57.419172Z",
          "start_time": "2020-04-01T13:52:57.407265Z"
        },
        "id": "snM9DWg80sNC",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2a84118f-c218-4370-d50d-904f033d737b"
      },
      "source": [
        "## what kinds of store type?\n",
        "\n",
        "masterdf['Store Type'].unique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['e-Shop', 'TeleShop', 'MBR', 'Flagship store'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:39:31.751365Z",
          "start_time": "2020-04-02T16:39:31.723554Z"
        },
        "scrolled": true,
        "id": "XUtkf2pc0sND",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "24d8f81a-a577-4b47-de3b-21c314fcad96"
      },
      "source": [
        "## load item feature\n",
        "\n",
        "skudf = pd.read_csv('/content/drive/MyDrive/Recommendation-System-master/prod_cat_info.csv')\n",
        "skudf.columns = ['Prod Cat Code', 'Prod Cat', 'Prod Sub Cat Code', 'Prod Subcat']\n",
        "skudf.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Prod Cat Code</th>\n",
              "      <th>Prod Cat</th>\n",
              "      <th>Prod Sub Cat Code</th>\n",
              "      <th>Prod Subcat</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>4</td>\n",
              "      <td>Mens</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>1</td>\n",
              "      <td>Women</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>3</td>\n",
              "      <td>Kids</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>Footwear</td>\n",
              "      <td>1</td>\n",
              "      <td>Mens</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "      <td>Footwear</td>\n",
              "      <td>3</td>\n",
              "      <td>Women</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Prod Cat Code  Prod Cat  Prod Sub Cat Code Prod Subcat\n",
              "0              1  Clothing                  4        Mens\n",
              "1              1  Clothing                  1       Women\n",
              "2              1  Clothing                  3        Kids\n",
              "3              2  Footwear                  1        Mens\n",
              "4              2  Footwear                  3       Women"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jli--Eev0sNE"
      },
      "source": [
        "Looks like there is not much info on the product, except the key-value for each category and subcategory."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z4JlyTW30sNE"
      },
      "source": [
        "# RFMV"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:26:39.307585Z",
          "start_time": "2020-04-02T16:26:37.645528Z"
        },
        "id": "5AT52D5Q0sNF"
      },
      "source": [
        "## standardize transaction date into pandas datetime index\n",
        "masterdf['Date'] =  pd.DatetimeIndex(masterdf['Transaction Date'], dayfirst=True).date"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:26:39.320027Z",
          "start_time": "2020-04-02T16:26:39.309572Z"
        },
        "id": "5isBscfg0sNF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "582e5ae0-e1df-48aa-9410-c4d0cfa2abbc"
      },
      "source": [
        "### what was the first transaction? the last one?\n",
        "\n",
        "print(masterdf['Date'].min()), print(masterdf['Date'].max())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2011-01-25\n",
            "2014-02-28\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(None, None)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:27:15.592354Z",
          "start_time": "2020-04-02T16:27:15.560112Z"
        },
        "id": "lBo9_Qv50sNG"
      },
      "source": [
        "### calculate total net sales from quantity and based price (minus Tax, as it may be different from city to city)\n",
        "masterdf['Net Sales'] = masterdf['Qty'] * masterdf['Rate']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:27:17.131583Z",
          "start_time": "2020-04-02T16:27:17.094827Z"
        },
        "scrolled": true,
        "id": "LE17m78H0sNH"
      },
      "source": [
        "### get unique material indicator from the category, subcategory, and the store type\n",
        "### assuming different sku is sold to different store type\n",
        "\n",
        "masterdf['Material'] = masterdf['Prod Cat Code'].astype(str) + '-' + masterdf['Prod Subcat Code'].astype(str) + '-' + masterdf['Store Type'].astype(str)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:27:17.579553Z",
          "start_time": "2020-04-02T16:27:17.560210Z"
        },
        "id": "E23T4U-T0sNH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "ad354466-d84e-4ebe-f2a0-b4988121b4ed"
      },
      "source": [
        "masterdf[['Prod Cat Code','Prod Subcat Code', 'Store Type', 'Material']].drop_duplicates(subset='Material').head(5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Prod Cat Code</th>\n",
              "      <th>Prod Subcat Code</th>\n",
              "      <th>Store Type</th>\n",
              "      <th>Material</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>e-Shop</td>\n",
              "      <td>1-1-e-Shop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>e-Shop</td>\n",
              "      <td>3-5-e-Shop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>TeleShop</td>\n",
              "      <td>5-6-TeleShop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6</td>\n",
              "      <td>11</td>\n",
              "      <td>e-Shop</td>\n",
              "      <td>6-11-e-Shop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>TeleShop</td>\n",
              "      <td>3-8-TeleShop</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Prod Cat Code  Prod Subcat Code Store Type      Material\n",
              "0              1                 1     e-Shop    1-1-e-Shop\n",
              "1              3                 5     e-Shop    3-5-e-Shop\n",
              "2              5                 6   TeleShop  5-6-TeleShop\n",
              "3              6                11     e-Shop   6-11-e-Shop\n",
              "5              3                 8   TeleShop  3-8-TeleShop"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:27:19.436987Z",
          "start_time": "2020-04-02T16:27:19.430042Z"
        },
        "id": "wctJdxmn0sNH",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "312361ac-4bf2-475e-aeca-378d3480ad7e"
      },
      "source": [
        "### how many unique material we have in the dataset\n",
        "\n",
        "len(masterdf['Material'].unique())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "92"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:27:33.963340Z",
          "start_time": "2020-04-02T16:27:33.958876Z"
        },
        "id": "OGF9ART40sNI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a58f4b9c-7d58-4a8a-8513-8c7235fb3779"
      },
      "source": [
        "## get the date 'now', or for this case, the first day after the last transaction date\n",
        "## the closer a transaction happen from this 'now' date, the better the recency of the data\n",
        "\n",
        "import datetime as dt\n",
        "\n",
        "now = dt.date(2014, 3, 1) # just take the max date from the index + 1\n",
        "print(now)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2014-03-01\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:27:43.859130Z",
          "start_time": "2020-04-02T16:27:43.435545Z"
        },
        "id": "-l8JlGTR0sNI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "f21accce-5bb4-4f79-9b5b-8dccd40b9b86"
      },
      "source": [
        "## RECENCY\n",
        "\n",
        "recency_df = masterdf.groupby('Customer ID').Date.max().reset_index()\n",
        "recency_df.columns = ['Customer ID','Last Purchase']\n",
        "recency_df['Recency'] = recency_df['Last Purchase'].apply(lambda x: (now - x).days)\n",
        "recency_df = recency_df[['Customer ID', 'Recency']]\n",
        "recency_df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Customer ID</th>\n",
              "      <th>Recency</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>266783</td>\n",
              "      <td>374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>266784</td>\n",
              "      <td>452</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>266785</td>\n",
              "      <td>212</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>266788</td>\n",
              "      <td>382</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>266794</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Customer ID  Recency\n",
              "0       266783      374\n",
              "1       266784      452\n",
              "2       266785      212\n",
              "3       266788      382\n",
              "4       266794       17"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:27:44.640514Z",
          "start_time": "2020-04-02T16:27:44.623104Z"
        },
        "id": "mKgXvPia0sNI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "0be7491e-a75f-4cfa-efec-e7d57d712070"
      },
      "source": [
        "# FREQUENCY\n",
        "\n",
        "frequency_df = masterdf.groupby('Customer ID')['Date'].count().reset_index()\n",
        "frequency_df.columns = ['Customer ID','Frequency']\n",
        "frequency_df.head() "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Customer ID</th>\n",
              "      <th>Frequency</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>266783</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>266784</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>266785</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>266788</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>266794</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Customer ID  Frequency\n",
              "0       266783          5\n",
              "1       266784          3\n",
              "2       266785          8\n",
              "3       266788          4\n",
              "4       266794         12"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:27:47.796471Z",
          "start_time": "2020-04-02T16:27:47.760262Z"
        },
        "id": "2Pkmnlg40sNJ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "e3a3e69b-3a4f-42b1-be3d-6a2097657db3"
      },
      "source": [
        "# MONETARY\n",
        "\n",
        "monetary_df = masterdf.groupby('Customer ID')['Net Sales'].sum().reset_index()\n",
        "monetary_df.columns = ['Customer ID','Monetary']\n",
        "monetary_df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Customer ID</th>\n",
              "      <th>Monetary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>266783</td>\n",
              "      <td>13386</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>266784</td>\n",
              "      <td>5153</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>266785</td>\n",
              "      <td>31920</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>266788</td>\n",
              "      <td>5514</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>266794</td>\n",
              "      <td>25569</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Customer ID  Monetary\n",
              "0       266783     13386\n",
              "1       266784      5153\n",
              "2       266785     31920\n",
              "3       266788      5514\n",
              "4       266794     25569"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:27:49.085692Z",
          "start_time": "2020-04-02T16:27:49.057953Z"
        },
        "id": "58EvPCPr0sNK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "a463ba39-eaa5-47ee-e46b-4de75d7a48f0"
      },
      "source": [
        "# # VARIETY\n",
        "\n",
        "variety_df = masterdf.groupby('Customer ID')['Material'].nunique().reset_index()\n",
        "variety_df.columns = ['Customer ID','Variety']\n",
        "variety_df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Customer ID</th>\n",
              "      <th>Variety</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>266783</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>266784</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>266785</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>266788</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>266794</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Customer ID  Variety\n",
              "0       266783        4\n",
              "1       266784        3\n",
              "2       266785        6\n",
              "3       266788        4\n",
              "4       266794       10"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:30:24.718979Z",
          "start_time": "2020-04-02T16:30:24.699634Z"
        },
        "scrolled": true,
        "id": "TC2Z5gcU0sNL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "495bef15-b147-4a55-8a8a-887e2cdeb90f"
      },
      "source": [
        "rfmv = recency_df.copy()\n",
        "\n",
        "rfmv = rfmv.merge(frequency_df, on='Customer ID')\n",
        "rfmv = rfmv.merge(monetary_df, on='Customer ID')\n",
        "rfmv = rfmv.merge(variety_df, on='Customer ID')\n",
        "rfmv.head(5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Customer ID</th>\n",
              "      <th>Recency</th>\n",
              "      <th>Frequency</th>\n",
              "      <th>Monetary</th>\n",
              "      <th>Variety</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>266783</td>\n",
              "      <td>374</td>\n",
              "      <td>5</td>\n",
              "      <td>13386</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>266784</td>\n",
              "      <td>452</td>\n",
              "      <td>3</td>\n",
              "      <td>5153</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>266785</td>\n",
              "      <td>212</td>\n",
              "      <td>8</td>\n",
              "      <td>31920</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>266788</td>\n",
              "      <td>382</td>\n",
              "      <td>4</td>\n",
              "      <td>5514</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>266794</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>25569</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Customer ID  Recency  Frequency  Monetary  Variety\n",
              "0       266783      374          5     13386        4\n",
              "1       266784      452          3      5153        3\n",
              "2       266785      212          8     31920        6\n",
              "3       266788      382          4      5514        4\n",
              "4       266794       17         12     25569       10"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:30:24.909937Z",
          "start_time": "2020-04-02T16:30:24.894561Z"
        },
        "id": "vXUVOnC30sNL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a129717b-5bef-446c-c97a-e4e1648c2ecf"
      },
      "source": [
        "### we take the 25%, 50%, and 75% quantile for each of R, F, M, and V and store them into dictionary data type\n",
        "rfmv_quantiles = rfmv.iloc[:, 1:].quantile(q = [0.25, 0.5, 0.75]).to_dict()\n",
        "rfmv_quantiles"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'Frequency': {0.25: 3.0, 0.5: 4.0, 0.75: 6.0},\n",
              " 'Monetary': {0.25: 5041.75, 0.5: 8801.0, 0.75: 13749.0},\n",
              " 'Recency': {0.25: 92.0, 0.5: 212.0, 0.75: 405.0},\n",
              " 'Variety': {0.25: 2.0, 0.5: 4.0, 0.75: 5.0}}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:30:25.017570Z",
          "start_time": "2020-04-02T16:30:25.011124Z"
        },
        "id": "MeDcnhAt0sNL"
      },
      "source": [
        "## create a function that returns a score--0 to 4 based on the quartile ranking\n",
        "## these score can be easily interpreted by the K-Mean algorithm instead of the actual value of RFMB\n",
        "\n",
        "### recency score: the lower the recency, the higher the score \n",
        "def RecencyScore(i, col, df):\n",
        "    if i <= df[col][0.25]:\n",
        "        return 4\n",
        "    elif i <= df[col][0.50]:\n",
        "        return 3\n",
        "    elif i <= df[col][0.75]: \n",
        "        return 2\n",
        "    else:\n",
        "        return 1\n",
        "    \n",
        "# F, M, V: In contrast to Recency, the higher the quantile value, the higher the score    \n",
        "def FMVScore(i, col, df):\n",
        "    if i <= df[col][0.25]:\n",
        "        return 1\n",
        "    elif i <= df[col][0.50]:\n",
        "        return 2\n",
        "    elif i <= df[col][0.75]: \n",
        "        return 3    \n",
        "    else:\n",
        "        return 4"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:30:25.321618Z",
          "start_time": "2020-04-02T16:30:25.204064Z"
        },
        "id": "CUcmL8hA0sNM"
      },
      "source": [
        "rfmv2 = rfmv.copy()\n",
        "\n",
        "rfmv2['R_q'] = rfmv2['Recency'].apply(RecencyScore, args=('Recency', rfmv_quantiles ))\n",
        "rfmv2['F_q'] = rfmv2['Frequency'].apply(FMVScore, args=('Frequency', rfmv_quantiles ))\n",
        "rfmv2['M_q'] = rfmv2['Monetary'].apply(FMVScore, args=('Monetary', rfmv_quantiles ))\n",
        "rfmv2['V_q'] = rfmv2['Variety'].apply(FMVScore, args=('Variety', rfmv_quantiles ))\n",
        "\n",
        "rfmv2 = rfmv2[['Customer ID', 'R_q', 'F_q', 'M_q', 'V_q',]]\n",
        "\n",
        "# # Sum total scores of each component\n",
        "\n",
        "rfmv2['Total_Score'] = rfmv2['R_q'] + rfmv2['F_q'] + rfmv2['M_q'] + rfmv2['V_q']\n",
        "\n",
        "rfmv2 = rfmv2[['Customer ID', 'Total_Score']]\n",
        "\n",
        "# IMPORTANT: set index to customer number\n",
        "rfmv2.index = rfmv2['Customer ID']\n",
        "rfmv2 = rfmv2.drop('Customer ID', 1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:30:25.862752Z",
          "start_time": "2020-04-02T16:30:25.325586Z"
        },
        "id": "v2koCYZ30sNM",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "aa79a830-b03f-4f53-9d39-eb059a1d2a14"
      },
      "source": [
        "# We use elbow method to find the optimal number of clusters\n",
        "\n",
        "wcss = []\n",
        "for i in range(2,10):\n",
        "    kmeans = KMeans(n_clusters=i, \n",
        "                    init='k-means++')\n",
        "    kmeans.fit(rfmv2)\n",
        "    wcss.append(kmeans.inertia_)\n",
        "    \n",
        "# Plot the graph for Elbow Method\n",
        "plt.plot(range(2,10), wcss)\n",
        "plt.title('Elbow graph')\n",
        "plt.xlabel('Cluster number')\n",
        "plt.ylabel('WCSS')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:30:25.905905Z",
          "start_time": "2020-04-02T16:30:25.865233Z"
        },
        "id": "1MnlBaeX0sNM"
      },
      "source": [
        "# Apply KMean clustering using the optimal number with the \"elbow\" on the graph above\n",
        "kmeans = KMeans(n_clusters=4, \n",
        "                init='random', \n",
        "                random_state=None)\n",
        "\n",
        "clusters = kmeans.fit_predict(rfmv2)\n",
        "\n",
        "### add the cluster result to the original rfmv dataframe\n",
        "rfmv['Clusters'] = clusters"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:30:25.960025Z",
          "start_time": "2020-04-02T16:30:25.942611Z"
        },
        "id": "oOQkosT40sNQ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "31f427c6-6cc9-49d4-9f72-9e9652831d40"
      },
      "source": [
        "rfmv.head(5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Customer ID</th>\n",
              "      <th>Recency</th>\n",
              "      <th>Frequency</th>\n",
              "      <th>Monetary</th>\n",
              "      <th>Variety</th>\n",
              "      <th>Clusters</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>266783</td>\n",
              "      <td>374</td>\n",
              "      <td>5</td>\n",
              "      <td>13386</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>266784</td>\n",
              "      <td>452</td>\n",
              "      <td>3</td>\n",
              "      <td>5153</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>266785</td>\n",
              "      <td>212</td>\n",
              "      <td>8</td>\n",
              "      <td>31920</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>266788</td>\n",
              "      <td>382</td>\n",
              "      <td>4</td>\n",
              "      <td>5514</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>266794</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>25569</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Customer ID  Recency  Frequency  Monetary  Variety  Clusters\n",
              "0       266783      374          5     13386        4         3\n",
              "1       266784      452          3      5153        3         0\n",
              "2       266785      212          8     31920        6         2\n",
              "3       266788      382          4      5514        4         1\n",
              "4       266794       17         12     25569       10         2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:30:16.371685Z",
          "start_time": "2020-04-02T16:30:16.366230Z"
        },
        "scrolled": true,
        "id": "oXUgp6KY0sNR",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e6528f1c-6176-4ed0-9f73-c19c53734953"
      },
      "source": [
        "### counter is a nice function to see how many counts belong to each unique value\n",
        "### in this case we want to know how may members allocated in each cluster\n",
        "\n",
        "Counter(clusters)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Counter({0: 1436, 1: 1559, 2: 1238, 3: 1273})"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:38:37.331766Z",
          "start_time": "2020-04-02T16:38:37.004407Z"
        },
        "id": "91f0LNFh0sNS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 543
        },
        "outputId": "d07a7fa9-5d58-4396-a355-1a0dc9f718e5"
      },
      "source": [
        "## optional: plot the two components with their respective RFMV to see the shape of the clusters\n",
        "## optional: you can try to plot other RFMV components too\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(12,8))\n",
        "\n",
        "var1 = 'Recency'\n",
        "var2 = 'Frequency'\n",
        "temp = rfmv.copy()\n",
        "\n",
        "c1 = temp[temp.Clusters == 0]\n",
        "c2 = temp[temp.Clusters == 1]\n",
        "c3 = temp[temp.Clusters == 2]\n",
        "c4 = temp[temp.Clusters == 3]\n",
        "\n",
        "# Visualization of the clusters\n",
        "plt.scatter(c1[var1], c1[var2], c = 'b', label = 'Cluster 1', s=8)\n",
        "plt.scatter(c2[var1], c2[var2], c = 'r', label = 'Cluster 2', s=8)\n",
        "plt.scatter(c3[var1], c3[var2], c = 'g', label = 'Cluster 3', s=8)\n",
        "plt.scatter(c4[var1], c4[var2], c = 'k', label = 'Cluster 4', s=8)\n",
        "\n",
        "plt.title('Clusters of customers', size=20)\n",
        "plt.xlabel(var1, size=20)\n",
        "plt.ylabel(var2, size=20)\n",
        "plt.legend(fontsize=20)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7fd6706aaf98>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 119
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2X9Iqel_0sNS"
      },
      "source": [
        "# Recommendation Weight"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:38:39.388710Z",
          "start_time": "2020-04-02T16:38:39.383751Z"
        },
        "id": "BBhQX-ix0sNS"
      },
      "source": [
        "### Depending on business use case, the rec engine may want to recommend to a certain type of customers, \n",
        "### i.e., recommend only to active customers, re-instate long-lost customers, recommend long-tailed/unpopular product etc.\n",
        "### here, we will only recommend to active customers over the last year (within 365 days)\n",
        "\n",
        "active_cust = rfmv[rfmv.Recency < 365]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:39:36.849383Z",
          "start_time": "2020-04-02T16:39:36.794824Z"
        },
        "scrolled": true,
        "id": "z0e_D3XJ0sNT"
      },
      "source": [
        "### merge customer features--clusters and city--into master data\n",
        "\n",
        "cleaned_df = masterdf.merge(active_cust[['Customer ID','Clusters']], how='left', on='Customer ID')\n",
        "\n",
        "## removed any null entries on clusters (if any)\n",
        "cleaned_df = cleaned_df[cleaned_df['Clusters'].notnull()]\n",
        "\n",
        "## append customer table\n",
        "cleaned_df = cleaned_df.merge(custdf[['Customer ID', 'City Code']], how='left', \n",
        "                on='Customer ID')\n",
        "\n",
        "### merge sku feature--product category--into master data\n",
        "cleaned_df = cleaned_df.merge(skudf[['Prod Cat', 'Prod Cat Code']], how='left', \n",
        "                on='Prod Cat Code')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:39:37.590904Z",
          "start_time": "2020-04-02T16:39:37.572056Z"
        },
        "id": "kDfYk6af0sNT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "29a64733-b023-4632-b6d1-5539c0407acc"
      },
      "source": [
        "### data sanity--check the length of transactions, customer, and sku\n",
        "\n",
        "len(cleaned_df), len(cleaned_df['Customer ID'].unique()), len(cleaned_df['Material'].unique())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(77908, 3899, 92)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:39:50.420076Z",
          "start_time": "2020-04-02T16:39:50.360510Z"
        },
        "id": "mIEMqd7Q0sNU"
      },
      "source": [
        "# Getting the required columns\n",
        "# Get rid of unnecessary info, keep only essential columns\n",
        "    \n",
        "final_cleaned_df = cleaned_df\n",
        "\n",
        "final_cleaned_df = final_cleaned_df[['Prod Cat','Material','Qty','Customer ID','Clusters',]]\n",
        "\n",
        "# Group together to get total quantity for each customer, \n",
        "# retaining unique customer list, eliminating duplicates and redundancy\n",
        "cust_grouped = final_cleaned_df.groupby(['Customer ID',\n",
        "                                         'Prod Cat',\n",
        "                                         'Material',\n",
        "                                        'Clusters']).sum().reset_index()\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:39:58.329730Z",
          "start_time": "2020-04-02T16:39:58.294549Z"
        },
        "id": "3gcm-h5J0sNU"
      },
      "source": [
        "### Interaction Matrix \n",
        "# Getting the Customer's transaction for every material interms of sales quantity\n",
        "interactions = cust_grouped.groupby(['Customer ID', 'Material'])['Qty'].sum().unstack().fillna(0)\n",
        "\n",
        "# Scale value of the interaction matrix using sklearn.preprocessing.MinMaxScaler \n",
        "minmaxscaler = preprocessing.MinMaxScaler()\n",
        "interactions_scaled = minmaxscaler.fit_transform(interactions)\n",
        "interactions_scaled = pd.DataFrame(interactions_scaled)\n",
        "\n",
        "## The scaled matrix lost the index (customer) and column (item) information\n",
        "## we re-append the customer ID and the material into the DataFrame's index and column respectively\n",
        "interactions_scaled.index = interactions.index\n",
        "interactions_scaled.columns = interactions.columns"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:39:59.618476Z",
          "start_time": "2020-04-02T16:39:59.549020Z"
        },
        "scrolled": true,
        "id": "Ou_aBbi10sNU",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 523
        },
        "outputId": "6785773e-e824-4245-8a65-eedbb0fde194"
      },
      "source": [
        "interactions"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Material</th>\n",
              "      <th>1-1-Flagship store</th>\n",
              "      <th>1-1-MBR</th>\n",
              "      <th>1-1-TeleShop</th>\n",
              "      <th>1-1-e-Shop</th>\n",
              "      <th>1-3-Flagship store</th>\n",
              "      <th>1-3-MBR</th>\n",
              "      <th>1-3-TeleShop</th>\n",
              "      <th>1-3-e-Shop</th>\n",
              "      <th>1-4-Flagship store</th>\n",
              "      <th>1-4-MBR</th>\n",
              "      <th>1-4-TeleShop</th>\n",
              "      <th>1-4-e-Shop</th>\n",
              "      <th>2-1-Flagship store</th>\n",
              "      <th>2-1-MBR</th>\n",
              "      <th>2-1-TeleShop</th>\n",
              "      <th>2-1-e-Shop</th>\n",
              "      <th>2-3-Flagship store</th>\n",
              "      <th>2-3-MBR</th>\n",
              "      <th>2-3-TeleShop</th>\n",
              "      <th>2-3-e-Shop</th>\n",
              "      <th>2-4-Flagship store</th>\n",
              "      <th>2-4-MBR</th>\n",
              "      <th>2-4-TeleShop</th>\n",
              "      <th>2-4-e-Shop</th>\n",
              "      <th>3-10-Flagship store</th>\n",
              "      <th>3-10-MBR</th>\n",
              "      <th>3-10-TeleShop</th>\n",
              "      <th>3-10-e-Shop</th>\n",
              "      <th>3-4-Flagship store</th>\n",
              "      <th>3-4-MBR</th>\n",
              "      <th>3-4-TeleShop</th>\n",
              "      <th>3-4-e-Shop</th>\n",
              "      <th>3-5-Flagship store</th>\n",
              "      <th>3-5-MBR</th>\n",
              "      <th>3-5-TeleShop</th>\n",
              "      <th>3-5-e-Shop</th>\n",
              "      <th>3-8-Flagship store</th>\n",
              "      <th>3-8-MBR</th>\n",
              "      <th>3-8-TeleShop</th>\n",
              "      <th>3-8-e-Shop</th>\n",
              "      <th>...</th>\n",
              "      <th>5-10-Flagship store</th>\n",
              "      <th>5-10-MBR</th>\n",
              "      <th>5-10-TeleShop</th>\n",
              "      <th>5-10-e-Shop</th>\n",
              "      <th>5-11-Flagship store</th>\n",
              "      <th>5-11-MBR</th>\n",
              "      <th>5-11-TeleShop</th>\n",
              "      <th>5-11-e-Shop</th>\n",
              "      <th>5-12-Flagship store</th>\n",
              "      <th>5-12-MBR</th>\n",
              "      <th>5-12-TeleShop</th>\n",
              "      <th>5-12-e-Shop</th>\n",
              "      <th>5-3-Flagship store</th>\n",
              "      <th>5-3-MBR</th>\n",
              "      <th>5-3-TeleShop</th>\n",
              "      <th>5-3-e-Shop</th>\n",
              "      <th>5-6-Flagship store</th>\n",
              "      <th>5-6-MBR</th>\n",
              "      <th>5-6-TeleShop</th>\n",
              "      <th>5-6-e-Shop</th>\n",
              "      <th>5-7-Flagship store</th>\n",
              "      <th>5-7-MBR</th>\n",
              "      <th>5-7-TeleShop</th>\n",
              "      <th>5-7-e-Shop</th>\n",
              "      <th>6-10-Flagship store</th>\n",
              "      <th>6-10-MBR</th>\n",
              "      <th>6-10-TeleShop</th>\n",
              "      <th>6-10-e-Shop</th>\n",
              "      <th>6-11-Flagship store</th>\n",
              "      <th>6-11-MBR</th>\n",
              "      <th>6-11-TeleShop</th>\n",
              "      <th>6-11-e-Shop</th>\n",
              "      <th>6-12-Flagship store</th>\n",
              "      <th>6-12-MBR</th>\n",
              "      <th>6-12-TeleShop</th>\n",
              "      <th>6-12-e-Shop</th>\n",
              "      <th>6-2-Flagship store</th>\n",
              "      <th>6-2-MBR</th>\n",
              "      <th>6-2-TeleShop</th>\n",
              "      <th>6-2-e-Shop</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Customer ID</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>266785</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266794</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266799</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266804</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266805</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275252</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>36.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275255</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275257</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275261</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275265</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3899 rows × 92 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "Material     1-1-Flagship store  1-1-MBR  ...  6-2-TeleShop  6-2-e-Shop\n",
              "Customer ID                               ...                          \n",
              "266785                      0.0      0.0  ...           0.0         0.0\n",
              "266794                      0.0      0.0  ...           0.0         0.0\n",
              "266799                      0.0      0.0  ...           0.0         0.0\n",
              "266804                      0.0      0.0  ...           0.0         0.0\n",
              "266805                      0.0      0.0  ...           0.0         0.0\n",
              "...                         ...      ...  ...           ...         ...\n",
              "275252                      0.0      0.0  ...           0.0         0.0\n",
              "275255                      0.0      0.0  ...           0.0         0.0\n",
              "275257                      0.0      0.0  ...           0.0         0.0\n",
              "275261                      0.0      0.0  ...           0.0         0.0\n",
              "275265                      0.0      0.0  ...           0.0         0.0\n",
              "\n",
              "[3899 rows x 92 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:13.584647Z",
          "start_time": "2020-04-02T16:40:13.560299Z"
        },
        "scrolled": true,
        "id": "gtnRTBiI0sNV"
      },
      "source": [
        "### User Features Matrix \n",
        "## There are two features that is used to build the user matrix here\n",
        "## First is the customer's unique categories they buy \n",
        "## Second is the clusters they belong to\n",
        "\n",
        "# Getting the unique categories they buy\n",
        "# grouped them by the quantity per category\n",
        "cust_qty = cust_grouped.groupby(['Customer ID', 'Prod Cat'])['Qty'].sum().unstack().fillna(0)\n",
        "\n",
        "# Scaled value of the categories\n",
        "# Scale value of the interaction matrix using sklearn.preprocessing.MinMaxScaler \n",
        "minmaxscaler = preprocessing.MinMaxScaler()\n",
        "cust_qty_scaled = minmaxscaler.fit_transform(cust_qty)\n",
        "cust_qty_scaled = pd.DataFrame(cust_qty_scaled)\n",
        "cust_qty_scaled.index = cust_qty.index\n",
        "cust_qty_scaled.columns = cust_qty.columns\n",
        "\n",
        "## Include the Cluster features of the customers\n",
        "## this is the additional feature that we want to add into the user feature\n",
        "## the cluster serves as customer's \"characteristics\"\n",
        "### we use groupby/nunique aggregation to get a one-hot encoding of each customer's clusters\n",
        "\n",
        "cust_clus = cust_grouped.groupby(['Customer ID', 'Clusters'])['Clusters'].nunique().unstack().fillna(0)\n",
        "cust_clus\n",
        "\n",
        "# Merge the two features to create the user feature matrix\n",
        "customer_features = pd.merge(cust_qty_scaled, cust_clus, left_index=True, right_index=True, how='inner')\n",
        "customer_features = customer_features.rename(columns={0: 'Cluster 0', \n",
        "                                                      1: 'Cluster 1', \n",
        "                                                      2: 'Cluster 2', \n",
        "                                                      3: 'Cluster 3', \n",
        "                                                      4: 'Cluster 4'})\n",
        "\n",
        "## as an additional practice, you can also include other user information from custdf, such as gender and date of birth\n",
        "## but for now, I will omit those information"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:16.796340Z",
          "start_time": "2020-04-02T16:40:16.778484Z"
        },
        "id": "K0IflfRG0sNV"
      },
      "source": [
        "### Item Features Matrix\n",
        "## We use the different categories of the items as the feature to build the item feature matrix here\n",
        "\n",
        "item_category = pd.DataFrame(cust_grouped.groupby(['Material', \n",
        "                                              'Prod Cat'])['Qty'].sum().unstack().fillna(0).reset_index().set_index('Material'))\n",
        "# item_cat = item_cat.applymap(replaceneg0)\n",
        "\n",
        "# Scaled value of the item categories\n",
        "minmaxscaler = preprocessing.MinMaxScaler()\n",
        "item_category_scaled = minmaxscaler.fit_transform(item_category)\n",
        "item_category_scaled = pd.DataFrame(item_category_scaled)\n",
        "item_category_scaled.index = item_category.index\n",
        "item_category_scaled.columns = item_category.columns"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:18.340264Z",
          "start_time": "2020-04-02T16:40:18.323897Z"
        },
        "id": "4hzDgMSO0sNV"
      },
      "source": [
        "### We have three features as required by TensorRec\n",
        "### TensorRec accept matrix, and not dataframe, therefore we need to transform them into matrix\n",
        "\n",
        "## Create COOMatrices using Scipy function \n",
        "## COOMatrices are sparse matrices, mostly filled with zero\n",
        "## It speeds up the processes and saves a lot of memory\n",
        "interaction_f = sparse.coo_matrix(interactions_scaled)\n",
        "user_f  = sparse.coo_matrix(customer_features) \n",
        "item_f  = sparse.coo_matrix(item_category_scaled) "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:19.157741Z",
          "start_time": "2020-04-02T16:40:19.153276Z"
        },
        "id": "HCis217B0sNV"
      },
      "source": [
        "### Jesse Steinweg-Woods provide a great elaboration on Recommendation metrics\n",
        "### The following code is borrowed from his work\n",
        "### https://jessesw.com/Rec-System/\n",
        "\n",
        "def interaction_masking(interactions):\n",
        "    '''\n",
        "    This function will \"mask\" (a.k.a \"hide\") 20% of original interactions\n",
        "    Masked items wil be considered not purchased\n",
        "\n",
        "    '''\n",
        "    mask_size = len(interactions.data)\n",
        "    mask = np.random.choice(a=[False, True], size=mask_size, p=[.2, .8])\n",
        "    not_mask = np.invert(mask)\n",
        "\n",
        "    train_interactions = sparse.coo_matrix((interactions.data[mask],\n",
        "                                        (interactions.row[mask],\n",
        "                                         interactions.col[mask])),\n",
        "                                       shape=interactions.shape)\n",
        "\n",
        "    test_interactions = sparse.coo_matrix((interactions.data[not_mask],\n",
        "                                       (interactions.row[not_mask],\n",
        "                                        interactions.col[not_mask])),\n",
        "                                      shape=interactions.shape)\n",
        "\n",
        "    return train_interactions, test_interactions"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:22.393118Z",
          "start_time": "2020-04-02T16:40:22.372321Z"
        },
        "id": "3u4wMMtZ0sNW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2845f933-0d35-455c-f034-5a38a7e0ccd4"
      },
      "source": [
        "mask_size = len(interaction_f.data)\n",
        "\n",
        "### use numpy.random.choice to generate a random True/False array, where False denotes the \"masked\" interactions (hidden)\n",
        "## https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.random.choice.html\n",
        "np.random.choice(a=[False, True], \n",
        "                 size=mask_size, \n",
        "                 p=[.2, .8])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ True,  True, False, ...,  True,  True,  True])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 130
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:24.604498Z",
          "start_time": "2020-04-02T16:40:24.590114Z"
        },
        "id": "z8Frfr100sNW"
      },
      "source": [
        "# Create a masked train and test dataset of the interaction features\n",
        "train_interactions, test_interactions = interaction_masking(interaction_f)\n",
        "\n",
        "# Feed the user and item features\n",
        "user_features  = user_f\n",
        "item_features = item_f"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:26.041614Z",
          "start_time": "2020-04-02T16:40:26.037646Z"
        },
        "id": "Smc5wxhs0sNW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a7347438-ffde-4a18-868a-1445be7ac40f"
      },
      "source": [
        "## validate that the interactions are scipy coordinate sparse matrix\n",
        "\n",
        "train_interactions"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<3899x92 sparse matrix of type '<class 'numpy.float64'>'\n",
              "\twith 160724 stored elements in COOrdinate format>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4s8tqERILdHz"
      },
      "source": [
        "import time\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:49.635426Z",
          "start_time": "2020-04-02T16:40:33.059936Z"
        },
        "id": "8Ae3mza50sNW"
      },
      "source": [
        " \n",
        "# %%time\n",
        "### call %%time to see the time it takes to run the model \n",
        "\n",
        "## model parameters\n",
        "\n",
        "epochs = 100 #number of iterations ## play around with this number to achieve an optimal learning curve\n",
        "alpha = 0.01 \n",
        "n_components =  10 ## play around with this number to achieve an optimal learning curve\n",
        "\n",
        "verbose = True\n",
        "learning_rate = 0.01\n",
        "n_sampled_items = int(item_features.shape[0] * .1)\n",
        "biased = False\n",
        " \n",
        "k_val  = 100\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wi693gfjQNYc"
      },
      "source": [
        "import time"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "znmPhFr9SLGU"
      },
      "source": [
        "tf.compat.v1.disable_eager_execution()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 370
        },
        "id": "BWsxTtBROzgU",
        "outputId": "a2894b13-2274-4cee-a144-4e703e2a3427"
      },
      "source": [
        "# import time \n",
        "# %%time\n",
        "## Approximation of WMRB: Learning to Rank in a Scalable Batch Training Approach .\n",
        "### Interactions can be any positive values, but magnitude is ignored. Negative interactions are ignored\n",
        "### http://ceur-ws.org/Vol-1905/recsys2017_poster3.pdf\n",
        "#  Options: BalancedWMRBLossGraph,RMSELossGraph, RMSEDenseLossGraph, SeparationDenseLossGraph\n",
        "\n",
        "\n",
        "model = TensorRec(n_components = n_components,                 \n",
        "                  user_repr_graph = DeepRepresentationGraph(),\n",
        "                   item_repr_graph = NormalizedLinearRepresentationGraph(),\n",
        "                   loss_graph = WMRBLossGraph(), \n",
        "                  biased=biased)\n",
        "\n",
        "model.fit(train_interactions, \n",
        "          user_features, \n",
        "          item_features, \n",
        "          epochs=epochs, \n",
        "          verbose=False, \n",
        "          alpha=alpha, \n",
        "          n_sampled_items=n_sampled_items,\n",
        "          learning_rate=learning_rate)\n",
        "\n",
        "\n",
        "# # Get predicted scores for all users and all items\n",
        "predictions = model.predict(user_features=user_features,\n",
        "                            item_features=item_features)\n",
        "\n",
        "# Get the predicted rankings (First, second, third, and so forth...) for all users and all items\n",
        "predicted_ranks = model.predict_rank(user_features=user_features,\n",
        "                                     item_features=item_features)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-159-d5fd4a703e5e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     20\u001b[0m           \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m           \u001b[0mn_sampled_items\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mn_sampled_items\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 22\u001b[0;31m           learning_rate=learning_rate)\n\u001b[0m\u001b[1;32m     23\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/kimrec/tensorrec.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, interactions, user_features, item_features, epochs, learning_rate, alpha, verbose, user_batch_size, n_sampled_items)\u001b[0m\n\u001b[1;32m    535\u001b[0m                          \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mverbose\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    536\u001b[0m                          \u001b[0muser_batch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muser_batch_size\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 537\u001b[0;31m                          n_sampled_items=n_sampled_items)\n\u001b[0m\u001b[1;32m    538\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    539\u001b[0m     def fit_partial(self, interactions, user_features, item_features, epochs=1, learning_rate=0.1,\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/kimrec/tensorrec.py\u001b[0m in \u001b[0;36mfit_partial\u001b[0;34m(self, interactions, user_features, item_features, epochs, learning_rate, alpha, verbose, user_batch_size, n_sampled_items)\u001b[0m\n\u001b[1;32m    571\u001b[0m         \"\"\"\n\u001b[1;32m    572\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 573\u001b[0;31m         \u001b[0msession\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_session\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    574\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    575\u001b[0m         \u001b[0;31m# Arg checking\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/kimrec/session_management.py\u001b[0m in \u001b[0;36mget_session\u001b[0;34m()\u001b[0m\n\u001b[1;32m     14\u001b[0m             \u001b[0m_session\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_default_session\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m             \u001b[0m_session\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mv1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSession\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0m_session\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: module 'tensorflow' has no attribute 'Session'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:51.475667Z",
          "start_time": "2020-04-02T16:40:51.439917Z"
        },
        "id": "mGewft390sNX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "outputId": "8c4fc22e-d3a2-45b1-a750-a0168ab28f0f"
      },
      "source": [
        "%%time\n",
        "\n",
        "### TESTING\n",
        "\n",
        "# we use Recall@k\n",
        "# Recall@k: for the average user, what percentage of their test items made it in to the top k in the predicted rankings\n",
        "\n",
        "# in other words, recall@k:\n",
        "# what percentage of the positively interacted items (items purchased) were in the top k results of the prediction?\n",
        "\n",
        "# in simpler words:\n",
        "# Recall@k = (# of recommended items @k that are relevant) / (total # of relevant items)\n",
        "#a.k.a\n",
        "# Recall@k = (# of recommended items @k ) / (total # items purchased)\n",
        "\n",
        "### reference: \n",
        "\n",
        "## optimally, if you have around 400-500 products, you want to achieve recall at k ≈ 200-250\n",
        "## but since we only have 92 products, k=80 may sounds fitting.\n",
        "r_at_k_test = recall_at_k(predicted_ranks, test_interactions, k=80)\n",
        "r_at_k_train = recall_at_k(predicted_ranks, train_interactions, k=80)\n",
        "print(\"Recall at @k: Train: {:.2f} Test: {:.2f}\".format(r_at_k_train.mean(), r_at_k_test.mean()))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-145-3423844c0548>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun_cell_magic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'time'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m''\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'\\n### TESTING\\n\\n# we use Recall@k\\n# Recall@k: for the average user, what percentage of their test items made it in to the top k in the predicted rankings\\n\\n# in other words, recall@k:\\n# what percentage of the positively interacted items (items purchased) were in the top k results of the prediction?\\n\\n# in simpler words:\\n# Recall@k = (# of recommended items @k that are relevant) / (total # of relevant items)\\n#a.k.a\\n# Recall@k = (# of recommended items @k ) / (total # items purchased)\\n\\n### reference: \\n\\n## optimally, if you have around 400-500 products, you want to achieve recall at k ≈ 200-250\\n## but since we only have 92 products, k=80 may sounds fitting.\\nr_at_k_test = recall_at_k(predicted_ranks, test_interactions, k=80)\\nr_at_k_train = recall_at_k(predicted_ranks, train_interactions, k=80)\\nprint(\"Recall at @k: Train: {:.2f} Test: {:.2f}\".format(r_at_k_train.mean(), r_at_k_test.mean()))'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\u001b[0m in \u001b[0;36mrun_cell_magic\u001b[0;34m(self, magic_name, line, cell)\u001b[0m\n\u001b[1;32m   2115\u001b[0m             \u001b[0mmagic_arg_s\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvar_expand\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstack_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2116\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuiltin_trap\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2117\u001b[0;31m                 \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmagic_arg_s\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcell\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2118\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2119\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<decorator-gen-60>\u001b[0m in \u001b[0;36mtime\u001b[0;34m(self, line, cell, local_ns)\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/IPython/core/magic.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(f, *a, **k)\u001b[0m\n\u001b[1;32m    186\u001b[0m     \u001b[0;31m# but it's overkill for just that one bit of state.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    187\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mmagic_deco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 188\u001b[0;31m         \u001b[0mcall\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    189\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    190\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcallable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/IPython/core/magics/execution.py\u001b[0m in \u001b[0;36mtime\u001b[0;34m(self, line, cell, local_ns)\u001b[0m\n\u001b[1;32m   1191\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1192\u001b[0m             \u001b[0mst\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclock2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1193\u001b[0;31m             \u001b[0mexec\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mglob\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlocal_ns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1194\u001b[0m             \u001b[0mend\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclock2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1195\u001b[0m             \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<timed exec>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'predicted_ranks' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:53.850802Z",
          "start_time": "2020-04-02T16:40:53.847331Z"
        },
        "id": "Khe8CVAZ0sNX"
      },
      "source": [
        "# produce the ranking into a readable table (dataframe it is)\n",
        "ranks_df = pd.DataFrame(predicted_ranks)\n",
        "ranks_df.columns = item_category_scaled.index\n",
        "ranks_df.index = customer_features.index\n",
        "ranks_df = ranks_df.T"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "ExecuteTime": {
          "end_time": "2020-04-02T16:40:54.438995Z",
          "start_time": "2020-04-02T16:40:54.409697Z"
        },
        "id": "COlXlZhL0sNX",
        "outputId": "b58318a5-80be-4747-8aaf-17f696d20025"
      },
      "source": [
        "ranks_df.head(5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Customer ID</th>\n",
              "      <th>266785</th>\n",
              "      <th>266794</th>\n",
              "      <th>266799</th>\n",
              "      <th>266804</th>\n",
              "      <th>266805</th>\n",
              "      <th>266806</th>\n",
              "      <th>266809</th>\n",
              "      <th>266813</th>\n",
              "      <th>266814</th>\n",
              "      <th>266815</th>\n",
              "      <th>...</th>\n",
              "      <th>275245</th>\n",
              "      <th>275246</th>\n",
              "      <th>275247</th>\n",
              "      <th>275249</th>\n",
              "      <th>275250</th>\n",
              "      <th>275252</th>\n",
              "      <th>275255</th>\n",
              "      <th>275257</th>\n",
              "      <th>275261</th>\n",
              "      <th>275265</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Material</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1-1-Flagship store</th>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1-1-MBR</th>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1-1-TeleShop</th>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1-1-e-Shop</th>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1-3-Flagship store</th>\n",
              "      <td>6</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>10</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 3899 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "Customer ID         266785  266794  266799  266804  266805  266806  266809  \\\n",
              "Material                                                                     \n",
              "1-1-Flagship store       1       3       3       1       3       2       5   \n",
              "1-1-MBR                  7       4       7       2       4       3       8   \n",
              "1-1-TeleShop             8       5       8       9       9       4       9   \n",
              "1-1-e-Shop               2       6       4       3       5       5       6   \n",
              "1-3-Flagship store       6       7       5       4       6       6      10   \n",
              "\n",
              "Customer ID         266813  266814  266815   ...    275245  275246  275247  \\\n",
              "Material                                     ...                             \n",
              "1-1-Flagship store       4       2       1   ...         1       2       3   \n",
              "1-1-MBR                  5       6       7   ...         2       7       4   \n",
              "1-1-TeleShop             6       7      10   ...        10       8       5   \n",
              "1-1-e-Shop               7       3       2   ...         3       3       6   \n",
              "1-3-Flagship store       8       8       3   ...         4       4       7   \n",
              "\n",
              "Customer ID         275249  275250  275252  275255  275257  275261  275265  \n",
              "Material                                                                    \n",
              "1-1-Flagship store       1       4       1       1       1       3       1  \n",
              "1-1-MBR                  7       7       2       7       7       4       2  \n",
              "1-1-TeleShop             8      10       3       9       8       5      11  \n",
              "1-1-e-Shop               2       5       4       2       2       6       3  \n",
              "1-3-Flagship store       3       6       5       3       3       7       4  \n",
              "\n",
              "[5 rows x 3899 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 68
        }
      ]
    }
  ]{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "프로젝트4_김현재_2021.1",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6UJzjx5UzTyj"
      },
      "source": [
        "Section 4 Project 가이드라인\n",
        "소요시간 : 7 min\n",
        "Section 4 Project의 태스크 가이드라인\n",
        "\n",
        "이번 프로젝트의 목적은\n",
        "\n",
        "내가 설정한 포지션에서 적합한 가설을 세우고 가설을 검증해본다.\n",
        "가설 검증을 위한 딥러닝 파이프라인을 구축해보는 데 의의가 있다.\n",
        "(파이프라인이 완벽하지 않아도 되며, 큰 가설의 일부(곁 가지)에 대한 검증을 목표로 해도 괜찮다.\n",
        "더 나아가는 방향에 대해서는 이후 프로젝트를 통해서 연계해 나가도 좋다)\n",
        "\n",
        "### 1. 관심데이터 선정 Plan A, Plan B\n",
        "연구자에겐 가장 어려운 주제이다. \"지금 무엇을 해야 할까?\"\n",
        "보통 초기 연구자는 연구실(회사)에서 하던 연구방향에서 +@를 구현하는 것이 대부분이다. (석사과정, 사원급)\n",
        "우리는 아직 연구소가 없다.\n",
        "이런 상황에서 연구주제를 정해야 하는데, 연구주제는 떠오르지 않고, 써보고 싶은 Method만 떠오르는 것이 아직 우리의 모습이다. 그렇기 때문에 연구주제를 정하기 위해서는 내가 취직하고 싶은 회사, 그 회사의 연구/사업 내용을 골라보고, 풀고자 하는 문제와 비슷한 데이터를 찾고, 그에 맞는 기술력을 키워보는 것을 목표로 한다.\n",
        "\n",
        "예) 현대자동차, 소카 등의 자율주행차 관련 업무를 목표로 하고 있다면, 관련 기술을 시험해볼만한 내용이 있는 지 찾아보아야 한다.\n",
        "예) 카카오, 네이버 등을 목표로 한다면 음성인식, 음성생성에 대한 데이터 셋을 찾아보면 좋다.\n",
        "예) 네이버 웹툰 등을 목표로 한다면, GAN등의 생성모델과 보안(fingerprint recognition) 관련 딥러닝 기술을 적용해볼 데이터를 찾는 게 좋다.\n",
        "예) airbnb와 같이 숙박업에서 근무하고 싶다면, 고객데이터의 통계분석이 필요하며, 추천시스템을 적용해 볼 수 있는 데이터를 찾는 것이 좋다.\n",
        "\n",
        "추천데이터,\n",
        "피부암 진단\n",
        "\n",
        "넷플릭스 영화와 드라마\n",
        "\n",
        "한국 유튜브 통계\n",
        "\n",
        "라면 평가\n",
        "\n",
        "목소리 성별 분류\n",
        "\n",
        "음악 레이블 데이터셋\n",
        "\n",
        "### 2. 데이터 선정 이유 (단순히 관심있어서는 No. 내 취직방향에 대해서 고민해보기)\n",
        "위의 예시와 같이 내가 선정한 데이터 그리고 그 데이터를 가공하면서 얻은 지식과 경험을 \"어떤 회사에서 높이 살 수 있을까?\", \"어디 회사의 어느부분에 적용해 볼 수 있을까\"를 생각해서 기록해본다.\n",
        "\n",
        "### 3. 데이터를 이용한 가설\n",
        "데이터를 선정함과 동시에 데이터를 통해서 내가 무엇을 해볼 수 있을 지 가설을 세우는 것이 중요하다.\n",
        "쓸모있어야 한다. 데이터기반의 사고방식, data-driven의 마음가짐을 section1-2에서 배웠다. 이번에는 그것들을 심화시켜서 진짜 필요한 기술을 찾아볼 수 있는 생각을 해보자.\n",
        "실제로는 쓸모없을 지 몰라도 적어도 내 생각에는 정말 쓸모있다고 생각하면 좋다.\n",
        "\n",
        "### 4. 데이터 전처리\n",
        "가설을 정했다면, 데이터의 가공을 시작해본다. 바로 적용이 될 수 있는 데이터도 있겠지만, 내가 전처리를 좀 해봐야 한다.\n",
        "\n",
        "데이터의 정규화\n",
        "노이즈 제거\n",
        "outlier 제거\n",
        "타겟 레이블(label or Ground Truth) 생성 혹은 선택 등이 필요하다.\n",
        "\n",
        "### 5. 딥러닝 방식 적용\n",
        "내가 가진 문제를 굳이 딥러닝을 적용해야 하는 지 확인할 필요가 있다.\n",
        "신경망 첫 시간에 엄청 큰 검을 들고 스테이크를 썰던 이미지를 기억하는가?\n",
        "딥러닝의 가정 큰 장점은 어려운 문제를 더 어렵게 풀지만, 그 결과가 끝내주게 좋았을 때에 있다.\n",
        "성능을 올리지 못하는 딥러닝 기술이 의미가 있을까?\n",
        "\n",
        "### 6. Chance Level이 넘는 지 확인 (if not) Plan B 적용\n",
        "binary문제 0 아니면 1인 문제를 해결하면 chance level이 0.5(50%)이다. 하나로 찍는 머신이 있다고 가정해도 보통 50%정도는 달성하기 때문이다.\n",
        "내가 만든 문제가 MNIST처럼 10개의 classification문제를 푼다고 하면 chance level이 0.1(10%)인 것이다.\n",
        "가장 전통적인 ML 혹은 기본적인 신경망에 넣고 학습/테스트를 해 보았을 때 chance 수준으로 나오는 문제라면 딥러닝을 적용했을 때 과연 잘 나올 수 있을 지 반문하며, 데이터를 다시 들여다 보거나 내 가설이 틀렸을 수 있다는 것을 확인할 수 있어야 한다.\n",
        "\n",
        "### 7. CV 적용하기\n",
        "모델을 만들어서 어느정도 성능이 나왔다면, CV을 통해서 일반화될 가능성이 있는 지 확인해보자. 5-fold, 10-fold로 수행해보면, 일반화가 어느정도 되는 지 알 수 있고,\n",
        "더불어 파라미터를 변경하면서 최적화까지 해볼 수 있다.\n",
        "\n",
        "### 8. Requirements.txt 만들고, 학습된 모델은 저장해보자.\n",
        "내가 만든 딥러닝 모델을 단 한번만 사용하지 않을 것이기 때문에 모델을 저장하고, 또 새로운 환경에서 바로 구현할 수 있도록 Requirements.txt를 만들어보자.\n",
        "언제까지 colab만 쓸 수 없기 때문이다.\n",
        "\n",
        "### 9. 재구현하기\n",
        "위에서 만든 Requirements.txt 를 이용하여 가상공간(conda, jupyter lab 등) 및 독립된 pc에서 같은 프로젝트를 진행해보자.\n",
        "재구현이 되지 않으면, 아무도 이 결과에 대해서 믿어줄 수 없다. 따라서 재구현 할 수 있도록 Seed를 고정하는 작업을 했는 지 돌아보자."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "u4srxYWMo-PU"
      },
      "source": [
        "\n",
        "#### 1. 프로젝트 목적 \n",
        " - 프로젝트 배경/클라이언트 요구사항 : 네이버 쇼핑 고객에게 상품 추천 알고리즘 만들기.\n",
        " - 증명하고자 하는 가설 : \n",
        " - [ ] 1) 시간이 지날수록 유저의 선호도가 바뀔 수 있기 때문에, 기본 모델에 시간 데이터를 추가한 모델의 성능이 더 높을 것이다. \n",
        " - [ ] 2) 아이템 베이스 모델이 유저베이스 모델보다 추천 성능이 좋을 것이다. \n",
        "\n",
        "#### 데이터셋 텐서플로우 모델에 적용하는 것 실패. \n",
        "\n",
        "# 추천 알고리즘 더 알아보고 진행하기 \n",
        " - 카카오, 네이버, 쿠팡을 비롯한 커머스/페이 업계의 고객 데이터를 바탕으로 아래의 가설을 입증하고자 한다. (데이터는 국내 커머스 자료 대신 해외 커머스 자료로 대체)\n",
        " - (세부가설1) 특정 상품 구매자/비구매자 분류 데이터로 구매자 예측 ( 머신러닝 모델이 딥러닝 lstm 모델보다 좋을지? 검증해보기로 근데 이게 더 어려울 듯. 머신러닝에서는 특성을 내가 골라줘야 하기 때문에. 차라리 오토인코더로 주요 피쳐 추출한 다음, 딥러닝에서 성능개선하는 방향으로 가야 할듯 ) \n",
        " - (세부가설2) 특정 상품 매출데이터 시계열 분석으로 매출액 예측\n",
        " - 참고)네이버 쇼핑 카테고리 매칭 딥러닝 활용사례: https://d2.naver.com/helloworld/1264836\n",
        " - 추천 알고리즘 참고자료: https://medium.com/code-states/%EC%B6%94%EC%B2%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-4e5044960bdd\n",
        " - 유저 그룹의 데이터를 비교해야 함 / 근데 굳이 그룹이 아니라 개인별 비교 하면 되지 않나? \n",
        " - 클러스터링 활용해야 함.\n",
        " - 후보생성 네트워크 : 유저의 기록을 인풋으로 받은 후, 관련성 높은 타겟(여기서는 상품)을 모아서 한 그룹으로 만들어 상품의 양을 줄임. 여기서 생성된 후보들이 우리가 추천해주려는 사용자와 제일 관련있다. \n",
        " - 순위 네트워크: 각각의 상품에 대한 유저 행동 데이터 분석하는 목적함수를 만들어, 각 상품에 대한 예측 평가 점수를 계산하여 제일 높은 점수의 상품이 유저에게 보여짐. \n",
        " - 딥러닝 기반 추천시스템은 다르 출처에서 생성된 상품도 혼합하여 추천할 수 있도록 설계되어 있음. \n",
        " - 추천 시스템은 특정 시간 t 안에 사용자(U)와 내용(C)을 기반으로 한 코퍼스(Corpus, V)에서 수백만 개의 비디오 클래스(i) 중 특정 영상 (wt)을 정확하게 분류할 수 있는 멀티 클래스 문제로 여겨진다.\n",
        " - 측정 기준: 표준적인 성능 측정 기준도 있지만, 추천 시스템만을 위한 측정 기준도 존재한다. 대표적으로 Recall@k and Precision@k, Average Recall@k, 그리고 Average Precision@k가 있다. 추천 시스템의 성능을 확인하는 기준에 대한 이 논문도 확인해보길 바란다.\n",
        " - 분류 알고리즘으로 추천 시스템을 만들게 되면 negative samples를 만드는 것을 추천한다. 주의할 점은, 추천된 아이템을 유저가 샀다고 해서 그 물건을 positive sample에 추가하고 나머지를 negative sample에 추가해서는 안된다. ===> 왜인지 알아보기\n",
        " - 참고 논문: https://arxiv.org/pdf/1803.00710.pdf\n",
        " - 논문: 아이템 베이스 추천알고리즘 Item-Based Collaborative Filtering Recommendation\n",
        "Algorithms (http://files.grouplens.org/papers/www10_sarwar.pdf)\n",
        "\n",
        "\n",
        "- [ ] 본 분석의 한계점/개선할 점: \n",
        " - 1) 이커머스의 경우 고객 구매 행동이 아래와 같은 순서로 이어짐. 따라서 아래 각 페이지별/세션별 고객 행동 데이터를 추천모델에 추가 적용하면 더 좋은 추천이 될 것으로 판단됨.\n",
        "  (검색-> 조회되는 상품 랭킹별로 살펴보고 -> 클릭하고 다시 다른 상품 조회하러 가거나 구매하거나 -> 다시 페이지 2번째 -> 클릭 or back -> (...) -> buy or leave. \n",
        " - 2) 2016~2018년도 데이터라는 점. / 새로운 데이터로 적용해본 후 피드백 필요함.\n",
        " - 협업 필터링: 사용자 A, B의 영화 Y에 대한 점수 평점이 유사할 경우, 사용자 A,B의 취향이 유사할 거라고 가정하고 추천하는 시스템. 즉, 영화 Y에 대한 좋은 평점을 매겼으면, 그와 유사한 영화를 추천하는 셈. \n",
        " - 아이템 기반: 위와 원리는 갖고, 아이템의 유사도로 추천하는 것. / 최소 평가 인원이 너무 적을 경우 결과에 대한 신뢰도가 떨어질 수 있으므로, '최소 평가 인원은 10명 이상으로 하기로 한다.' 등의 제약조건이 필요. \n",
        " - **아마존, 넷플릭스에서는 대부분 아이템 기반 유사도를 활용한다고 함.**  결론부터 말하자면, 아마존과 넷플릭스를 비롯한 서비스에서는 대부분 아이템 기반을 활용한다고 알려져 있다. 또 적절한 UX를 위해서라면, 유저가 아이템을 평가하는 순간, 다른 아이템을 추천할 수 있어야 하는데, 매 평가시마다 유사도 정보를 업데이트하는 것은 현실적으로 어려울 것이다. 아이템 기반에서는 일정 기간마다 유사도를 업데이트 하는 것으로도 충분히 위와 같은 적절한 UX를 제공할 수 있다.\n",
        " Some challenges with similarity-based systems¶\n",
        "The assumption that a rating is defined by all the user's ratings for co-rated items is not necessarily true or accurate\n",
        "\n",
        "bias correction (lack of)\n",
        "\n",
        "co-rated items look at in isolation\n",
        "\n",
        "choice of similarity measure\n",
        "\n",
        "## 모델 레퍼런스 자료: https://github.com/piyushpathak03/Recommendation-systems/blob/master/Recommendation%20Engine/Movie%20Recommendation%20using%20KNN/KNNRecommendation.ipynb\n",
        "\n",
        "#### 2. 목차\n",
        " - 1. 데이터 로드, 전처리\n",
        " - 2. 기본 모델\n",
        " - 3. 성능 개선 결과 (cv 적용, 하이퍼파라미터 조정) \n",
        " - 4. 결과 분석, 해석\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_xH_O9bvo5KZ"
      },
      "source": [
        "### ※ requirements.txt "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uVCSr-mho4m6"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8zxTx_9j6TZz"
      },
      "source": [
        "### 1. 데이터 로드, 전처리"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZYGuNMA4oame"
      },
      "source": [
        "# 원본 데이터: 브라질 Olist.com 퍼블릭 데이터셋 https://www.kaggle.com/olistbr/brazilian-ecommerce?select=olist_products_dataset.csv\n",
        "\n",
        "# input 데이터 \n",
        "## user rating 데이터 \n",
        "## 아이템 rating 데이터 \n",
        "\n",
        "# Goal : Predict the blanks in the utility matrix(user&item rating)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Al0hRapMh2y-",
        "outputId": "6fca1958-4a77-4850-88a0-4e0919efea7d"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive') "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JpUnTPEp3v-Q",
        "outputId": "bc83a4c7-0374-4455-b8df-866dc6b264ff"
      },
      "source": [
        "amazon = pd.read_csv('/content/drive/MyDrive/amazon_products/1429_1.csv')\n",
        "amazon.columns"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py:2718: DtypeWarning: Columns (1,10) have mixed types.Specify dtype option on import or set low_memory=False.\n",
            "  interactivity=interactivity, compiler=compiler, result=result)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'name', 'asins', 'brand', 'categories', 'keys', 'manufacturer',\n",
              "       'reviews.date', 'reviews.dateAdded', 'reviews.dateSeen',\n",
              "       'reviews.didPurchase', 'reviews.doRecommend', 'reviews.id',\n",
              "       'reviews.numHelpful', 'reviews.rating', 'reviews.sourceURLs',\n",
              "       'reviews.text', 'reviews.title', 'reviews.userCity',\n",
              "       'reviews.userProvince', 'reviews.username'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "KudAlZk23wHL",
        "outputId": "ec5625b3-d2f0-459c-b012-1759eb8aebb0"
      },
      "source": [
        "amazon[['id', 'name', 'categories', 'reviews.rating', \n",
        "        'reviews.username']]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>categories</th>\n",
              "      <th>reviews.rating</th>\n",
              "      <th>reviews.username</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>Electronics,iPad &amp; Tablets,All Tablets,Fire Ta...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Adapter</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>Electronics,iPad &amp; Tablets,All Tablets,Fire Ta...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>truman</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>Electronics,iPad &amp; Tablets,All Tablets,Fire Ta...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>DaveZ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>Electronics,iPad &amp; Tablets,All Tablets,Fire Ta...</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Shacks</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>Electronics,iPad &amp; Tablets,All Tablets,Fire Ta...</td>\n",
              "      <td>5.0</td>\n",
              "      <td>explore42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34655</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Computers/Tablets &amp; Networking,Tablet &amp; eBook ...</td>\n",
              "      <td>3.0</td>\n",
              "      <td>Kris</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34656</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Computers/Tablets &amp; Networking,Tablet &amp; eBook ...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Jonathan Stewart</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34657</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Computers/Tablets &amp; Networking,Tablet &amp; eBook ...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>J Lawson</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34658</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Computers/Tablets &amp; Networking,Tablet &amp; eBook ...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Just the Buyer</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34659</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Computers/Tablets &amp; Networking,Tablet &amp; eBook ...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>sandi</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>34660 rows × 5 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         id  ...  reviews.username\n",
              "0      AVqkIhwDv8e3D1O-lebb  ...           Adapter\n",
              "1      AVqkIhwDv8e3D1O-lebb  ...            truman\n",
              "2      AVqkIhwDv8e3D1O-lebb  ...             DaveZ\n",
              "3      AVqkIhwDv8e3D1O-lebb  ...            Shacks\n",
              "4      AVqkIhwDv8e3D1O-lebb  ...         explore42\n",
              "...                     ...  ...               ...\n",
              "34655  AVpfiBlyLJeJML43-4Tp  ...              Kris\n",
              "34656  AVpfiBlyLJeJML43-4Tp  ...  Jonathan Stewart\n",
              "34657  AVpfiBlyLJeJML43-4Tp  ...          J Lawson\n",
              "34658  AVpfiBlyLJeJML43-4Tp  ...    Just the Buyer\n",
              "34659  AVpfiBlyLJeJML43-4Tp  ...             sandi\n",
              "\n",
              "[34660 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8fFVQg4h5kzS",
        "outputId": "b90978bd-b7dd-4a16-de7f-d46bea4ee592"
      },
      "source": [
        "amazon['id'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "AVphgVaX1cnluZ0-DR74    10966\n",
              "AVpfl8cLLJeJML43AE3S     6619\n",
              "AV1YE_muvKc47QAVgpwE     5056\n",
              "AV1YnRtnglJLPUi8IJmV     3176\n",
              "AVqkIhwDv8e3D1O-lebb     2814\n",
              "AVqVGWLKnnc1JgDc3jF1     1685\n",
              "AVpjEN4jLJeJML43rpUe     1038\n",
              "AVpfpK8KLJeJML43BCuD      636\n",
              "AVphPmHuilAPnD_x3E5h      580\n",
              "AVsRjfwAU2_QcyX9PHqe      402\n",
              "AV1YnR7wglJLPUi8IJmi      372\n",
              "AVqVGWQDv8e3D1O-ldFr      270\n",
              "AVpidLjVilAPnD_xEVpI      256\n",
              "AVqVGZNvQMlgsOJE6eUY      212\n",
              "AVqkIiKWnnc1JgDc3khH      158\n",
              "AVpfIfGA1cnluZ0-emyp       73\n",
              "AVqVGZO3nnc1JgDc3jGK       67\n",
              "AVpftoij1cnluZ0-p5n2       51\n",
              "AVqkIdntQMlgsOJE6fuB       30\n",
              "AVpfBEWcilAPnD_xTGb7       19\n",
              "AVpe7AsMilAPnD_xQ78G       19\n",
              "AVzRlorb-jtxr-f3ygvQ       16\n",
              "AVpf_4sUilAPnD_xlwYV       15\n",
              "AVqkIj9snnc1JgDc3khU       14\n",
              "AVpfiBlyLJeJML43-4Tp       13\n",
              "AVphLY7v1cnluZ0-_Ty0       13\n",
              "AVpf_znpilAPnD_xlvAF       10\n",
              "AVpgdkC8ilAPnD_xsvyi       10\n",
              "AVpggqsrLJeJML43O5zp        8\n",
              "AVzvXXwEvKc47QAVfRhx        8\n",
              "AVqkIhxunnc1JgDc3kg_        7\n",
              "AVzoGHhAglJLPUi8GfzY        7\n",
              "AVqVGZN9QMlgsOJE6eUZ        6\n",
              "AVpg3q4RLJeJML43TxA_        6\n",
              "AVpff7_VilAPnD_xc1E_        6\n",
              "AVph0EeEilAPnD_x9myq        6\n",
              "AVpe9CMS1cnluZ0-aoC5        5\n",
              "AVpfwS_CLJeJML43DH5w        4\n",
              "AVzvXXxbvKc47QAVfRhy        3\n",
              "AVpioXbb1cnluZ0-PImd        2\n",
              "AVqkEM34QMlgsOJE6e8q        1\n",
              "AVpe8PEVilAPnD_xRYIi        1\n",
              "Name: id, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "yoj-tLR2iTt9",
        "outputId": "2f6c1541-2941-49c9-abe8-b753acd49dc6"
      },
      "source": [
        "# 데이터 로드, 전처리 \n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "order = pd.read_csv('/content/drive/MyDrive/archive (20)/olist_order_items_dataset.csv')\n",
        "\n",
        "category = pd.read_csv('/content/drive/MyDrive/archive (20)/product_category_name_translation.csv')\n",
        "category\n",
        "\n",
        "products = pd.read_csv('/content/drive/MyDrive/archive (20)/olist_products_dataset.csv')\n",
        "products_ = products.merge(category, how='left', on='product_category_name')\n",
        "products_\n",
        "products\n",
        "category"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>product_category_name</th>\n",
              "      <th>product_category_name_english</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>beleza_saude</td>\n",
              "      <td>health_beauty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>computers_accessories</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>automotivo</td>\n",
              "      <td>auto</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>cama_mesa_banho</td>\n",
              "      <td>bed_bath_table</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>furniture_decor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>flores</td>\n",
              "      <td>flowers</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>artes_e_artesanato</td>\n",
              "      <td>arts_and_craftmanship</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68</th>\n",
              "      <td>fraldas_higiene</td>\n",
              "      <td>diapers_and_hygiene</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>fashion_roupa_infanto_juvenil</td>\n",
              "      <td>fashion_childrens_clothes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>seguros_e_servicos</td>\n",
              "      <td>security_and_services</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>71 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "            product_category_name product_category_name_english\n",
              "0                    beleza_saude                 health_beauty\n",
              "1          informatica_acessorios         computers_accessories\n",
              "2                      automotivo                          auto\n",
              "3                 cama_mesa_banho                bed_bath_table\n",
              "4                moveis_decoracao               furniture_decor\n",
              "..                            ...                           ...\n",
              "66                         flores                       flowers\n",
              "67             artes_e_artesanato         arts_and_craftmanship\n",
              "68                fraldas_higiene           diapers_and_hygiene\n",
              "69  fashion_roupa_infanto_juvenil     fashion_childrens_clothes\n",
              "70             seguros_e_servicos         security_and_services\n",
              "\n",
              "[71 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VVYU7wqJz99M"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "J-Bo6foBzvte",
        "outputId": "8b0915fd-ce8a-4dc8-9e3c-ef94fc77ee54"
      },
      "source": [
        "\n",
        "orders = pd.read_csv('/content/drive/MyDrive/archive (20)/olist_orders_dataset.csv')\n",
        "orders"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>order_id</th>\n",
              "      <th>customer_id</th>\n",
              "      <th>order_status</th>\n",
              "      <th>order_purchase_timestamp</th>\n",
              "      <th>order_approved_at</th>\n",
              "      <th>order_delivered_carrier_date</th>\n",
              "      <th>order_delivered_customer_date</th>\n",
              "      <th>order_estimated_delivery_date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>e481f51cbdc54678b7cc49136f2d6af7</td>\n",
              "      <td>9ef432eb6251297304e76186b10a928d</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-10-02 10:56:33</td>\n",
              "      <td>2017-10-02 11:07:15</td>\n",
              "      <td>2017-10-04 19:55:00</td>\n",
              "      <td>2017-10-10 21:25:13</td>\n",
              "      <td>2017-10-18 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>53cdb2fc8bc7dce0b6741e2150273451</td>\n",
              "      <td>b0830fb4747a6c6d20dea0b8c802d7ef</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-07-24 20:41:37</td>\n",
              "      <td>2018-07-26 03:24:27</td>\n",
              "      <td>2018-07-26 14:31:00</td>\n",
              "      <td>2018-08-07 15:27:45</td>\n",
              "      <td>2018-08-13 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>47770eb9100c2d0c44946d9cf07ec65d</td>\n",
              "      <td>41ce2a54c0b03bf3443c3d931a367089</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-08-08 08:38:49</td>\n",
              "      <td>2018-08-08 08:55:23</td>\n",
              "      <td>2018-08-08 13:50:00</td>\n",
              "      <td>2018-08-17 18:06:29</td>\n",
              "      <td>2018-09-04 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>949d5b44dbf5de918fe9c16f97b45f8a</td>\n",
              "      <td>f88197465ea7920adcdbec7375364d82</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-11-18 19:28:06</td>\n",
              "      <td>2017-11-18 19:45:59</td>\n",
              "      <td>2017-11-22 13:39:59</td>\n",
              "      <td>2017-12-02 00:28:42</td>\n",
              "      <td>2017-12-15 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ad21c59c0840e6cb83a9ceb5573f8159</td>\n",
              "      <td>8ab97904e6daea8866dbdbc4fb7aad2c</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-02-13 21:18:39</td>\n",
              "      <td>2018-02-13 22:20:29</td>\n",
              "      <td>2018-02-14 19:46:34</td>\n",
              "      <td>2018-02-16 18:17:02</td>\n",
              "      <td>2018-02-26 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99436</th>\n",
              "      <td>9c5dedf39a927c1b2549525ed64a053c</td>\n",
              "      <td>39bd1228ee8140590ac3aca26f2dfe00</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-03-09 09:54:05</td>\n",
              "      <td>2017-03-09 09:54:05</td>\n",
              "      <td>2017-03-10 11:18:03</td>\n",
              "      <td>2017-03-17 15:08:01</td>\n",
              "      <td>2017-03-28 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99437</th>\n",
              "      <td>63943bddc261676b46f01ca7ac2f7bd8</td>\n",
              "      <td>1fca14ff2861355f6e5f14306ff977a7</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-02-06 12:58:58</td>\n",
              "      <td>2018-02-06 13:10:37</td>\n",
              "      <td>2018-02-07 23:22:42</td>\n",
              "      <td>2018-02-28 17:37:56</td>\n",
              "      <td>2018-03-02 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99438</th>\n",
              "      <td>83c1379a015df1e13d02aae0204711ab</td>\n",
              "      <td>1aa71eb042121263aafbe80c1b562c9c</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-08-27 14:46:43</td>\n",
              "      <td>2017-08-27 15:04:16</td>\n",
              "      <td>2017-08-28 20:52:26</td>\n",
              "      <td>2017-09-21 11:24:17</td>\n",
              "      <td>2017-09-27 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99439</th>\n",
              "      <td>11c177c8e97725db2631073c19f07b62</td>\n",
              "      <td>b331b74b18dc79bcdf6532d51e1637c1</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-01-08 21:28:27</td>\n",
              "      <td>2018-01-08 21:36:21</td>\n",
              "      <td>2018-01-12 15:35:03</td>\n",
              "      <td>2018-01-25 23:32:54</td>\n",
              "      <td>2018-02-15 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99440</th>\n",
              "      <td>66dea50a8b16d9b4dee7af250b4be1a5</td>\n",
              "      <td>edb027a75a1449115f6b43211ae02a24</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-03-08 20:57:30</td>\n",
              "      <td>2018-03-09 11:20:28</td>\n",
              "      <td>2018-03-09 22:11:59</td>\n",
              "      <td>2018-03-16 13:08:30</td>\n",
              "      <td>2018-04-03 00:00:00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>99441 rows × 8 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                               order_id  ... order_estimated_delivery_date\n",
              "0      e481f51cbdc54678b7cc49136f2d6af7  ...           2017-10-18 00:00:00\n",
              "1      53cdb2fc8bc7dce0b6741e2150273451  ...           2018-08-13 00:00:00\n",
              "2      47770eb9100c2d0c44946d9cf07ec65d  ...           2018-09-04 00:00:00\n",
              "3      949d5b44dbf5de918fe9c16f97b45f8a  ...           2017-12-15 00:00:00\n",
              "4      ad21c59c0840e6cb83a9ceb5573f8159  ...           2018-02-26 00:00:00\n",
              "...                                 ...  ...                           ...\n",
              "99436  9c5dedf39a927c1b2549525ed64a053c  ...           2017-03-28 00:00:00\n",
              "99437  63943bddc261676b46f01ca7ac2f7bd8  ...           2018-03-02 00:00:00\n",
              "99438  83c1379a015df1e13d02aae0204711ab  ...           2017-09-27 00:00:00\n",
              "99439  11c177c8e97725db2631073c19f07b62  ...           2018-02-15 00:00:00\n",
              "99440  66dea50a8b16d9b4dee7af250b4be1a5  ...           2018-04-03 00:00:00\n",
              "\n",
              "[99441 rows x 8 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "nyEMTxh2r6EQ",
        "outputId": "c72ff8e5-d8c4-420b-eb52-c5b5932a7f66"
      },
      "source": [
        "\n",
        "order_ = order.merge(orders, how='left', on='order_id')\n",
        "order_ = order_.merge(products_, how='left', on='product_id')\n",
        "order_"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>order_id</th>\n",
              "      <th>order_item_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>seller_id</th>\n",
              "      <th>shipping_limit_date</th>\n",
              "      <th>price</th>\n",
              "      <th>freight_value</th>\n",
              "      <th>customer_id</th>\n",
              "      <th>order_status</th>\n",
              "      <th>order_purchase_timestamp</th>\n",
              "      <th>order_approved_at</th>\n",
              "      <th>order_delivered_carrier_date</th>\n",
              "      <th>order_delivered_customer_date</th>\n",
              "      <th>order_estimated_delivery_date</th>\n",
              "      <th>product_category_name</th>\n",
              "      <th>product_name_lenght</th>\n",
              "      <th>product_description_lenght</th>\n",
              "      <th>product_photos_qty</th>\n",
              "      <th>product_weight_g</th>\n",
              "      <th>product_length_cm</th>\n",
              "      <th>product_height_cm</th>\n",
              "      <th>product_width_cm</th>\n",
              "      <th>product_category_name_english</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>00010242fe8c5a6d1ba2dd792cb16214</td>\n",
              "      <td>1</td>\n",
              "      <td>4244733e06e7ecb4970a6e2683c13e61</td>\n",
              "      <td>48436dade18ac8b2bce089ec2a041202</td>\n",
              "      <td>2017-09-19 09:45:35</td>\n",
              "      <td>58.90</td>\n",
              "      <td>13.29</td>\n",
              "      <td>3ce436f183e68e07877b285a838db11a</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-09-13 08:59:02</td>\n",
              "      <td>2017-09-13 09:45:35</td>\n",
              "      <td>2017-09-19 18:34:16</td>\n",
              "      <td>2017-09-20 23:43:48</td>\n",
              "      <td>2017-09-29 00:00:00</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>58.0</td>\n",
              "      <td>598.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>650.0</td>\n",
              "      <td>28.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>14.0</td>\n",
              "      <td>cool_stuff</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>00018f77f2f0320c557190d7a144bdd3</td>\n",
              "      <td>1</td>\n",
              "      <td>e5f2d52b802189ee658865ca93d83a8f</td>\n",
              "      <td>dd7ddc04e1b6c2c614352b383efe2d36</td>\n",
              "      <td>2017-05-03 11:05:13</td>\n",
              "      <td>239.90</td>\n",
              "      <td>19.93</td>\n",
              "      <td>f6dd3ec061db4e3987629fe6b26e5cce</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-04-26 10:53:06</td>\n",
              "      <td>2017-04-26 11:05:13</td>\n",
              "      <td>2017-05-04 14:35:00</td>\n",
              "      <td>2017-05-12 16:04:24</td>\n",
              "      <td>2017-05-15 00:00:00</td>\n",
              "      <td>pet_shop</td>\n",
              "      <td>56.0</td>\n",
              "      <td>239.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>30000.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>pet_shop</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>000229ec398224ef6ca0657da4fc703e</td>\n",
              "      <td>1</td>\n",
              "      <td>c777355d18b72b67abbeef9df44fd0fd</td>\n",
              "      <td>5b51032eddd242adc84c38acab88f23d</td>\n",
              "      <td>2018-01-18 14:48:30</td>\n",
              "      <td>199.00</td>\n",
              "      <td>17.87</td>\n",
              "      <td>6489ae5e4333f3693df5ad4372dab6d3</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-01-14 14:33:31</td>\n",
              "      <td>2018-01-14 14:48:30</td>\n",
              "      <td>2018-01-16 12:36:48</td>\n",
              "      <td>2018-01-22 13:19:16</td>\n",
              "      <td>2018-02-05 00:00:00</td>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>59.0</td>\n",
              "      <td>695.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3050.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>furniture_decor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>00024acbcdf0a6daa1e931b038114c75</td>\n",
              "      <td>1</td>\n",
              "      <td>7634da152a4610f1595efa32f14722fc</td>\n",
              "      <td>9d7a1d34a5052409006425275ba1c2b4</td>\n",
              "      <td>2018-08-15 10:10:18</td>\n",
              "      <td>12.99</td>\n",
              "      <td>12.79</td>\n",
              "      <td>d4eb9395c8c0431ee92fce09860c5a06</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-08-08 10:00:35</td>\n",
              "      <td>2018-08-08 10:10:18</td>\n",
              "      <td>2018-08-10 13:28:00</td>\n",
              "      <td>2018-08-14 13:32:39</td>\n",
              "      <td>2018-08-20 00:00:00</td>\n",
              "      <td>perfumaria</td>\n",
              "      <td>42.0</td>\n",
              "      <td>480.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>perfumery</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>00042b26cf59d7ce69dfabb4e55b4fd9</td>\n",
              "      <td>1</td>\n",
              "      <td>ac6c3623068f30de03045865e4e10089</td>\n",
              "      <td>df560393f3a51e74553ab94004ba5c87</td>\n",
              "      <td>2017-02-13 13:57:51</td>\n",
              "      <td>199.90</td>\n",
              "      <td>18.14</td>\n",
              "      <td>58dbd0b2d70206bf40e62cd34e84d795</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-02-04 13:57:51</td>\n",
              "      <td>2017-02-04 14:10:13</td>\n",
              "      <td>2017-02-16 09:46:09</td>\n",
              "      <td>2017-03-01 16:42:31</td>\n",
              "      <td>2017-03-17 00:00:00</td>\n",
              "      <td>ferramentas_jardim</td>\n",
              "      <td>59.0</td>\n",
              "      <td>409.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3750.0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>garden_tools</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112645</th>\n",
              "      <td>fffc94f6ce00a00581880bf54a75a037</td>\n",
              "      <td>1</td>\n",
              "      <td>4aa6014eceb682077f9dc4bffebc05b0</td>\n",
              "      <td>b8bc237ba3788b23da09c0f1f3a3288c</td>\n",
              "      <td>2018-05-02 04:11:01</td>\n",
              "      <td>299.99</td>\n",
              "      <td>43.41</td>\n",
              "      <td>b51593916b4b8e0d6f66f2ae24f2673d</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-04-23 13:57:06</td>\n",
              "      <td>2018-04-25 04:11:01</td>\n",
              "      <td>2018-04-25 12:09:00</td>\n",
              "      <td>2018-05-10 22:56:40</td>\n",
              "      <td>2018-05-18 00:00:00</td>\n",
              "      <td>utilidades_domesticas</td>\n",
              "      <td>43.0</td>\n",
              "      <td>1002.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>10150.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>housewares</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112646</th>\n",
              "      <td>fffcd46ef2263f404302a634eb57f7eb</td>\n",
              "      <td>1</td>\n",
              "      <td>32e07fd915822b0765e448c4dd74c828</td>\n",
              "      <td>f3c38ab652836d21de61fb8314b69182</td>\n",
              "      <td>2018-07-20 04:31:48</td>\n",
              "      <td>350.00</td>\n",
              "      <td>36.53</td>\n",
              "      <td>84c5d4fbaf120aae381fad077416eaa0</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-07-14 10:26:46</td>\n",
              "      <td>2018-07-17 04:31:48</td>\n",
              "      <td>2018-07-17 08:05:00</td>\n",
              "      <td>2018-07-23 20:31:55</td>\n",
              "      <td>2018-08-01 00:00:00</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>31.0</td>\n",
              "      <td>232.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>8950.0</td>\n",
              "      <td>45.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>38.0</td>\n",
              "      <td>computers_accessories</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112647</th>\n",
              "      <td>fffce4705a9662cd70adb13d4a31832d</td>\n",
              "      <td>1</td>\n",
              "      <td>72a30483855e2eafc67aee5dc2560482</td>\n",
              "      <td>c3cfdc648177fdbbbb35635a37472c53</td>\n",
              "      <td>2017-10-30 17:14:25</td>\n",
              "      <td>99.90</td>\n",
              "      <td>16.95</td>\n",
              "      <td>29309aa813182aaddc9b259e31b870e6</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-10-23 17:07:56</td>\n",
              "      <td>2017-10-24 17:14:25</td>\n",
              "      <td>2017-10-26 15:13:14</td>\n",
              "      <td>2017-10-28 12:22:22</td>\n",
              "      <td>2017-11-10 00:00:00</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>43.0</td>\n",
              "      <td>869.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>967.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>sports_leisure</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112648</th>\n",
              "      <td>fffe18544ffabc95dfada21779c9644f</td>\n",
              "      <td>1</td>\n",
              "      <td>9c422a519119dcad7575db5af1ba540e</td>\n",
              "      <td>2b3e4a2a3ea8e01938cabda2a3e5cc79</td>\n",
              "      <td>2017-08-21 00:04:32</td>\n",
              "      <td>55.99</td>\n",
              "      <td>8.72</td>\n",
              "      <td>b5e6afd5a41800fdf401e0272ca74655</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-08-14 23:02:59</td>\n",
              "      <td>2017-08-15 00:04:32</td>\n",
              "      <td>2017-08-15 19:02:53</td>\n",
              "      <td>2017-08-16 21:59:40</td>\n",
              "      <td>2017-08-25 00:00:00</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>56.0</td>\n",
              "      <td>1306.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>computers_accessories</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112649</th>\n",
              "      <td>fffe41c64501cc87c801fd61db3f6244</td>\n",
              "      <td>1</td>\n",
              "      <td>350688d9dc1e75ff97be326363655e01</td>\n",
              "      <td>f7ccf836d21b2fb1de37564105216cc1</td>\n",
              "      <td>2018-06-12 17:10:13</td>\n",
              "      <td>43.00</td>\n",
              "      <td>12.79</td>\n",
              "      <td>96d649da0cc4ff33bb408b199d4c7dcf</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-06-09 17:00:18</td>\n",
              "      <td>2018-06-09 17:10:13</td>\n",
              "      <td>2018-06-11 14:11:00</td>\n",
              "      <td>2018-06-14 17:56:26</td>\n",
              "      <td>2018-06-28 00:00:00</td>\n",
              "      <td>cama_mesa_banho</td>\n",
              "      <td>47.0</td>\n",
              "      <td>511.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>600.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>bed_bath_table</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>112650 rows × 23 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                                order_id  ...  product_category_name_english\n",
              "0       00010242fe8c5a6d1ba2dd792cb16214  ...                     cool_stuff\n",
              "1       00018f77f2f0320c557190d7a144bdd3  ...                       pet_shop\n",
              "2       000229ec398224ef6ca0657da4fc703e  ...                furniture_decor\n",
              "3       00024acbcdf0a6daa1e931b038114c75  ...                      perfumery\n",
              "4       00042b26cf59d7ce69dfabb4e55b4fd9  ...                   garden_tools\n",
              "...                                  ...  ...                            ...\n",
              "112645  fffc94f6ce00a00581880bf54a75a037  ...                     housewares\n",
              "112646  fffcd46ef2263f404302a634eb57f7eb  ...          computers_accessories\n",
              "112647  fffce4705a9662cd70adb13d4a31832d  ...                 sports_leisure\n",
              "112648  fffe18544ffabc95dfada21779c9644f  ...          computers_accessories\n",
              "112649  fffe41c64501cc87c801fd61db3f6244  ...                 bed_bath_table\n",
              "\n",
              "[112650 rows x 23 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 443
        },
        "id": "14J5Fi_jiTxD",
        "outputId": "cf4ede76-61d0-4fab-ff5b-e2deff606b52"
      },
      "source": [
        "customers = pd.read_csv('/content/drive/MyDrive/archive (20)/olist_customers_dataset.csv')\n",
        "\n",
        "order_ = order_.merge(customers, how='left', on = 'customer_id')\n",
        "order_"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>order_id</th>\n",
              "      <th>order_item_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>seller_id</th>\n",
              "      <th>shipping_limit_date</th>\n",
              "      <th>price</th>\n",
              "      <th>freight_value</th>\n",
              "      <th>customer_id</th>\n",
              "      <th>order_status</th>\n",
              "      <th>order_purchase_timestamp</th>\n",
              "      <th>order_approved_at</th>\n",
              "      <th>order_delivered_carrier_date</th>\n",
              "      <th>order_delivered_customer_date</th>\n",
              "      <th>order_estimated_delivery_date</th>\n",
              "      <th>product_category_name</th>\n",
              "      <th>product_name_lenght</th>\n",
              "      <th>product_description_lenght</th>\n",
              "      <th>product_photos_qty</th>\n",
              "      <th>product_weight_g</th>\n",
              "      <th>product_length_cm</th>\n",
              "      <th>product_height_cm</th>\n",
              "      <th>product_width_cm</th>\n",
              "      <th>product_category_name_english</th>\n",
              "      <th>customer_unique_id</th>\n",
              "      <th>customer_zip_code_prefix</th>\n",
              "      <th>customer_city</th>\n",
              "      <th>customer_state</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>00010242fe8c5a6d1ba2dd792cb16214</td>\n",
              "      <td>1</td>\n",
              "      <td>4244733e06e7ecb4970a6e2683c13e61</td>\n",
              "      <td>48436dade18ac8b2bce089ec2a041202</td>\n",
              "      <td>2017-09-19 09:45:35</td>\n",
              "      <td>58.90</td>\n",
              "      <td>13.29</td>\n",
              "      <td>3ce436f183e68e07877b285a838db11a</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-09-13 08:59:02</td>\n",
              "      <td>2017-09-13 09:45:35</td>\n",
              "      <td>2017-09-19 18:34:16</td>\n",
              "      <td>2017-09-20 23:43:48</td>\n",
              "      <td>2017-09-29 00:00:00</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>58.0</td>\n",
              "      <td>598.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>650.0</td>\n",
              "      <td>28.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>14.0</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>871766c5855e863f6eccc05f988b23cb</td>\n",
              "      <td>28013</td>\n",
              "      <td>campos dos goytacazes</td>\n",
              "      <td>RJ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>00018f77f2f0320c557190d7a144bdd3</td>\n",
              "      <td>1</td>\n",
              "      <td>e5f2d52b802189ee658865ca93d83a8f</td>\n",
              "      <td>dd7ddc04e1b6c2c614352b383efe2d36</td>\n",
              "      <td>2017-05-03 11:05:13</td>\n",
              "      <td>239.90</td>\n",
              "      <td>19.93</td>\n",
              "      <td>f6dd3ec061db4e3987629fe6b26e5cce</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-04-26 10:53:06</td>\n",
              "      <td>2017-04-26 11:05:13</td>\n",
              "      <td>2017-05-04 14:35:00</td>\n",
              "      <td>2017-05-12 16:04:24</td>\n",
              "      <td>2017-05-15 00:00:00</td>\n",
              "      <td>pet_shop</td>\n",
              "      <td>56.0</td>\n",
              "      <td>239.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>30000.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>pet_shop</td>\n",
              "      <td>eb28e67c4c0b83846050ddfb8a35d051</td>\n",
              "      <td>15775</td>\n",
              "      <td>santa fe do sul</td>\n",
              "      <td>SP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>000229ec398224ef6ca0657da4fc703e</td>\n",
              "      <td>1</td>\n",
              "      <td>c777355d18b72b67abbeef9df44fd0fd</td>\n",
              "      <td>5b51032eddd242adc84c38acab88f23d</td>\n",
              "      <td>2018-01-18 14:48:30</td>\n",
              "      <td>199.00</td>\n",
              "      <td>17.87</td>\n",
              "      <td>6489ae5e4333f3693df5ad4372dab6d3</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-01-14 14:33:31</td>\n",
              "      <td>2018-01-14 14:48:30</td>\n",
              "      <td>2018-01-16 12:36:48</td>\n",
              "      <td>2018-01-22 13:19:16</td>\n",
              "      <td>2018-02-05 00:00:00</td>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>59.0</td>\n",
              "      <td>695.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3050.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>furniture_decor</td>\n",
              "      <td>3818d81c6709e39d06b2738a8d3a2474</td>\n",
              "      <td>35661</td>\n",
              "      <td>para de minas</td>\n",
              "      <td>MG</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>00024acbcdf0a6daa1e931b038114c75</td>\n",
              "      <td>1</td>\n",
              "      <td>7634da152a4610f1595efa32f14722fc</td>\n",
              "      <td>9d7a1d34a5052409006425275ba1c2b4</td>\n",
              "      <td>2018-08-15 10:10:18</td>\n",
              "      <td>12.99</td>\n",
              "      <td>12.79</td>\n",
              "      <td>d4eb9395c8c0431ee92fce09860c5a06</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-08-08 10:00:35</td>\n",
              "      <td>2018-08-08 10:10:18</td>\n",
              "      <td>2018-08-10 13:28:00</td>\n",
              "      <td>2018-08-14 13:32:39</td>\n",
              "      <td>2018-08-20 00:00:00</td>\n",
              "      <td>perfumaria</td>\n",
              "      <td>42.0</td>\n",
              "      <td>480.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>perfumery</td>\n",
              "      <td>af861d436cfc08b2c2ddefd0ba074622</td>\n",
              "      <td>12952</td>\n",
              "      <td>atibaia</td>\n",
              "      <td>SP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>00042b26cf59d7ce69dfabb4e55b4fd9</td>\n",
              "      <td>1</td>\n",
              "      <td>ac6c3623068f30de03045865e4e10089</td>\n",
              "      <td>df560393f3a51e74553ab94004ba5c87</td>\n",
              "      <td>2017-02-13 13:57:51</td>\n",
              "      <td>199.90</td>\n",
              "      <td>18.14</td>\n",
              "      <td>58dbd0b2d70206bf40e62cd34e84d795</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-02-04 13:57:51</td>\n",
              "      <td>2017-02-04 14:10:13</td>\n",
              "      <td>2017-02-16 09:46:09</td>\n",
              "      <td>2017-03-01 16:42:31</td>\n",
              "      <td>2017-03-17 00:00:00</td>\n",
              "      <td>ferramentas_jardim</td>\n",
              "      <td>59.0</td>\n",
              "      <td>409.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3750.0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>garden_tools</td>\n",
              "      <td>64b576fb70d441e8f1b2d7d446e483c5</td>\n",
              "      <td>13226</td>\n",
              "      <td>varzea paulista</td>\n",
              "      <td>SP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112645</th>\n",
              "      <td>fffc94f6ce00a00581880bf54a75a037</td>\n",
              "      <td>1</td>\n",
              "      <td>4aa6014eceb682077f9dc4bffebc05b0</td>\n",
              "      <td>b8bc237ba3788b23da09c0f1f3a3288c</td>\n",
              "      <td>2018-05-02 04:11:01</td>\n",
              "      <td>299.99</td>\n",
              "      <td>43.41</td>\n",
              "      <td>b51593916b4b8e0d6f66f2ae24f2673d</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-04-23 13:57:06</td>\n",
              "      <td>2018-04-25 04:11:01</td>\n",
              "      <td>2018-04-25 12:09:00</td>\n",
              "      <td>2018-05-10 22:56:40</td>\n",
              "      <td>2018-05-18 00:00:00</td>\n",
              "      <td>utilidades_domesticas</td>\n",
              "      <td>43.0</td>\n",
              "      <td>1002.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>10150.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>housewares</td>\n",
              "      <td>0c9aeda10a71f369396d0c04dce13a64</td>\n",
              "      <td>65077</td>\n",
              "      <td>sao luis</td>\n",
              "      <td>MA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112646</th>\n",
              "      <td>fffcd46ef2263f404302a634eb57f7eb</td>\n",
              "      <td>1</td>\n",
              "      <td>32e07fd915822b0765e448c4dd74c828</td>\n",
              "      <td>f3c38ab652836d21de61fb8314b69182</td>\n",
              "      <td>2018-07-20 04:31:48</td>\n",
              "      <td>350.00</td>\n",
              "      <td>36.53</td>\n",
              "      <td>84c5d4fbaf120aae381fad077416eaa0</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-07-14 10:26:46</td>\n",
              "      <td>2018-07-17 04:31:48</td>\n",
              "      <td>2018-07-17 08:05:00</td>\n",
              "      <td>2018-07-23 20:31:55</td>\n",
              "      <td>2018-08-01 00:00:00</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>31.0</td>\n",
              "      <td>232.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>8950.0</td>\n",
              "      <td>45.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>38.0</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>0da9fe112eae0c74d3ba1fe16de0988b</td>\n",
              "      <td>81690</td>\n",
              "      <td>curitiba</td>\n",
              "      <td>PR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112647</th>\n",
              "      <td>fffce4705a9662cd70adb13d4a31832d</td>\n",
              "      <td>1</td>\n",
              "      <td>72a30483855e2eafc67aee5dc2560482</td>\n",
              "      <td>c3cfdc648177fdbbbb35635a37472c53</td>\n",
              "      <td>2017-10-30 17:14:25</td>\n",
              "      <td>99.90</td>\n",
              "      <td>16.95</td>\n",
              "      <td>29309aa813182aaddc9b259e31b870e6</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-10-23 17:07:56</td>\n",
              "      <td>2017-10-24 17:14:25</td>\n",
              "      <td>2017-10-26 15:13:14</td>\n",
              "      <td>2017-10-28 12:22:22</td>\n",
              "      <td>2017-11-10 00:00:00</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>43.0</td>\n",
              "      <td>869.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>967.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>cd79b407828f02fdbba457111c38e4c4</td>\n",
              "      <td>4039</td>\n",
              "      <td>sao paulo</td>\n",
              "      <td>SP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112648</th>\n",
              "      <td>fffe18544ffabc95dfada21779c9644f</td>\n",
              "      <td>1</td>\n",
              "      <td>9c422a519119dcad7575db5af1ba540e</td>\n",
              "      <td>2b3e4a2a3ea8e01938cabda2a3e5cc79</td>\n",
              "      <td>2017-08-21 00:04:32</td>\n",
              "      <td>55.99</td>\n",
              "      <td>8.72</td>\n",
              "      <td>b5e6afd5a41800fdf401e0272ca74655</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2017-08-14 23:02:59</td>\n",
              "      <td>2017-08-15 00:04:32</td>\n",
              "      <td>2017-08-15 19:02:53</td>\n",
              "      <td>2017-08-16 21:59:40</td>\n",
              "      <td>2017-08-25 00:00:00</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>56.0</td>\n",
              "      <td>1306.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>eb803377c9315b564bdedad672039306</td>\n",
              "      <td>13289</td>\n",
              "      <td>vinhedo</td>\n",
              "      <td>SP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112649</th>\n",
              "      <td>fffe41c64501cc87c801fd61db3f6244</td>\n",
              "      <td>1</td>\n",
              "      <td>350688d9dc1e75ff97be326363655e01</td>\n",
              "      <td>f7ccf836d21b2fb1de37564105216cc1</td>\n",
              "      <td>2018-06-12 17:10:13</td>\n",
              "      <td>43.00</td>\n",
              "      <td>12.79</td>\n",
              "      <td>96d649da0cc4ff33bb408b199d4c7dcf</td>\n",
              "      <td>delivered</td>\n",
              "      <td>2018-06-09 17:00:18</td>\n",
              "      <td>2018-06-09 17:10:13</td>\n",
              "      <td>2018-06-11 14:11:00</td>\n",
              "      <td>2018-06-14 17:56:26</td>\n",
              "      <td>2018-06-28 00:00:00</td>\n",
              "      <td>cama_mesa_banho</td>\n",
              "      <td>47.0</td>\n",
              "      <td>511.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>600.0</td>\n",
              "      <td>30.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>bed_bath_table</td>\n",
              "      <td>cd76a00d8e3ca5e6ab9ed9ecb6667ac4</td>\n",
              "      <td>18605</td>\n",
              "      <td>botucatu</td>\n",
              "      <td>SP</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>112650 rows × 27 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                                order_id  ...  customer_state\n",
              "0       00010242fe8c5a6d1ba2dd792cb16214  ...              RJ\n",
              "1       00018f77f2f0320c557190d7a144bdd3  ...              SP\n",
              "2       000229ec398224ef6ca0657da4fc703e  ...              MG\n",
              "3       00024acbcdf0a6daa1e931b038114c75  ...              SP\n",
              "4       00042b26cf59d7ce69dfabb4e55b4fd9  ...              SP\n",
              "...                                  ...  ...             ...\n",
              "112645  fffc94f6ce00a00581880bf54a75a037  ...              MA\n",
              "112646  fffcd46ef2263f404302a634eb57f7eb  ...              PR\n",
              "112647  fffce4705a9662cd70adb13d4a31832d  ...              SP\n",
              "112648  fffe18544ffabc95dfada21779c9644f  ...              SP\n",
              "112649  fffe41c64501cc87c801fd61db3f6244  ...              SP\n",
              "\n",
              "[112650 rows x 27 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Fo1CSg657XOz",
        "outputId": "00dea9c3-963e-43bd-c7f2-e9551dc53c78"
      },
      "source": [
        "reviews = pd.read_csv('/content/drive/MyDrive/archive (20)/olist_order_reviews_dataset.csv')\n",
        "reviews\n",
        "\n",
        "order_ = order_.merge(reviews, how='left', on = 'order_id')\n",
        "order_.T\n",
        "\n",
        "# 뺄 것: order_status, review_id, review_comment_title, "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>...</th>\n",
              "      <th>113282</th>\n",
              "      <th>113283</th>\n",
              "      <th>113284</th>\n",
              "      <th>113285</th>\n",
              "      <th>113286</th>\n",
              "      <th>113287</th>\n",
              "      <th>113288</th>\n",
              "      <th>113289</th>\n",
              "      <th>113290</th>\n",
              "      <th>113291</th>\n",
              "      <th>113292</th>\n",
              "      <th>113293</th>\n",
              "      <th>113294</th>\n",
              "      <th>113295</th>\n",
              "      <th>113296</th>\n",
              "      <th>113297</th>\n",
              "      <th>113298</th>\n",
              "      <th>113299</th>\n",
              "      <th>113300</th>\n",
              "      <th>113301</th>\n",
              "      <th>113302</th>\n",
              "      <th>113303</th>\n",
              "      <th>113304</th>\n",
              "      <th>113305</th>\n",
              "      <th>113306</th>\n",
              "      <th>113307</th>\n",
              "      <th>113308</th>\n",
              "      <th>113309</th>\n",
              "      <th>113310</th>\n",
              "      <th>113311</th>\n",
              "      <th>113312</th>\n",
              "      <th>113313</th>\n",
              "      <th>113314</th>\n",
              "      <th>113315</th>\n",
              "      <th>113316</th>\n",
              "      <th>113317</th>\n",
              "      <th>113318</th>\n",
              "      <th>113319</th>\n",
              "      <th>113320</th>\n",
              "      <th>113321</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>order_id</th>\n",
              "      <td>00010242fe8c5a6d1ba2dd792cb16214</td>\n",
              "      <td>00018f77f2f0320c557190d7a144bdd3</td>\n",
              "      <td>000229ec398224ef6ca0657da4fc703e</td>\n",
              "      <td>00024acbcdf0a6daa1e931b038114c75</td>\n",
              "      <td>00042b26cf59d7ce69dfabb4e55b4fd9</td>\n",
              "      <td>00048cc3ae777c65dbb7d2a0634bc1ea</td>\n",
              "      <td>00054e8431b9d7675808bcb819fb4a32</td>\n",
              "      <td>000576fe39319847cbb9d288c5617fa6</td>\n",
              "      <td>0005a1a1728c9d785b8e2b08b904576c</td>\n",
              "      <td>0005f50442cb953dcd1d21e1fb923495</td>\n",
              "      <td>00061f2a7bc09da83e415a52dc8a4af1</td>\n",
              "      <td>00063b381e2406b52ad429470734ebd5</td>\n",
              "      <td>0006ec9db01a64e59a68b2c340bf65a7</td>\n",
              "      <td>0008288aa423d2a3f00fcb17cd7d8719</td>\n",
              "      <td>0008288aa423d2a3f00fcb17cd7d8719</td>\n",
              "      <td>0009792311464db532ff765bf7b182ae</td>\n",
              "      <td>0009c9a17f916a706d71784483a5d643</td>\n",
              "      <td>000aed2e25dbad2f9ddb70584c5a2ded</td>\n",
              "      <td>000c3e6612759851cc3cbb4b83257986</td>\n",
              "      <td>000e562887b1f2006d75e0be9558292e</td>\n",
              "      <td>000e63d38ae8c00bbcb5a30573b99628</td>\n",
              "      <td>000e906b789b55f64edcb1f84030f90d</td>\n",
              "      <td>000f25f4d72195062c040b12dce9a18a</td>\n",
              "      <td>001021efaa8636c29475e7734483457d</td>\n",
              "      <td>0010b2e5201cc5f1ae7e9c6cc8f5bd00</td>\n",
              "      <td>00119ff934e539cf26f92b9ef0cdfed8</td>\n",
              "      <td>0011d82c4b53e22e84023405fb467e57</td>\n",
              "      <td>00125cb692d04887809806618a2a145f</td>\n",
              "      <td>00130c0eee84a3d909e75bc08c5c3ca1</td>\n",
              "      <td>0013503b13da1eac686219390b7d641b</td>\n",
              "      <td>00137e170939bba5a3134e2386413108</td>\n",
              "      <td>001427c0ec99cf8af737bd88e92fd444</td>\n",
              "      <td>00143d0f86d6fbd9f9b38ab440ac16f5</td>\n",
              "      <td>00143d0f86d6fbd9f9b38ab440ac16f5</td>\n",
              "      <td>00143d0f86d6fbd9f9b38ab440ac16f5</td>\n",
              "      <td>0014ae671de39511f7575066200733b7</td>\n",
              "      <td>0015ebb40fb17286bea51d4607c4733c</td>\n",
              "      <td>00169e31ef4b29deaae414f9a5e95929</td>\n",
              "      <td>0016dfedd97fc2950e388d2971d718c7</td>\n",
              "      <td>0017afd5076e074a48f1f1a4c7bac9c5</td>\n",
              "      <td>...</td>\n",
              "      <td>ffea406a848c8afe4dec22bf6290ba00</td>\n",
              "      <td>ffea5b26be781da4c215c0feb484f4fd</td>\n",
              "      <td>ffea79d8c5fecc22cbff0c54eda9b65c</td>\n",
              "      <td>ffebd80e3291e811c308365936897efd</td>\n",
              "      <td>ffec1a6d35149778ec575d5048d44db8</td>\n",
              "      <td>ffecd5a79a0084f6a592288c67e3c298</td>\n",
              "      <td>ffecd5a79a0084f6a592288c67e3c298</td>\n",
              "      <td>ffecd5a79a0084f6a592288c67e3c298</td>\n",
              "      <td>ffed7e90414c1477a6b92554661d465f</td>\n",
              "      <td>ffee31fb4b5e35c9123608015637c495</td>\n",
              "      <td>ffeeb911d070bea3dd20bd5fd01da5e8</td>\n",
              "      <td>ffef98cd5ecdc992fefbd967549520dd</td>\n",
              "      <td>ffef9e1de5dd07b397b373f9bb72cccf</td>\n",
              "      <td>ffefb169ddf34cecc0622a6d3cc387f8</td>\n",
              "      <td>fff0db5573c78c1cb5a2b68a2bbd8d4a</td>\n",
              "      <td>fff1e3e76b816bfe8ef16678cc53c643</td>\n",
              "      <td>fff2cdc825f9fc0ba3c04227cfa02303</td>\n",
              "      <td>fff2e9e3aa8644e19710216b4ef53ab2</td>\n",
              "      <td>fff3983dfa3c5a0d752d8d17baa406a0</td>\n",
              "      <td>fff60e5408a9dd1e92ee30023052af30</td>\n",
              "      <td>fff6889749958e42b47a7977a4cf0ea0</td>\n",
              "      <td>fff6b8ca971f8e3ec822e99d0f2d3d21</td>\n",
              "      <td>fff7c4452f050315db1b3f24d9df5fcd</td>\n",
              "      <td>fff8286f77788ab8b55b2e5747fa7dd8</td>\n",
              "      <td>fff8287bbae429a99bb7e8c21d151c41</td>\n",
              "      <td>fff8287bbae429a99bb7e8c21d151c41</td>\n",
              "      <td>fff90cdcb3b2e6cfb397d05d562fd3fe</td>\n",
              "      <td>fffa82886406ccf10c7b4e35c4ff2788</td>\n",
              "      <td>fffb0b1a50e65c449020434fa835e078</td>\n",
              "      <td>fffb2ef8874127f75b52b643880fd7e0</td>\n",
              "      <td>fffb9224b6fc7c43ebb0904318b10b5f</td>\n",
              "      <td>fffb9224b6fc7c43ebb0904318b10b5f</td>\n",
              "      <td>fffb9224b6fc7c43ebb0904318b10b5f</td>\n",
              "      <td>fffb9224b6fc7c43ebb0904318b10b5f</td>\n",
              "      <td>fffbee3b5462987e66fb49b1c5411df2</td>\n",
              "      <td>fffc94f6ce00a00581880bf54a75a037</td>\n",
              "      <td>fffcd46ef2263f404302a634eb57f7eb</td>\n",
              "      <td>fffce4705a9662cd70adb13d4a31832d</td>\n",
              "      <td>fffe18544ffabc95dfada21779c9644f</td>\n",
              "      <td>fffe41c64501cc87c801fd61db3f6244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>order_item_id</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_id</th>\n",
              "      <td>4244733e06e7ecb4970a6e2683c13e61</td>\n",
              "      <td>e5f2d52b802189ee658865ca93d83a8f</td>\n",
              "      <td>c777355d18b72b67abbeef9df44fd0fd</td>\n",
              "      <td>7634da152a4610f1595efa32f14722fc</td>\n",
              "      <td>ac6c3623068f30de03045865e4e10089</td>\n",
              "      <td>ef92defde845ab8450f9d70c526ef70f</td>\n",
              "      <td>8d4f2bb7e93e6710a28f34fa83ee7d28</td>\n",
              "      <td>557d850972a7d6f792fd18ae1400d9b6</td>\n",
              "      <td>310ae3c140ff94b03219ad0adc3c778f</td>\n",
              "      <td>4535b0e1091c278dfd193e5a1d63b39f</td>\n",
              "      <td>d63c1011f49d98b976c352955b1c4bea</td>\n",
              "      <td>f177554ea93259a5b282f24e33f65ab6</td>\n",
              "      <td>99a4788cb24856965c36a24e339b6058</td>\n",
              "      <td>368c6c730842d78016ad823897a372db</td>\n",
              "      <td>368c6c730842d78016ad823897a372db</td>\n",
              "      <td>8cab8abac59158715e0d70a36c807415</td>\n",
              "      <td>3f27ac8e699df3d300ec4a5d8c5cf0b2</td>\n",
              "      <td>4fa33915031a8cde03dd0d3e8fb27f01</td>\n",
              "      <td>b50c950aba0dcead2c48032a690ce817</td>\n",
              "      <td>5ed9eaf534f6936b51d0b6c5e4d5c2e9</td>\n",
              "      <td>553e0e7590d3116a072507a3635d2877</td>\n",
              "      <td>57d79905de06d8897872c551bfd09358</td>\n",
              "      <td>1c05e0964302b6cf68ca0d15f326c6ba</td>\n",
              "      <td>5d7c23067ed3fc8c6e699b9373d5890b</td>\n",
              "      <td>5a419dbf24a8c9718fe522b81c69f61a</td>\n",
              "      <td>21b1c2f67a9aafb5af0eb06c13b9dbda</td>\n",
              "      <td>c389f712c4b4510bc997cee93e8b1a28</td>\n",
              "      <td>1c0c0093a48f13ba70d0c6b0a9157cb7</td>\n",
              "      <td>89321f94e35fc6d7903d36f74e351d40</td>\n",
              "      <td>38afdf723b95d455b418a0f57d623c6b</td>\n",
              "      <td>672e757f331900b9deea127a2a7b79fd</td>\n",
              "      <td>28b4eced95a52d9c437a4caf9d311b95</td>\n",
              "      <td>e95ee6822b66ac6058e2e4aff656071a</td>\n",
              "      <td>e95ee6822b66ac6058e2e4aff656071a</td>\n",
              "      <td>e95ee6822b66ac6058e2e4aff656071a</td>\n",
              "      <td>23365beed316535b4105bd800c46670e</td>\n",
              "      <td>50fd2b788dc166edd20512370dac54df</td>\n",
              "      <td>b10eba910a974df70b8a12d0665cdb9e</td>\n",
              "      <td>4089861a1bd4685da70bddd6b4f974f1</td>\n",
              "      <td>fe59a1e006df3ac42bf0ceb876d70969</td>\n",
              "      <td>...</td>\n",
              "      <td>801a695ff5c0c14970a71a4ceb70989e</td>\n",
              "      <td>ac23312b29784c30304f2ec719891690</td>\n",
              "      <td>ea44caac707f7f1325182a538007f838</td>\n",
              "      <td>4cc4d02efc8f249c13355147fb44e34d</td>\n",
              "      <td>437c05a395e9e47f9762e677a7068ce7</td>\n",
              "      <td>50fd2b788dc166edd20512370dac54df</td>\n",
              "      <td>50fd2b788dc166edd20512370dac54df</td>\n",
              "      <td>50fd2b788dc166edd20512370dac54df</td>\n",
              "      <td>550dc4417c636abc04c71404342de695</td>\n",
              "      <td>b10ecf8e33aaaea419a9fa860ea80fb5</td>\n",
              "      <td>a5341e3f8155dbb3e62323d3ea289729</td>\n",
              "      <td>11fd9d7ba552e1d28872e008acf1e050</td>\n",
              "      <td>30ac6df06dc59ad72cf2f158fc2d904c</td>\n",
              "      <td>601a360bd2a916ecef0e88de72a6531a</td>\n",
              "      <td>681953ccd5c33207d75571a4bfbe127d</td>\n",
              "      <td>2e910736c31392d46841f315e9511405</td>\n",
              "      <td>044f05bc9de36e8a693a83e4bc79dd0d</td>\n",
              "      <td>7340a3839a1de1e99d149b8cf052a2ec</td>\n",
              "      <td>092be1e8336fc404c57bd5970d056886</td>\n",
              "      <td>1a405418406359cc2b8815f93bf359c2</td>\n",
              "      <td>75f6a4f019ec1322758d53b2fee2cc12</td>\n",
              "      <td>9afaad66aca8b0c79e4f084a89c9c92b</td>\n",
              "      <td>dd469c03ad67e201bc2179ef077dcd48</td>\n",
              "      <td>a2da86fa759178e9e58e54aa1a144e59</td>\n",
              "      <td>bee2e070c39f3dd2f6883a17a5f0da45</td>\n",
              "      <td>bee2e070c39f3dd2f6883a17a5f0da45</td>\n",
              "      <td>764292b2b0f73f77a0272be03fdd45f3</td>\n",
              "      <td>bbe7651fef80287a816ead73f065fc4b</td>\n",
              "      <td>e7be84ea9462aac5e2b0b08eb35ba7f1</td>\n",
              "      <td>ebceb9726cf5c6187b48e17fe58747b0</td>\n",
              "      <td>43423cdffde7fda63d0414ed38c11a73</td>\n",
              "      <td>43423cdffde7fda63d0414ed38c11a73</td>\n",
              "      <td>43423cdffde7fda63d0414ed38c11a73</td>\n",
              "      <td>43423cdffde7fda63d0414ed38c11a73</td>\n",
              "      <td>6f0169f259bb0ff432bfff7d829b9946</td>\n",
              "      <td>4aa6014eceb682077f9dc4bffebc05b0</td>\n",
              "      <td>32e07fd915822b0765e448c4dd74c828</td>\n",
              "      <td>72a30483855e2eafc67aee5dc2560482</td>\n",
              "      <td>9c422a519119dcad7575db5af1ba540e</td>\n",
              "      <td>350688d9dc1e75ff97be326363655e01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>seller_id</th>\n",
              "      <td>48436dade18ac8b2bce089ec2a041202</td>\n",
              "      <td>dd7ddc04e1b6c2c614352b383efe2d36</td>\n",
              "      <td>5b51032eddd242adc84c38acab88f23d</td>\n",
              "      <td>9d7a1d34a5052409006425275ba1c2b4</td>\n",
              "      <td>df560393f3a51e74553ab94004ba5c87</td>\n",
              "      <td>6426d21aca402a131fc0a5d0960a3c90</td>\n",
              "      <td>7040e82f899a04d1b434b795a43b4617</td>\n",
              "      <td>5996cddab893a4652a15592fb58ab8db</td>\n",
              "      <td>a416b6a846a11724393025641d4edd5e</td>\n",
              "      <td>ba143b05f0110f0dc71ad71b4466ce92</td>\n",
              "      <td>cc419e0650a3c5ba77189a1882b7556a</td>\n",
              "      <td>8602a61d680a10a82cceeeda0d99ea3d</td>\n",
              "      <td>4a3ca9315b744ce9f8e9374361493884</td>\n",
              "      <td>1f50f920176fa81dab994f9023523100</td>\n",
              "      <td>1f50f920176fa81dab994f9023523100</td>\n",
              "      <td>530ec6109d11eaaf87999465c6afee01</td>\n",
              "      <td>fcb5ace8bcc92f75707dc0f01a27d269</td>\n",
              "      <td>fe2032dab1a61af8794248c8196565c9</td>\n",
              "      <td>218d46b86c1881d022bce9c68a7d4b15</td>\n",
              "      <td>8cbac7e12637ed9cffa18c7875207478</td>\n",
              "      <td>1c129092bf23f28a5930387c980c0dfc</td>\n",
              "      <td>ea8482cd71df3c1969d7b9473ff13abc</td>\n",
              "      <td>7c67e1448b00f6e969d365cea6b010ab</td>\n",
              "      <td>6560211a19b47992c3666cc44a7e94c0</td>\n",
              "      <td>3504c0cb71d7fa48d967e0e4c94d59d9</td>\n",
              "      <td>c864036feaab8c1659f65ea4faebe1da</td>\n",
              "      <td>bfd27a966d91cfaafdb25d076585f0da</td>\n",
              "      <td>41b39e28db005d9731d9d485a83b4c38</td>\n",
              "      <td>16090f2ca825584b5a147ab24aa30c86</td>\n",
              "      <td>1554a68530182680ad5c8b042c3ab563</td>\n",
              "      <td>e59aa562b9f8076dd550fcddf0e73491</td>\n",
              "      <td>77530e9772f57a62c906e1c21538ab82</td>\n",
              "      <td>a17f621c590ea0fab3d5d883e1630ec6</td>\n",
              "      <td>a17f621c590ea0fab3d5d883e1630ec6</td>\n",
              "      <td>a17f621c590ea0fab3d5d883e1630ec6</td>\n",
              "      <td>92eb0f42c21942b6552362b9b114707d</td>\n",
              "      <td>8b321bb669392f5163d04c59e235e066</td>\n",
              "      <td>a3e9a2c700480d9bb01fba070ba80a0e</td>\n",
              "      <td>a35124e2d763d7ca3fbe3b97d143200f</td>\n",
              "      <td>25c5c91f63607446a97b143d2d535d31</td>\n",
              "      <td>...</td>\n",
              "      <td>48162d548f5b1b11b9d29d1e01f75a61</td>\n",
              "      <td>066a6914e1ebf3ea95a216c73a986b91</td>\n",
              "      <td>855668e0971d4dfd7bef1b6a4133b41b</td>\n",
              "      <td>d1c7fa84e48cfa21a0e595167c1c500e</td>\n",
              "      <td>f84fa566034f5e8e880a07ec624c56af</td>\n",
              "      <td>8b321bb669392f5163d04c59e235e066</td>\n",
              "      <td>8b321bb669392f5163d04c59e235e066</td>\n",
              "      <td>8b321bb669392f5163d04c59e235e066</td>\n",
              "      <td>25c5c91f63607446a97b143d2d535d31</td>\n",
              "      <td>0241d4d5d36f10f80c644447315af0bd</td>\n",
              "      <td>ff063b022a9a0aab91bad2c9088760b7</td>\n",
              "      <td>cb8bcce248bb1fb274ba762d8b971456</td>\n",
              "      <td>0dd184061fb0eaa7ca37932c68ab91c5</td>\n",
              "      <td>7a67c85e85bb2ce8582c35f2203ad736</td>\n",
              "      <td>777a0c55737f34ffeb78010f7542ab41</td>\n",
              "      <td>7a67c85e85bb2ce8582c35f2203ad736</td>\n",
              "      <td>ea8482cd71df3c1969d7b9473ff13abc</td>\n",
              "      <td>4a3ca9315b744ce9f8e9374361493884</td>\n",
              "      <td>cbd996ad3c1b7dc71fd0e5f5df9087e2</td>\n",
              "      <td>4d6d651bd7684af3fffabd5f08d12e5a</td>\n",
              "      <td>058cb5aeb36d7c0fcae20fc85d5e0a59</td>\n",
              "      <td>42bde9fef835393bb8a8849cb6b7f245</td>\n",
              "      <td>7e93a43ef30c4f03f38b393420bc753a</td>\n",
              "      <td>ea8482cd71df3c1969d7b9473ff13abc</td>\n",
              "      <td>4e922959ae960d389249c378d1c939f5</td>\n",
              "      <td>4e922959ae960d389249c378d1c939f5</td>\n",
              "      <td>bd23da7354813347129d751591d1a6e2</td>\n",
              "      <td>8f2ce03f928b567e3d56181ae20ae952</td>\n",
              "      <td>36a968b544695394e4e9d7572688598f</td>\n",
              "      <td>609e1a9a6c2539919b8205cf7c4e6ff0</td>\n",
              "      <td>b1fc4f64df5a0e8b6913ab38803c57a9</td>\n",
              "      <td>b1fc4f64df5a0e8b6913ab38803c57a9</td>\n",
              "      <td>b1fc4f64df5a0e8b6913ab38803c57a9</td>\n",
              "      <td>b1fc4f64df5a0e8b6913ab38803c57a9</td>\n",
              "      <td>213b25e6f54661939f11710a6fddb871</td>\n",
              "      <td>b8bc237ba3788b23da09c0f1f3a3288c</td>\n",
              "      <td>f3c38ab652836d21de61fb8314b69182</td>\n",
              "      <td>c3cfdc648177fdbbbb35635a37472c53</td>\n",
              "      <td>2b3e4a2a3ea8e01938cabda2a3e5cc79</td>\n",
              "      <td>f7ccf836d21b2fb1de37564105216cc1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>shipping_limit_date</th>\n",
              "      <td>2017-09-19 09:45:35</td>\n",
              "      <td>2017-05-03 11:05:13</td>\n",
              "      <td>2018-01-18 14:48:30</td>\n",
              "      <td>2018-08-15 10:10:18</td>\n",
              "      <td>2017-02-13 13:57:51</td>\n",
              "      <td>2017-05-23 03:55:27</td>\n",
              "      <td>2017-12-14 12:10:31</td>\n",
              "      <td>2018-07-10 12:30:45</td>\n",
              "      <td>2018-03-26 18:31:29</td>\n",
              "      <td>2018-07-06 14:10:56</td>\n",
              "      <td>2018-03-29 22:28:09</td>\n",
              "      <td>2018-07-31 17:30:39</td>\n",
              "      <td>2018-07-26 17:24:20</td>\n",
              "      <td>2018-02-21 02:55:52</td>\n",
              "      <td>2018-02-21 02:55:52</td>\n",
              "      <td>2018-08-17 12:15:10</td>\n",
              "      <td>2018-05-02 09:31:53</td>\n",
              "      <td>2018-05-16 20:57:03</td>\n",
              "      <td>2017-08-21 03:33:13</td>\n",
              "      <td>2018-02-28 12:08:37</td>\n",
              "      <td>2018-03-29 20:07:49</td>\n",
              "      <td>2017-11-27 19:09:02</td>\n",
              "      <td>2018-03-21 11:10:11</td>\n",
              "      <td>2018-03-05 09:35:41</td>\n",
              "      <td>2017-09-15 18:04:37</td>\n",
              "      <td>2017-08-11 00:35:12</td>\n",
              "      <td>2018-01-29 21:51:25</td>\n",
              "      <td>2017-03-29 13:05:42</td>\n",
              "      <td>2018-06-14 05:16:24</td>\n",
              "      <td>2017-12-13 03:16:36</td>\n",
              "      <td>2017-11-30 06:30:55</td>\n",
              "      <td>2018-04-12 19:08:28</td>\n",
              "      <td>2017-10-20 16:07:52</td>\n",
              "      <td>2017-10-20 16:07:52</td>\n",
              "      <td>2017-10-20 16:07:52</td>\n",
              "      <td>2017-05-29 03:15:24</td>\n",
              "      <td>2018-01-18 09:11:24</td>\n",
              "      <td>2018-01-23 03:35:47</td>\n",
              "      <td>2017-05-05 10:05:12</td>\n",
              "      <td>2017-04-24 22:25:19</td>\n",
              "      <td>...</td>\n",
              "      <td>2017-03-21 17:16:36</td>\n",
              "      <td>2017-06-08 17:05:17</td>\n",
              "      <td>2017-09-12 04:24:39</td>\n",
              "      <td>2018-07-18 20:23:55</td>\n",
              "      <td>2018-03-28 02:49:46</td>\n",
              "      <td>2018-03-05 20:15:27</td>\n",
              "      <td>2018-03-05 20:15:27</td>\n",
              "      <td>2018-03-05 20:15:27</td>\n",
              "      <td>2017-08-04 14:55:20</td>\n",
              "      <td>2018-08-21 10:10:11</td>\n",
              "      <td>2017-10-13 19:25:54</td>\n",
              "      <td>2017-07-06 03:15:21</td>\n",
              "      <td>2018-01-17 10:14:27</td>\n",
              "      <td>2017-07-06 19:35:09</td>\n",
              "      <td>2018-07-03 09:31:23</td>\n",
              "      <td>2018-03-05 09:08:53</td>\n",
              "      <td>2018-02-08 02:52:42</td>\n",
              "      <td>2017-06-01 02:42:42</td>\n",
              "      <td>2018-07-16 22:05:13</td>\n",
              "      <td>2018-02-05 10:55:55</td>\n",
              "      <td>2017-10-01 22:56:15</td>\n",
              "      <td>2017-09-21 12:04:29</td>\n",
              "      <td>2017-06-07 17:05:23</td>\n",
              "      <td>2018-07-05 22:31:13</td>\n",
              "      <td>2018-03-27 12:29:22</td>\n",
              "      <td>2018-03-27 12:29:22</td>\n",
              "      <td>2017-11-30 10:11:28</td>\n",
              "      <td>2017-12-22 17:31:42</td>\n",
              "      <td>2017-04-28 16:45:12</td>\n",
              "      <td>2018-04-09 05:08:33</td>\n",
              "      <td>2017-11-03 02:55:58</td>\n",
              "      <td>2017-11-03 02:55:58</td>\n",
              "      <td>2017-11-03 02:55:58</td>\n",
              "      <td>2017-11-03 02:55:58</td>\n",
              "      <td>2018-06-28 09:58:03</td>\n",
              "      <td>2018-05-02 04:11:01</td>\n",
              "      <td>2018-07-20 04:31:48</td>\n",
              "      <td>2017-10-30 17:14:25</td>\n",
              "      <td>2017-08-21 00:04:32</td>\n",
              "      <td>2018-06-12 17:10:13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>price</th>\n",
              "      <td>58.9</td>\n",
              "      <td>239.9</td>\n",
              "      <td>199</td>\n",
              "      <td>12.99</td>\n",
              "      <td>199.9</td>\n",
              "      <td>21.9</td>\n",
              "      <td>19.9</td>\n",
              "      <td>810</td>\n",
              "      <td>145.95</td>\n",
              "      <td>53.99</td>\n",
              "      <td>59.99</td>\n",
              "      <td>45</td>\n",
              "      <td>74</td>\n",
              "      <td>49.9</td>\n",
              "      <td>49.9</td>\n",
              "      <td>99.9</td>\n",
              "      <td>639</td>\n",
              "      <td>144</td>\n",
              "      <td>99</td>\n",
              "      <td>25</td>\n",
              "      <td>47.9</td>\n",
              "      <td>21.99</td>\n",
              "      <td>119.99</td>\n",
              "      <td>49</td>\n",
              "      <td>48.9</td>\n",
              "      <td>219.9</td>\n",
              "      <td>289</td>\n",
              "      <td>109.9</td>\n",
              "      <td>27.9</td>\n",
              "      <td>119.9</td>\n",
              "      <td>397</td>\n",
              "      <td>59.9</td>\n",
              "      <td>21.33</td>\n",
              "      <td>21.33</td>\n",
              "      <td>21.33</td>\n",
              "      <td>16.5</td>\n",
              "      <td>21.9</td>\n",
              "      <td>39</td>\n",
              "      <td>49.75</td>\n",
              "      <td>809.1</td>\n",
              "      <td>...</td>\n",
              "      <td>146.9</td>\n",
              "      <td>119.99</td>\n",
              "      <td>50</td>\n",
              "      <td>129.9</td>\n",
              "      <td>47.65</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21.9</td>\n",
              "      <td>149.9</td>\n",
              "      <td>99</td>\n",
              "      <td>79.5</td>\n",
              "      <td>139.9</td>\n",
              "      <td>94</td>\n",
              "      <td>129.99</td>\n",
              "      <td>69.95</td>\n",
              "      <td>65.99</td>\n",
              "      <td>24.99</td>\n",
              "      <td>69.9</td>\n",
              "      <td>66.39</td>\n",
              "      <td>129.9</td>\n",
              "      <td>92</td>\n",
              "      <td>199</td>\n",
              "      <td>736</td>\n",
              "      <td>24.99</td>\n",
              "      <td>180</td>\n",
              "      <td>180</td>\n",
              "      <td>89.9</td>\n",
              "      <td>229.9</td>\n",
              "      <td>4.9</td>\n",
              "      <td>17.9</td>\n",
              "      <td>55</td>\n",
              "      <td>55</td>\n",
              "      <td>55</td>\n",
              "      <td>55</td>\n",
              "      <td>119.85</td>\n",
              "      <td>299.99</td>\n",
              "      <td>350</td>\n",
              "      <td>99.9</td>\n",
              "      <td>55.99</td>\n",
              "      <td>43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freight_value</th>\n",
              "      <td>13.29</td>\n",
              "      <td>19.93</td>\n",
              "      <td>17.87</td>\n",
              "      <td>12.79</td>\n",
              "      <td>18.14</td>\n",
              "      <td>12.69</td>\n",
              "      <td>11.85</td>\n",
              "      <td>70.75</td>\n",
              "      <td>11.65</td>\n",
              "      <td>11.4</td>\n",
              "      <td>8.88</td>\n",
              "      <td>12.98</td>\n",
              "      <td>23.32</td>\n",
              "      <td>13.37</td>\n",
              "      <td>13.37</td>\n",
              "      <td>27.65</td>\n",
              "      <td>11.34</td>\n",
              "      <td>8.77</td>\n",
              "      <td>13.71</td>\n",
              "      <td>16.11</td>\n",
              "      <td>8.88</td>\n",
              "      <td>11.85</td>\n",
              "      <td>44.4</td>\n",
              "      <td>15.1</td>\n",
              "      <td>16.6</td>\n",
              "      <td>16.98</td>\n",
              "      <td>26.33</td>\n",
              "      <td>25.51</td>\n",
              "      <td>7.94</td>\n",
              "      <td>17.32</td>\n",
              "      <td>24.65</td>\n",
              "      <td>23.35</td>\n",
              "      <td>15.1</td>\n",
              "      <td>15.1</td>\n",
              "      <td>15.1</td>\n",
              "      <td>14.1</td>\n",
              "      <td>15.1</td>\n",
              "      <td>16.11</td>\n",
              "      <td>20.8</td>\n",
              "      <td>44.29</td>\n",
              "      <td>...</td>\n",
              "      <td>15.2</td>\n",
              "      <td>20.08</td>\n",
              "      <td>19.59</td>\n",
              "      <td>51.2</td>\n",
              "      <td>7.39</td>\n",
              "      <td>15.79</td>\n",
              "      <td>15.79</td>\n",
              "      <td>15.79</td>\n",
              "      <td>16.81</td>\n",
              "      <td>13.52</td>\n",
              "      <td>16.19</td>\n",
              "      <td>13.11</td>\n",
              "      <td>21.5</td>\n",
              "      <td>12.11</td>\n",
              "      <td>7.75</td>\n",
              "      <td>20.86</td>\n",
              "      <td>25.63</td>\n",
              "      <td>16.25</td>\n",
              "      <td>14.05</td>\n",
              "      <td>18.8</td>\n",
              "      <td>31.6</td>\n",
              "      <td>16.83</td>\n",
              "      <td>20.91</td>\n",
              "      <td>15.28</td>\n",
              "      <td>48.14</td>\n",
              "      <td>48.14</td>\n",
              "      <td>11.83</td>\n",
              "      <td>44.02</td>\n",
              "      <td>10.96</td>\n",
              "      <td>22.06</td>\n",
              "      <td>34.19</td>\n",
              "      <td>34.19</td>\n",
              "      <td>34.19</td>\n",
              "      <td>34.19</td>\n",
              "      <td>20.03</td>\n",
              "      <td>43.41</td>\n",
              "      <td>36.53</td>\n",
              "      <td>16.95</td>\n",
              "      <td>8.72</td>\n",
              "      <td>12.79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_id</th>\n",
              "      <td>3ce436f183e68e07877b285a838db11a</td>\n",
              "      <td>f6dd3ec061db4e3987629fe6b26e5cce</td>\n",
              "      <td>6489ae5e4333f3693df5ad4372dab6d3</td>\n",
              "      <td>d4eb9395c8c0431ee92fce09860c5a06</td>\n",
              "      <td>58dbd0b2d70206bf40e62cd34e84d795</td>\n",
              "      <td>816cbea969fe5b689b39cfc97a506742</td>\n",
              "      <td>32e2e6ab09e778d99bf2e0ecd4898718</td>\n",
              "      <td>9ed5e522dd9dd85b4af4a077526d8117</td>\n",
              "      <td>16150771dfd4776261284213b89c304e</td>\n",
              "      <td>351d3cb2cee3c7fd0af6616c82df21d3</td>\n",
              "      <td>c6fc061d86fab1e2b2eac259bac71a49</td>\n",
              "      <td>6a899e55865de6549a58d2c6845e5604</td>\n",
              "      <td>5d178120c29c61748ea95bac23cb8f25</td>\n",
              "      <td>2355af7c75e7c98b43a87b2a7f210dc5</td>\n",
              "      <td>2355af7c75e7c98b43a87b2a7f210dc5</td>\n",
              "      <td>2a30c97668e81df7c17a8b14447aeeba</td>\n",
              "      <td>8a250edc40ebc5c3940ebc940f16a7eb</td>\n",
              "      <td>fff5169e583fd07fac9fec88962f189d</td>\n",
              "      <td>3773bcf1a6fbd29233ea1c1b573c4f22</td>\n",
              "      <td>2b01d668726fb0b751c55918c0437b7b</td>\n",
              "      <td>98884e672c5ba85f4394f2044e1a3eab</td>\n",
              "      <td>6a3b2fc9f270df258605e22bef19fd88</td>\n",
              "      <td>86ade8ebc14f18dd6c3ea75bd0eb7534</td>\n",
              "      <td>2dfbf74859104caf100df3720a1d833d</td>\n",
              "      <td>57ef317d4818cb42680fc9dfd13867ce</td>\n",
              "      <td>7dd2e283f47deac853cf70f3b63c8d86</td>\n",
              "      <td>2013d892495e1a101d742d533d2d1119</td>\n",
              "      <td>8afb90a97ee661103014329b1bcea1a2</td>\n",
              "      <td>47d656c08a282ec5ab4c1f18303a3a30</td>\n",
              "      <td>f7277fce45fad3165379c15cacf5ddbe</td>\n",
              "      <td>7b63cba66b8e6d002e94d0990c1e2868</td>\n",
              "      <td>eab9c552374be06ed15923016dc9e588</td>\n",
              "      <td>2e45292979b9b2700ea09560eeb0f803</td>\n",
              "      <td>2e45292979b9b2700ea09560eeb0f803</td>\n",
              "      <td>2e45292979b9b2700ea09560eeb0f803</td>\n",
              "      <td>41065d9dcea52218c3943d2eed072b97</td>\n",
              "      <td>da43a556bf5c36a1104c473cff77de6c</td>\n",
              "      <td>efb3830adb68fb8a89c948774388ec28</td>\n",
              "      <td>2c8b917c5d7dd720ebe36a5ed3b501ec</td>\n",
              "      <td>8085a9af46f619bc25966f151a362b0d</td>\n",
              "      <td>...</td>\n",
              "      <td>e85ff8cc3cc2c09bdb9204dd7930c0fb</td>\n",
              "      <td>cefc16cdcbd69d1ea047f70227cd2927</td>\n",
              "      <td>bbef00095c712ca0e62584d68cb9fdfa</td>\n",
              "      <td>050309b91cc5e04e68841938e7984aaf</td>\n",
              "      <td>970ca115b43314d95949db28ed73aa78</td>\n",
              "      <td>8afa5a415d65a08e3a68b1d7f9ddd8a5</td>\n",
              "      <td>8afa5a415d65a08e3a68b1d7f9ddd8a5</td>\n",
              "      <td>8afa5a415d65a08e3a68b1d7f9ddd8a5</td>\n",
              "      <td>b7a530c512ca7de885521441884f4ef5</td>\n",
              "      <td>11e0f43ab4e2d2c48348dd9332c0ef80</td>\n",
              "      <td>c580ed6ed2fe3533df6af1dcb43bac94</td>\n",
              "      <td>8219ed06f16d11e061ca521bbc175c17</td>\n",
              "      <td>f46860fe1b54585612e3fffdbf52e43a</td>\n",
              "      <td>b607e077c8906af72c47a8554a26bc05</td>\n",
              "      <td>57343e0c5ed32cb5a60d261fb66f7f35</td>\n",
              "      <td>e194b91a5dac87c84cc54a7ed3fdad7a</td>\n",
              "      <td>9c18c06ccf9b2fafcc5f956c5b145212</td>\n",
              "      <td>3aa733464591b63ba16abe084903a511</td>\n",
              "      <td>46930ec4a8599d1436787e37f36161d9</td>\n",
              "      <td>3bd40b3dddcb1d27d1068ff0a1f95078</td>\n",
              "      <td>c5d108ecadaedf367e995520d36c9b1d</td>\n",
              "      <td>2aec499f94f5e82786629a84b816ffb9</td>\n",
              "      <td>dec8952e97ef6124259c56914fb3569c</td>\n",
              "      <td>e79f494063c25f5c673222d8a2cc6f47</td>\n",
              "      <td>6c1e92a209dbf868706caa831090941e</td>\n",
              "      <td>6c1e92a209dbf868706caa831090941e</td>\n",
              "      <td>f6cc7b845fde9d4e71361fe6fcd7ef75</td>\n",
              "      <td>a5201e1a6d71a8d21e869151bd5b4085</td>\n",
              "      <td>46b385c6d972b73cbcf797a8b16c072d</td>\n",
              "      <td>ca8374c00203cec663bc1eabf0aaede4</td>\n",
              "      <td>4d3abb73ceb86353aeadbe698aa9d5cb</td>\n",
              "      <td>4d3abb73ceb86353aeadbe698aa9d5cb</td>\n",
              "      <td>4d3abb73ceb86353aeadbe698aa9d5cb</td>\n",
              "      <td>4d3abb73ceb86353aeadbe698aa9d5cb</td>\n",
              "      <td>11a0e041ea6e7e21856d2689b64e7f3a</td>\n",
              "      <td>b51593916b4b8e0d6f66f2ae24f2673d</td>\n",
              "      <td>84c5d4fbaf120aae381fad077416eaa0</td>\n",
              "      <td>29309aa813182aaddc9b259e31b870e6</td>\n",
              "      <td>b5e6afd5a41800fdf401e0272ca74655</td>\n",
              "      <td>96d649da0cc4ff33bb408b199d4c7dcf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>order_status</th>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>...</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "      <td>delivered</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>order_purchase_timestamp</th>\n",
              "      <td>2017-09-13 08:59:02</td>\n",
              "      <td>2017-04-26 10:53:06</td>\n",
              "      <td>2018-01-14 14:33:31</td>\n",
              "      <td>2018-08-08 10:00:35</td>\n",
              "      <td>2017-02-04 13:57:51</td>\n",
              "      <td>2017-05-15 21:42:34</td>\n",
              "      <td>2017-12-10 11:53:48</td>\n",
              "      <td>2018-07-04 12:08:27</td>\n",
              "      <td>2018-03-19 18:40:33</td>\n",
              "      <td>2018-07-02 13:59:39</td>\n",
              "      <td>2018-03-24 22:16:10</td>\n",
              "      <td>2018-07-27 17:21:27</td>\n",
              "      <td>2018-07-24 17:04:17</td>\n",
              "      <td>2018-02-13 22:10:21</td>\n",
              "      <td>2018-02-13 22:10:21</td>\n",
              "      <td>2018-08-14 20:43:09</td>\n",
              "      <td>2018-04-25 09:10:41</td>\n",
              "      <td>2018-05-11 20:33:38</td>\n",
              "      <td>2017-08-12 10:08:57</td>\n",
              "      <td>2018-02-22 11:54:42</td>\n",
              "      <td>2018-03-23 19:48:26</td>\n",
              "      <td>2017-11-21 18:54:23</td>\n",
              "      <td>2018-03-07 10:33:13</td>\n",
              "      <td>2018-02-27 09:27:14</td>\n",
              "      <td>2017-09-11 17:39:33</td>\n",
              "      <td>2017-08-06 00:42:49</td>\n",
              "      <td>2018-01-16 21:43:23</td>\n",
              "      <td>2017-03-23 12:21:17</td>\n",
              "      <td>2018-06-11 21:17:00</td>\n",
              "      <td>2017-12-05 23:40:59</td>\n",
              "      <td>2017-11-24 16:50:38</td>\n",
              "      <td>2018-04-07 18:51:22</td>\n",
              "      <td>2017-10-16 15:29:43</td>\n",
              "      <td>2017-10-16 15:29:43</td>\n",
              "      <td>2017-10-16 15:29:43</td>\n",
              "      <td>2017-05-22 13:49:03</td>\n",
              "      <td>2018-01-14 09:01:36</td>\n",
              "      <td>2018-01-16 09:26:39</td>\n",
              "      <td>2017-04-28 19:54:40</td>\n",
              "      <td>2017-04-06 22:16:10</td>\n",
              "      <td>...</td>\n",
              "      <td>2017-03-15 17:16:36</td>\n",
              "      <td>2017-06-02 16:53:20</td>\n",
              "      <td>2017-09-03 17:18:58</td>\n",
              "      <td>2018-07-13 20:04:05</td>\n",
              "      <td>2018-03-20 12:47:53</td>\n",
              "      <td>2018-02-27 20:00:25</td>\n",
              "      <td>2018-02-27 20:00:25</td>\n",
              "      <td>2018-02-27 20:00:25</td>\n",
              "      <td>2017-07-31 14:44:31</td>\n",
              "      <td>2018-08-18 10:00:59</td>\n",
              "      <td>2017-10-06 19:10:16</td>\n",
              "      <td>2017-06-28 21:01:06</td>\n",
              "      <td>2018-01-11 10:02:13</td>\n",
              "      <td>2017-07-02 19:22:03</td>\n",
              "      <td>2018-06-27 09:02:19</td>\n",
              "      <td>2018-02-27 08:35:05</td>\n",
              "      <td>2018-02-02 10:28:41</td>\n",
              "      <td>2017-05-25 17:22:57</td>\n",
              "      <td>2018-07-14 21:56:14</td>\n",
              "      <td>2018-01-30 10:30:33</td>\n",
              "      <td>2017-09-25 22:41:26</td>\n",
              "      <td>2017-09-15 11:44:46</td>\n",
              "      <td>2017-06-01 16:53:03</td>\n",
              "      <td>2018-07-03 21:53:22</td>\n",
              "      <td>2018-03-17 12:11:45</td>\n",
              "      <td>2018-03-17 12:11:45</td>\n",
              "      <td>2017-11-24 09:03:47</td>\n",
              "      <td>2017-12-18 16:33:07</td>\n",
              "      <td>2017-04-12 16:35:43</td>\n",
              "      <td>2018-03-30 15:36:49</td>\n",
              "      <td>2017-10-27 16:51:00</td>\n",
              "      <td>2017-10-27 16:51:00</td>\n",
              "      <td>2017-10-27 16:51:00</td>\n",
              "      <td>2017-10-27 16:51:00</td>\n",
              "      <td>2018-06-19 09:27:48</td>\n",
              "      <td>2018-04-23 13:57:06</td>\n",
              "      <td>2018-07-14 10:26:46</td>\n",
              "      <td>2017-10-23 17:07:56</td>\n",
              "      <td>2017-08-14 23:02:59</td>\n",
              "      <td>2018-06-09 17:00:18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>order_approved_at</th>\n",
              "      <td>2017-09-13 09:45:35</td>\n",
              "      <td>2017-04-26 11:05:13</td>\n",
              "      <td>2018-01-14 14:48:30</td>\n",
              "      <td>2018-08-08 10:10:18</td>\n",
              "      <td>2017-02-04 14:10:13</td>\n",
              "      <td>2017-05-17 03:55:27</td>\n",
              "      <td>2017-12-10 12:10:31</td>\n",
              "      <td>2018-07-05 16:35:48</td>\n",
              "      <td>2018-03-20 18:35:21</td>\n",
              "      <td>2018-07-02 14:10:56</td>\n",
              "      <td>2018-03-24 22:28:09</td>\n",
              "      <td>2018-07-27 18:00:06</td>\n",
              "      <td>2018-07-24 17:24:20</td>\n",
              "      <td>2018-02-15 03:55:52</td>\n",
              "      <td>2018-02-15 03:55:52</td>\n",
              "      <td>2018-08-15 12:15:10</td>\n",
              "      <td>2018-04-25 09:33:19</td>\n",
              "      <td>2018-05-11 20:57:03</td>\n",
              "      <td>2017-08-15 03:35:32</td>\n",
              "      <td>2018-02-22 12:08:37</td>\n",
              "      <td>2018-03-23 20:07:49</td>\n",
              "      <td>2017-11-21 19:09:02</td>\n",
              "      <td>2018-03-07 11:10:11</td>\n",
              "      <td>2018-02-27 09:35:41</td>\n",
              "      <td>2017-09-11 18:04:37</td>\n",
              "      <td>2017-08-07 00:35:12</td>\n",
              "      <td>2018-01-16 21:51:25</td>\n",
              "      <td>2017-03-23 13:05:42</td>\n",
              "      <td>2018-06-12 05:16:24</td>\n",
              "      <td>2017-12-07 03:16:36</td>\n",
              "      <td>2017-11-25 06:30:55</td>\n",
              "      <td>2018-04-07 19:08:28</td>\n",
              "      <td>2017-10-16 16:07:52</td>\n",
              "      <td>2017-10-16 16:07:52</td>\n",
              "      <td>2017-10-16 16:07:52</td>\n",
              "      <td>2017-05-23 03:15:24</td>\n",
              "      <td>2018-01-14 09:11:24</td>\n",
              "      <td>2018-01-17 03:35:47</td>\n",
              "      <td>2017-04-29 10:05:12</td>\n",
              "      <td>2017-04-06 22:25:19</td>\n",
              "      <td>...</td>\n",
              "      <td>2017-03-15 17:16:36</td>\n",
              "      <td>2017-06-02 17:05:17</td>\n",
              "      <td>2017-09-05 04:24:39</td>\n",
              "      <td>2018-07-13 20:23:55</td>\n",
              "      <td>2018-03-22 02:49:46</td>\n",
              "      <td>2018-02-27 20:15:27</td>\n",
              "      <td>2018-02-27 20:15:27</td>\n",
              "      <td>2018-02-27 20:15:27</td>\n",
              "      <td>2017-07-31 14:55:20</td>\n",
              "      <td>2018-08-18 10:10:11</td>\n",
              "      <td>2017-10-06 19:25:54</td>\n",
              "      <td>2017-06-30 03:15:21</td>\n",
              "      <td>2018-01-11 10:14:27</td>\n",
              "      <td>2017-07-02 19:35:09</td>\n",
              "      <td>2018-06-27 11:05:27</td>\n",
              "      <td>2018-02-27 09:08:53</td>\n",
              "      <td>2018-02-03 02:52:42</td>\n",
              "      <td>2017-05-26 02:42:42</td>\n",
              "      <td>2018-07-14 22:05:13</td>\n",
              "      <td>2018-01-30 10:55:55</td>\n",
              "      <td>2017-09-25 22:56:15</td>\n",
              "      <td>2017-09-15 12:04:29</td>\n",
              "      <td>2017-06-01 17:05:23</td>\n",
              "      <td>2018-07-05 16:22:01</td>\n",
              "      <td>2018-03-17 12:29:22</td>\n",
              "      <td>2018-03-17 12:29:22</td>\n",
              "      <td>2017-11-24 10:11:58</td>\n",
              "      <td>2017-12-18 17:33:04</td>\n",
              "      <td>2017-04-12 16:45:12</td>\n",
              "      <td>2018-04-03 05:08:33</td>\n",
              "      <td>2017-10-28 02:55:58</td>\n",
              "      <td>2017-10-28 02:55:58</td>\n",
              "      <td>2017-10-28 02:55:58</td>\n",
              "      <td>2017-10-28 02:55:58</td>\n",
              "      <td>2018-06-19 09:58:03</td>\n",
              "      <td>2018-04-25 04:11:01</td>\n",
              "      <td>2018-07-17 04:31:48</td>\n",
              "      <td>2017-10-24 17:14:25</td>\n",
              "      <td>2017-08-15 00:04:32</td>\n",
              "      <td>2018-06-09 17:10:13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>order_delivered_carrier_date</th>\n",
              "      <td>2017-09-19 18:34:16</td>\n",
              "      <td>2017-05-04 14:35:00</td>\n",
              "      <td>2018-01-16 12:36:48</td>\n",
              "      <td>2018-08-10 13:28:00</td>\n",
              "      <td>2017-02-16 09:46:09</td>\n",
              "      <td>2017-05-17 11:05:55</td>\n",
              "      <td>2017-12-12 01:07:48</td>\n",
              "      <td>2018-07-05 12:15:00</td>\n",
              "      <td>2018-03-28 00:37:42</td>\n",
              "      <td>2018-07-03 14:25:00</td>\n",
              "      <td>2018-03-27 05:26:55</td>\n",
              "      <td>2018-07-30 14:52:00</td>\n",
              "      <td>2018-07-25 11:02:00</td>\n",
              "      <td>2018-02-20 18:23:28</td>\n",
              "      <td>2018-02-20 18:23:28</td>\n",
              "      <td>2018-08-15 15:28:00</td>\n",
              "      <td>2018-04-27 15:14:00</td>\n",
              "      <td>2018-05-16 14:26:00</td>\n",
              "      <td>2017-08-15 15:32:51</td>\n",
              "      <td>2018-02-26 14:18:32</td>\n",
              "      <td>2018-03-26 21:38:48</td>\n",
              "      <td>2017-11-22 20:46:54</td>\n",
              "      <td>2018-03-16 15:58:31</td>\n",
              "      <td>2018-02-27 21:43:46</td>\n",
              "      <td>2017-09-12 17:02:57</td>\n",
              "      <td>2017-08-07 21:12:34</td>\n",
              "      <td>2018-01-23 22:08:06</td>\n",
              "      <td>2017-03-27 08:58:04</td>\n",
              "      <td>2018-06-12 14:22:00</td>\n",
              "      <td>2017-12-07 22:59:30</td>\n",
              "      <td>2017-11-28 19:43:52</td>\n",
              "      <td>2018-04-09 23:29:32</td>\n",
              "      <td>2017-10-16 23:04:43</td>\n",
              "      <td>2017-10-16 23:04:43</td>\n",
              "      <td>2017-10-16 23:04:43</td>\n",
              "      <td>2017-05-29 09:04:02</td>\n",
              "      <td>2018-01-17 22:56:36</td>\n",
              "      <td>2018-01-17 16:46:04</td>\n",
              "      <td>2017-05-16 08:40:49</td>\n",
              "      <td>2017-04-17 13:54:37</td>\n",
              "      <td>...</td>\n",
              "      <td>2017-03-16 12:54:46</td>\n",
              "      <td>2017-06-06 13:51:15</td>\n",
              "      <td>2017-09-06 12:51:23</td>\n",
              "      <td>2018-07-17 10:03:00</td>\n",
              "      <td>2018-03-27 17:06:34</td>\n",
              "      <td>2018-02-28 20:54:52</td>\n",
              "      <td>2018-02-28 20:54:52</td>\n",
              "      <td>2018-02-28 20:54:52</td>\n",
              "      <td>2017-08-03 17:27:39</td>\n",
              "      <td>2018-08-20 10:01:00</td>\n",
              "      <td>2017-10-20 18:15:59</td>\n",
              "      <td>2017-06-30 14:09:00</td>\n",
              "      <td>2018-01-15 22:34:16</td>\n",
              "      <td>2017-07-03 15:21:43</td>\n",
              "      <td>2018-06-27 10:19:00</td>\n",
              "      <td>2018-03-02 20:04:21</td>\n",
              "      <td>2018-02-08 00:26:55</td>\n",
              "      <td>2017-05-26 16:12:47</td>\n",
              "      <td>2018-07-17 12:23:00</td>\n",
              "      <td>2018-02-06 18:53:12</td>\n",
              "      <td>2017-09-27 12:59:49</td>\n",
              "      <td>2017-09-18 16:47:13</td>\n",
              "      <td>2017-06-02 11:49:53</td>\n",
              "      <td>2018-07-04 14:33:00</td>\n",
              "      <td>2018-03-21 19:22:25</td>\n",
              "      <td>2018-03-21 19:22:25</td>\n",
              "      <td>2017-11-27 22:44:45</td>\n",
              "      <td>2017-12-20 18:55:00</td>\n",
              "      <td>2017-04-27 09:26:54</td>\n",
              "      <td>2018-04-03 15:12:19</td>\n",
              "      <td>2017-11-10 19:31:52</td>\n",
              "      <td>2017-11-10 19:31:52</td>\n",
              "      <td>2017-11-10 19:31:52</td>\n",
              "      <td>2017-11-10 19:31:52</td>\n",
              "      <td>2018-06-29 13:46:00</td>\n",
              "      <td>2018-04-25 12:09:00</td>\n",
              "      <td>2018-07-17 08:05:00</td>\n",
              "      <td>2017-10-26 15:13:14</td>\n",
              "      <td>2017-08-15 19:02:53</td>\n",
              "      <td>2018-06-11 14:11:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>order_delivered_customer_date</th>\n",
              "      <td>2017-09-20 23:43:48</td>\n",
              "      <td>2017-05-12 16:04:24</td>\n",
              "      <td>2018-01-22 13:19:16</td>\n",
              "      <td>2018-08-14 13:32:39</td>\n",
              "      <td>2017-03-01 16:42:31</td>\n",
              "      <td>2017-05-22 13:44:35</td>\n",
              "      <td>2017-12-18 22:03:38</td>\n",
              "      <td>2018-07-09 14:04:07</td>\n",
              "      <td>2018-03-29 18:17:31</td>\n",
              "      <td>2018-07-04 17:28:31</td>\n",
              "      <td>2018-03-29 00:04:19</td>\n",
              "      <td>2018-08-07 13:56:52</td>\n",
              "      <td>2018-07-31 01:04:15</td>\n",
              "      <td>2018-02-26 13:55:22</td>\n",
              "      <td>2018-02-26 13:55:22</td>\n",
              "      <td>2018-08-22 12:02:27</td>\n",
              "      <td>2018-04-30 17:54:25</td>\n",
              "      <td>2018-05-18 16:46:31</td>\n",
              "      <td>2017-08-19 15:22:17</td>\n",
              "      <td>2018-03-12 18:46:34</td>\n",
              "      <td>2018-03-27 14:51:47</td>\n",
              "      <td>2017-12-09 17:27:23</td>\n",
              "      <td>2018-03-22 16:51:52</td>\n",
              "      <td>2018-03-08 20:06:33</td>\n",
              "      <td>2017-09-23 13:21:21</td>\n",
              "      <td>2017-08-16 17:29:59</td>\n",
              "      <td>2018-01-26 22:14:02</td>\n",
              "      <td>2017-04-07 15:32:47</td>\n",
              "      <td>2018-06-13 15:28:25</td>\n",
              "      <td>2017-12-20 22:46:28</td>\n",
              "      <td>2017-12-11 19:12:55</td>\n",
              "      <td>2018-04-25 23:38:41</td>\n",
              "      <td>2017-10-27 18:43:56</td>\n",
              "      <td>2017-10-27 18:43:56</td>\n",
              "      <td>2017-10-27 18:43:56</td>\n",
              "      <td>2017-06-07 13:52:52</td>\n",
              "      <td>2018-02-01 20:29:51</td>\n",
              "      <td>2018-01-23 20:19:04</td>\n",
              "      <td>2017-05-22 18:32:21</td>\n",
              "      <td>2017-05-23 08:32:07</td>\n",
              "      <td>...</td>\n",
              "      <td>2017-04-05 18:48:06</td>\n",
              "      <td>2017-06-28 07:09:55</td>\n",
              "      <td>2017-09-19 21:22:28</td>\n",
              "      <td>2018-07-23 19:44:45</td>\n",
              "      <td>2018-03-28 18:54:28</td>\n",
              "      <td>2018-03-29 14:37:05</td>\n",
              "      <td>2018-03-29 14:37:05</td>\n",
              "      <td>2018-03-29 14:37:05</td>\n",
              "      <td>2017-08-14 15:52:37</td>\n",
              "      <td>2018-08-21 12:18:57</td>\n",
              "      <td>2017-10-25 18:17:06</td>\n",
              "      <td>2017-07-14 16:19:41</td>\n",
              "      <td>2018-02-06 01:05:12</td>\n",
              "      <td>2017-07-19 16:36:31</td>\n",
              "      <td>2018-06-28 17:52:43</td>\n",
              "      <td>2018-03-07 14:49:33</td>\n",
              "      <td>2018-03-12 17:08:53</td>\n",
              "      <td>2017-06-06 14:05:37</td>\n",
              "      <td>2018-07-27 16:28:51</td>\n",
              "      <td>2018-02-08 15:17:43</td>\n",
              "      <td>2017-09-28 22:38:04</td>\n",
              "      <td>2017-09-21 19:34:19</td>\n",
              "      <td>2017-06-08 13:04:40</td>\n",
              "      <td>2018-07-06 14:51:40</td>\n",
              "      <td>2018-04-07 10:07:48</td>\n",
              "      <td>2018-04-07 10:07:48</td>\n",
              "      <td>2017-11-29 02:24:25</td>\n",
              "      <td>2018-01-08 18:23:10</td>\n",
              "      <td>2017-05-17 11:38:22</td>\n",
              "      <td>2018-04-16 16:56:38</td>\n",
              "      <td>2017-11-17 19:41:42</td>\n",
              "      <td>2017-11-17 19:41:42</td>\n",
              "      <td>2017-11-17 19:41:42</td>\n",
              "      <td>2017-11-17 19:41:42</td>\n",
              "      <td>2018-07-05 17:51:08</td>\n",
              "      <td>2018-05-10 22:56:40</td>\n",
              "      <td>2018-07-23 20:31:55</td>\n",
              "      <td>2017-10-28 12:22:22</td>\n",
              "      <td>2017-08-16 21:59:40</td>\n",
              "      <td>2018-06-14 17:56:26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>order_estimated_delivery_date</th>\n",
              "      <td>2017-09-29 00:00:00</td>\n",
              "      <td>2017-05-15 00:00:00</td>\n",
              "      <td>2018-02-05 00:00:00</td>\n",
              "      <td>2018-08-20 00:00:00</td>\n",
              "      <td>2017-03-17 00:00:00</td>\n",
              "      <td>2017-06-06 00:00:00</td>\n",
              "      <td>2018-01-04 00:00:00</td>\n",
              "      <td>2018-07-25 00:00:00</td>\n",
              "      <td>2018-03-29 00:00:00</td>\n",
              "      <td>2018-07-23 00:00:00</td>\n",
              "      <td>2018-04-09 00:00:00</td>\n",
              "      <td>2018-08-07 00:00:00</td>\n",
              "      <td>2018-08-22 00:00:00</td>\n",
              "      <td>2018-03-06 00:00:00</td>\n",
              "      <td>2018-03-06 00:00:00</td>\n",
              "      <td>2018-08-28 00:00:00</td>\n",
              "      <td>2018-05-09 00:00:00</td>\n",
              "      <td>2018-05-22 00:00:00</td>\n",
              "      <td>2017-09-01 00:00:00</td>\n",
              "      <td>2018-03-19 00:00:00</td>\n",
              "      <td>2018-04-05 00:00:00</td>\n",
              "      <td>2017-12-07 00:00:00</td>\n",
              "      <td>2018-04-11 00:00:00</td>\n",
              "      <td>2018-03-23 00:00:00</td>\n",
              "      <td>2017-09-27 00:00:00</td>\n",
              "      <td>2017-08-31 00:00:00</td>\n",
              "      <td>2018-02-15 00:00:00</td>\n",
              "      <td>2017-04-20 00:00:00</td>\n",
              "      <td>2018-06-20 00:00:00</td>\n",
              "      <td>2017-12-28 00:00:00</td>\n",
              "      <td>2017-12-18 00:00:00</td>\n",
              "      <td>2018-05-10 00:00:00</td>\n",
              "      <td>2017-11-06 00:00:00</td>\n",
              "      <td>2017-11-06 00:00:00</td>\n",
              "      <td>2017-11-06 00:00:00</td>\n",
              "      <td>2017-06-13 00:00:00</td>\n",
              "      <td>2018-02-15 00:00:00</td>\n",
              "      <td>2018-02-07 00:00:00</td>\n",
              "      <td>2017-06-01 00:00:00</td>\n",
              "      <td>2017-05-19 00:00:00</td>\n",
              "      <td>...</td>\n",
              "      <td>2017-04-05 00:00:00</td>\n",
              "      <td>2017-06-29 00:00:00</td>\n",
              "      <td>2017-10-02 00:00:00</td>\n",
              "      <td>2018-08-07 00:00:00</td>\n",
              "      <td>2018-04-02 00:00:00</td>\n",
              "      <td>2018-03-22 00:00:00</td>\n",
              "      <td>2018-03-22 00:00:00</td>\n",
              "      <td>2018-03-22 00:00:00</td>\n",
              "      <td>2017-08-22 00:00:00</td>\n",
              "      <td>2018-08-23 00:00:00</td>\n",
              "      <td>2017-10-30 00:00:00</td>\n",
              "      <td>2017-07-20 00:00:00</td>\n",
              "      <td>2018-02-09 00:00:00</td>\n",
              "      <td>2017-07-14 00:00:00</td>\n",
              "      <td>2018-07-12 00:00:00</td>\n",
              "      <td>2018-03-26 00:00:00</td>\n",
              "      <td>2018-03-06 00:00:00</td>\n",
              "      <td>2017-06-19 00:00:00</td>\n",
              "      <td>2018-08-01 00:00:00</td>\n",
              "      <td>2018-02-21 00:00:00</td>\n",
              "      <td>2017-10-10 00:00:00</td>\n",
              "      <td>2017-10-04 00:00:00</td>\n",
              "      <td>2017-06-26 00:00:00</td>\n",
              "      <td>2018-07-20 00:00:00</td>\n",
              "      <td>2018-04-19 00:00:00</td>\n",
              "      <td>2018-04-19 00:00:00</td>\n",
              "      <td>2017-12-08 00:00:00</td>\n",
              "      <td>2018-01-24 00:00:00</td>\n",
              "      <td>2017-05-15 00:00:00</td>\n",
              "      <td>2018-04-27 00:00:00</td>\n",
              "      <td>2017-11-27 00:00:00</td>\n",
              "      <td>2017-11-27 00:00:00</td>\n",
              "      <td>2017-11-27 00:00:00</td>\n",
              "      <td>2017-11-27 00:00:00</td>\n",
              "      <td>2018-07-23 00:00:00</td>\n",
              "      <td>2018-05-18 00:00:00</td>\n",
              "      <td>2018-08-01 00:00:00</td>\n",
              "      <td>2017-11-10 00:00:00</td>\n",
              "      <td>2017-08-25 00:00:00</td>\n",
              "      <td>2018-06-28 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_category_name</th>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>pet_shop</td>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>perfumaria</td>\n",
              "      <td>ferramentas_jardim</td>\n",
              "      <td>utilidades_domesticas</td>\n",
              "      <td>telefonia</td>\n",
              "      <td>ferramentas_jardim</td>\n",
              "      <td>beleza_saude</td>\n",
              "      <td>livros_tecnicos</td>\n",
              "      <td>beleza_saude</td>\n",
              "      <td>fashion_bolsas_e_acessorios</td>\n",
              "      <td>cama_mesa_banho</td>\n",
              "      <td>ferramentas_jardim</td>\n",
              "      <td>ferramentas_jardim</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>consoles_games</td>\n",
              "      <td>perfumaria</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>cama_mesa_banho</td>\n",
              "      <td>telefonia</td>\n",
              "      <td>moveis_escritorio</td>\n",
              "      <td>fashion_bolsas_e_acessorios</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>malas_acessorios</td>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>alimentos</td>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>agro_industria_e_comercio</td>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>telefonia</td>\n",
              "      <td>eletronicos</td>\n",
              "      <td>cama_mesa_banho</td>\n",
              "      <td>ferramentas_jardim</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>...</td>\n",
              "      <td>casa_construcao</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>bebes</td>\n",
              "      <td>ferramentas_jardim</td>\n",
              "      <td>beleza_saude</td>\n",
              "      <td>eletronicos</td>\n",
              "      <td>eletronicos</td>\n",
              "      <td>eletronicos</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>utilidades_domesticas</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>beleza_saude</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>telefonia</td>\n",
              "      <td>cama_mesa_banho</td>\n",
              "      <td>alimentos</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>malas_acessorios</td>\n",
              "      <td>telefonia</td>\n",
              "      <td>relogios_presentes</td>\n",
              "      <td>telefonia</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>moveis_decoracao</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>instrumentos_musicais</td>\n",
              "      <td>cama_mesa_banho</td>\n",
              "      <td>relogios_presentes</td>\n",
              "      <td>relogios_presentes</td>\n",
              "      <td>relogios_presentes</td>\n",
              "      <td>relogios_presentes</td>\n",
              "      <td>casa_construcao</td>\n",
              "      <td>utilidades_domesticas</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>esporte_lazer</td>\n",
              "      <td>informatica_acessorios</td>\n",
              "      <td>cama_mesa_banho</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_name_lenght</th>\n",
              "      <td>58</td>\n",
              "      <td>56</td>\n",
              "      <td>59</td>\n",
              "      <td>42</td>\n",
              "      <td>59</td>\n",
              "      <td>36</td>\n",
              "      <td>52</td>\n",
              "      <td>39</td>\n",
              "      <td>59</td>\n",
              "      <td>52</td>\n",
              "      <td>57</td>\n",
              "      <td>35</td>\n",
              "      <td>54</td>\n",
              "      <td>57</td>\n",
              "      <td>57</td>\n",
              "      <td>56</td>\n",
              "      <td>37</td>\n",
              "      <td>43</td>\n",
              "      <td>58</td>\n",
              "      <td>51</td>\n",
              "      <td>38</td>\n",
              "      <td>59</td>\n",
              "      <td>46</td>\n",
              "      <td>54</td>\n",
              "      <td>53</td>\n",
              "      <td>35</td>\n",
              "      <td>41</td>\n",
              "      <td>49</td>\n",
              "      <td>59</td>\n",
              "      <td>38</td>\n",
              "      <td>39</td>\n",
              "      <td>60</td>\n",
              "      <td>52</td>\n",
              "      <td>52</td>\n",
              "      <td>52</td>\n",
              "      <td>56</td>\n",
              "      <td>46</td>\n",
              "      <td>46</td>\n",
              "      <td>44</td>\n",
              "      <td>60</td>\n",
              "      <td>...</td>\n",
              "      <td>52</td>\n",
              "      <td>63</td>\n",
              "      <td>59</td>\n",
              "      <td>37</td>\n",
              "      <td>40</td>\n",
              "      <td>46</td>\n",
              "      <td>46</td>\n",
              "      <td>46</td>\n",
              "      <td>43</td>\n",
              "      <td>30</td>\n",
              "      <td>50</td>\n",
              "      <td>31</td>\n",
              "      <td>53</td>\n",
              "      <td>33</td>\n",
              "      <td>60</td>\n",
              "      <td>52</td>\n",
              "      <td>59</td>\n",
              "      <td>56</td>\n",
              "      <td>53</td>\n",
              "      <td>56</td>\n",
              "      <td>41</td>\n",
              "      <td>44</td>\n",
              "      <td>33</td>\n",
              "      <td>57</td>\n",
              "      <td>53</td>\n",
              "      <td>53</td>\n",
              "      <td>56</td>\n",
              "      <td>32</td>\n",
              "      <td>41</td>\n",
              "      <td>50</td>\n",
              "      <td>41</td>\n",
              "      <td>41</td>\n",
              "      <td>41</td>\n",
              "      <td>41</td>\n",
              "      <td>58</td>\n",
              "      <td>43</td>\n",
              "      <td>31</td>\n",
              "      <td>43</td>\n",
              "      <td>56</td>\n",
              "      <td>47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_description_lenght</th>\n",
              "      <td>598</td>\n",
              "      <td>239</td>\n",
              "      <td>695</td>\n",
              "      <td>480</td>\n",
              "      <td>409</td>\n",
              "      <td>558</td>\n",
              "      <td>815</td>\n",
              "      <td>1310</td>\n",
              "      <td>493</td>\n",
              "      <td>1192</td>\n",
              "      <td>614</td>\n",
              "      <td>60</td>\n",
              "      <td>245</td>\n",
              "      <td>366</td>\n",
              "      <td>366</td>\n",
              "      <td>1392</td>\n",
              "      <td>1172</td>\n",
              "      <td>116</td>\n",
              "      <td>2584</td>\n",
              "      <td>693</td>\n",
              "      <td>735</td>\n",
              "      <td>540</td>\n",
              "      <td>1159</td>\n",
              "      <td>151</td>\n",
              "      <td>537</td>\n",
              "      <td>1132</td>\n",
              "      <td>500</td>\n",
              "      <td>300</td>\n",
              "      <td>982</td>\n",
              "      <td>479</td>\n",
              "      <td>383</td>\n",
              "      <td>1953</td>\n",
              "      <td>1153</td>\n",
              "      <td>1153</td>\n",
              "      <td>1153</td>\n",
              "      <td>351</td>\n",
              "      <td>2285</td>\n",
              "      <td>246</td>\n",
              "      <td>152</td>\n",
              "      <td>2136</td>\n",
              "      <td>...</td>\n",
              "      <td>1132</td>\n",
              "      <td>436</td>\n",
              "      <td>809</td>\n",
              "      <td>653</td>\n",
              "      <td>409</td>\n",
              "      <td>2285</td>\n",
              "      <td>2285</td>\n",
              "      <td>2285</td>\n",
              "      <td>518</td>\n",
              "      <td>308</td>\n",
              "      <td>422</td>\n",
              "      <td>1194</td>\n",
              "      <td>1034</td>\n",
              "      <td>897</td>\n",
              "      <td>1209</td>\n",
              "      <td>884</td>\n",
              "      <td>734</td>\n",
              "      <td>536</td>\n",
              "      <td>869</td>\n",
              "      <td>1007</td>\n",
              "      <td>155</td>\n",
              "      <td>965</td>\n",
              "      <td>658</td>\n",
              "      <td>777</td>\n",
              "      <td>871</td>\n",
              "      <td>871</td>\n",
              "      <td>701</td>\n",
              "      <td>280</td>\n",
              "      <td>103</td>\n",
              "      <td>696</td>\n",
              "      <td>1159</td>\n",
              "      <td>1159</td>\n",
              "      <td>1159</td>\n",
              "      <td>1159</td>\n",
              "      <td>918</td>\n",
              "      <td>1002</td>\n",
              "      <td>232</td>\n",
              "      <td>869</td>\n",
              "      <td>1306</td>\n",
              "      <td>511</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_photos_qty</th>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_weight_g</th>\n",
              "      <td>650</td>\n",
              "      <td>30000</td>\n",
              "      <td>3050</td>\n",
              "      <td>200</td>\n",
              "      <td>3750</td>\n",
              "      <td>450</td>\n",
              "      <td>200</td>\n",
              "      <td>13805</td>\n",
              "      <td>2000</td>\n",
              "      <td>850</td>\n",
              "      <td>950</td>\n",
              "      <td>200</td>\n",
              "      <td>1383</td>\n",
              "      <td>1650</td>\n",
              "      <td>1650</td>\n",
              "      <td>1050</td>\n",
              "      <td>200</td>\n",
              "      <td>468</td>\n",
              "      <td>1800</td>\n",
              "      <td>600</td>\n",
              "      <td>800</td>\n",
              "      <td>300</td>\n",
              "      <td>9375</td>\n",
              "      <td>250</td>\n",
              "      <td>1800</td>\n",
              "      <td>9800</td>\n",
              "      <td>2965</td>\n",
              "      <td>2500</td>\n",
              "      <td>150</td>\n",
              "      <td>2500</td>\n",
              "      <td>2650</td>\n",
              "      <td>750</td>\n",
              "      <td>180</td>\n",
              "      <td>180</td>\n",
              "      <td>180</td>\n",
              "      <td>350</td>\n",
              "      <td>150</td>\n",
              "      <td>550</td>\n",
              "      <td>1500</td>\n",
              "      <td>3407</td>\n",
              "      <td>...</td>\n",
              "      <td>350</td>\n",
              "      <td>7800</td>\n",
              "      <td>6600</td>\n",
              "      <td>6700</td>\n",
              "      <td>1110</td>\n",
              "      <td>150</td>\n",
              "      <td>150</td>\n",
              "      <td>150</td>\n",
              "      <td>1238</td>\n",
              "      <td>2300</td>\n",
              "      <td>2850</td>\n",
              "      <td>10225</td>\n",
              "      <td>16550</td>\n",
              "      <td>1600</td>\n",
              "      <td>150</td>\n",
              "      <td>1100</td>\n",
              "      <td>300</td>\n",
              "      <td>800</td>\n",
              "      <td>750</td>\n",
              "      <td>4550</td>\n",
              "      <td>16050</td>\n",
              "      <td>150</td>\n",
              "      <td>400</td>\n",
              "      <td>350</td>\n",
              "      <td>175</td>\n",
              "      <td>175</td>\n",
              "      <td>750</td>\n",
              "      <td>2700</td>\n",
              "      <td>100</td>\n",
              "      <td>200</td>\n",
              "      <td>350</td>\n",
              "      <td>350</td>\n",
              "      <td>350</td>\n",
              "      <td>350</td>\n",
              "      <td>1050</td>\n",
              "      <td>10150</td>\n",
              "      <td>8950</td>\n",
              "      <td>967</td>\n",
              "      <td>100</td>\n",
              "      <td>600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_length_cm</th>\n",
              "      <td>28</td>\n",
              "      <td>50</td>\n",
              "      <td>33</td>\n",
              "      <td>16</td>\n",
              "      <td>35</td>\n",
              "      <td>24</td>\n",
              "      <td>27</td>\n",
              "      <td>35</td>\n",
              "      <td>30</td>\n",
              "      <td>29</td>\n",
              "      <td>35</td>\n",
              "      <td>16</td>\n",
              "      <td>50</td>\n",
              "      <td>30</td>\n",
              "      <td>30</td>\n",
              "      <td>40</td>\n",
              "      <td>16</td>\n",
              "      <td>23</td>\n",
              "      <td>16</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>17</td>\n",
              "      <td>55</td>\n",
              "      <td>16</td>\n",
              "      <td>34</td>\n",
              "      <td>105</td>\n",
              "      <td>41</td>\n",
              "      <td>47</td>\n",
              "      <td>17</td>\n",
              "      <td>34</td>\n",
              "      <td>30</td>\n",
              "      <td>69</td>\n",
              "      <td>17</td>\n",
              "      <td>17</td>\n",
              "      <td>17</td>\n",
              "      <td>19</td>\n",
              "      <td>30</td>\n",
              "      <td>51</td>\n",
              "      <td>27</td>\n",
              "      <td>28</td>\n",
              "      <td>...</td>\n",
              "      <td>18</td>\n",
              "      <td>46</td>\n",
              "      <td>45</td>\n",
              "      <td>35</td>\n",
              "      <td>19</td>\n",
              "      <td>30</td>\n",
              "      <td>30</td>\n",
              "      <td>30</td>\n",
              "      <td>34</td>\n",
              "      <td>37</td>\n",
              "      <td>40</td>\n",
              "      <td>19</td>\n",
              "      <td>22</td>\n",
              "      <td>42</td>\n",
              "      <td>18</td>\n",
              "      <td>50</td>\n",
              "      <td>17</td>\n",
              "      <td>45</td>\n",
              "      <td>16</td>\n",
              "      <td>20</td>\n",
              "      <td>60</td>\n",
              "      <td>20</td>\n",
              "      <td>19</td>\n",
              "      <td>17</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>30</td>\n",
              "      <td>60</td>\n",
              "      <td>60</td>\n",
              "      <td>25</td>\n",
              "      <td>16</td>\n",
              "      <td>16</td>\n",
              "      <td>16</td>\n",
              "      <td>16</td>\n",
              "      <td>16</td>\n",
              "      <td>89</td>\n",
              "      <td>45</td>\n",
              "      <td>21</td>\n",
              "      <td>20</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_height_cm</th>\n",
              "      <td>9</td>\n",
              "      <td>30</td>\n",
              "      <td>13</td>\n",
              "      <td>10</td>\n",
              "      <td>40</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>75</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>25</td>\n",
              "      <td>16</td>\n",
              "      <td>10</td>\n",
              "      <td>22</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>5</td>\n",
              "      <td>18</td>\n",
              "      <td>16</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>4</td>\n",
              "      <td>54</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>15</td>\n",
              "      <td>27</td>\n",
              "      <td>21</td>\n",
              "      <td>13</td>\n",
              "      <td>6</td>\n",
              "      <td>30</td>\n",
              "      <td>11</td>\n",
              "      <td>11</td>\n",
              "      <td>11</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>36</td>\n",
              "      <td>25</td>\n",
              "      <td>12</td>\n",
              "      <td>11</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>19</td>\n",
              "      <td>30</td>\n",
              "      <td>5</td>\n",
              "      <td>11</td>\n",
              "      <td>65</td>\n",
              "      <td>25</td>\n",
              "      <td>6</td>\n",
              "      <td>40</td>\n",
              "      <td>4</td>\n",
              "      <td>15</td>\n",
              "      <td>12</td>\n",
              "      <td>20</td>\n",
              "      <td>40</td>\n",
              "      <td>7</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>30</td>\n",
              "      <td>15</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>14</td>\n",
              "      <td>14</td>\n",
              "      <td>14</td>\n",
              "      <td>14</td>\n",
              "      <td>20</td>\n",
              "      <td>15</td>\n",
              "      <td>26</td>\n",
              "      <td>24</td>\n",
              "      <td>20</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_width_cm</th>\n",
              "      <td>14</td>\n",
              "      <td>40</td>\n",
              "      <td>33</td>\n",
              "      <td>15</td>\n",
              "      <td>30</td>\n",
              "      <td>15</td>\n",
              "      <td>20</td>\n",
              "      <td>45</td>\n",
              "      <td>16</td>\n",
              "      <td>21</td>\n",
              "      <td>20</td>\n",
              "      <td>11</td>\n",
              "      <td>40</td>\n",
              "      <td>30</td>\n",
              "      <td>30</td>\n",
              "      <td>30</td>\n",
              "      <td>12</td>\n",
              "      <td>19</td>\n",
              "      <td>16</td>\n",
              "      <td>21</td>\n",
              "      <td>20</td>\n",
              "      <td>12</td>\n",
              "      <td>19</td>\n",
              "      <td>20</td>\n",
              "      <td>34</td>\n",
              "      <td>28</td>\n",
              "      <td>34</td>\n",
              "      <td>41</td>\n",
              "      <td>13</td>\n",
              "      <td>28</td>\n",
              "      <td>20</td>\n",
              "      <td>11</td>\n",
              "      <td>14</td>\n",
              "      <td>14</td>\n",
              "      <td>14</td>\n",
              "      <td>11</td>\n",
              "      <td>20</td>\n",
              "      <td>41</td>\n",
              "      <td>23</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>36</td>\n",
              "      <td>35</td>\n",
              "      <td>22</td>\n",
              "      <td>18</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>24</td>\n",
              "      <td>20</td>\n",
              "      <td>44</td>\n",
              "      <td>11</td>\n",
              "      <td>40</td>\n",
              "      <td>15</td>\n",
              "      <td>13</td>\n",
              "      <td>30</td>\n",
              "      <td>12</td>\n",
              "      <td>35</td>\n",
              "      <td>15</td>\n",
              "      <td>20</td>\n",
              "      <td>40</td>\n",
              "      <td>14</td>\n",
              "      <td>15</td>\n",
              "      <td>12</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>11</td>\n",
              "      <td>15</td>\n",
              "      <td>11</td>\n",
              "      <td>18</td>\n",
              "      <td>11</td>\n",
              "      <td>11</td>\n",
              "      <td>11</td>\n",
              "      <td>11</td>\n",
              "      <td>16</td>\n",
              "      <td>40</td>\n",
              "      <td>38</td>\n",
              "      <td>19</td>\n",
              "      <td>20</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_category_name_english</th>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>pet_shop</td>\n",
              "      <td>furniture_decor</td>\n",
              "      <td>perfumery</td>\n",
              "      <td>garden_tools</td>\n",
              "      <td>housewares</td>\n",
              "      <td>telephony</td>\n",
              "      <td>garden_tools</td>\n",
              "      <td>health_beauty</td>\n",
              "      <td>books_technical</td>\n",
              "      <td>health_beauty</td>\n",
              "      <td>fashion_bags_accessories</td>\n",
              "      <td>bed_bath_table</td>\n",
              "      <td>garden_tools</td>\n",
              "      <td>garden_tools</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>consoles_games</td>\n",
              "      <td>perfumery</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>bed_bath_table</td>\n",
              "      <td>telephony</td>\n",
              "      <td>office_furniture</td>\n",
              "      <td>fashion_bags_accessories</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>luggage_accessories</td>\n",
              "      <td>furniture_decor</td>\n",
              "      <td>food</td>\n",
              "      <td>furniture_decor</td>\n",
              "      <td>agro_industry_and_commerce</td>\n",
              "      <td>furniture_decor</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>telephony</td>\n",
              "      <td>electronics</td>\n",
              "      <td>bed_bath_table</td>\n",
              "      <td>garden_tools</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>...</td>\n",
              "      <td>home_construction</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>baby</td>\n",
              "      <td>garden_tools</td>\n",
              "      <td>health_beauty</td>\n",
              "      <td>electronics</td>\n",
              "      <td>electronics</td>\n",
              "      <td>electronics</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>furniture_decor</td>\n",
              "      <td>furniture_decor</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>housewares</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>health_beauty</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>telephony</td>\n",
              "      <td>bed_bath_table</td>\n",
              "      <td>food</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>luggage_accessories</td>\n",
              "      <td>telephony</td>\n",
              "      <td>watches_gifts</td>\n",
              "      <td>telephony</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>furniture_decor</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>musical_instruments</td>\n",
              "      <td>bed_bath_table</td>\n",
              "      <td>watches_gifts</td>\n",
              "      <td>watches_gifts</td>\n",
              "      <td>watches_gifts</td>\n",
              "      <td>watches_gifts</td>\n",
              "      <td>home_construction</td>\n",
              "      <td>housewares</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>bed_bath_table</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_unique_id</th>\n",
              "      <td>871766c5855e863f6eccc05f988b23cb</td>\n",
              "      <td>eb28e67c4c0b83846050ddfb8a35d051</td>\n",
              "      <td>3818d81c6709e39d06b2738a8d3a2474</td>\n",
              "      <td>af861d436cfc08b2c2ddefd0ba074622</td>\n",
              "      <td>64b576fb70d441e8f1b2d7d446e483c5</td>\n",
              "      <td>85c835d128beae5b4ce8602c491bf385</td>\n",
              "      <td>635d9ac1680f03288e72ada3a1035803</td>\n",
              "      <td>fda4476abb6307ab3c415b7e6d026526</td>\n",
              "      <td>639d23421f5517f69d0c3d6e6564cf0e</td>\n",
              "      <td>0782c41380992a5a533489063df0eef6</td>\n",
              "      <td>107e6259485efac66428a56f10801f4f</td>\n",
              "      <td>3fb97204945ca0c01bcf3eee6031c5f1</td>\n",
              "      <td>7ed0ea20347f67fe61d1c99fdf8556ae</td>\n",
              "      <td>9e4159995424971423b98c4a8bc11529</td>\n",
              "      <td>9e4159995424971423b98c4a8bc11529</td>\n",
              "      <td>4987996ddcd0ddb20740fdce7c2bfbb1</td>\n",
              "      <td>6062db572f3ef38b7a8ff4307abbfad3</td>\n",
              "      <td>6457be0b331148fb5454efc88d1e03d9</td>\n",
              "      <td>f5f088001070650f9e9a8cd773621f35</td>\n",
              "      <td>b2c72d1e9f6430603b8337d8f1394a99</td>\n",
              "      <td>860fc00d3154ce2346c43ebe47b9b6ce</td>\n",
              "      <td>3588484a539617d91500764822230fb6</td>\n",
              "      <td>1a6cbc34ea404cb0af7ed74df0999354</td>\n",
              "      <td>2193383c470dc9cec894ce78afd0ebd6</td>\n",
              "      <td>e883f26917e2095c439f70c2cf8c914b</td>\n",
              "      <td>13df7b623839b4edc579ee40279d57c8</td>\n",
              "      <td>02daaa0e021d624d1784c4ea5cc84ace</td>\n",
              "      <td>7ac26eac431c6848694a2de6f0327524</td>\n",
              "      <td>b5910f24d2483d697b37e3857b621061</td>\n",
              "      <td>1544f85dff3797491b60f2a5241d14c1</td>\n",
              "      <td>38c3bc2d6df03905e3e8d3d5b079acf4</td>\n",
              "      <td>2ada69d1c5528233e3d9aa3f1d8da1b1</td>\n",
              "      <td>bb8a37225e0279ac8a274c9765617eaf</td>\n",
              "      <td>bb8a37225e0279ac8a274c9765617eaf</td>\n",
              "      <td>bb8a37225e0279ac8a274c9765617eaf</td>\n",
              "      <td>8e5a8d9363eb6296154b65750c8702ca</td>\n",
              "      <td>2e0daa38f7fd081ddcda32d972e5ec50</td>\n",
              "      <td>577edb526f98771b20d6db4a51d79423</td>\n",
              "      <td>33febb33a42a35f5826a22584b127f9d</td>\n",
              "      <td>98758d88bf4b8eef1372ddee45d63178</td>\n",
              "      <td>...</td>\n",
              "      <td>ffe3e199b9d0b7fb7d2d29a5b9498447</td>\n",
              "      <td>e19d6cb4b2c634a869a5c580395f8b26</td>\n",
              "      <td>768b4f16e9602b6f6f92cdddf3cc582c</td>\n",
              "      <td>a1c2e4b4c1b29e41684ebdf3cc6538f8</td>\n",
              "      <td>eda7816b14226ae5c4d346c6054c4fcd</td>\n",
              "      <td>a969e99358a58bed2f4073fd04165a2b</td>\n",
              "      <td>a969e99358a58bed2f4073fd04165a2b</td>\n",
              "      <td>a969e99358a58bed2f4073fd04165a2b</td>\n",
              "      <td>02fb446e82415f8d22a44a8dd49c1954</td>\n",
              "      <td>4e15fee963523774998876e3624952f4</td>\n",
              "      <td>2ccfd5dc1ea812c6386a7a282e5bf180</td>\n",
              "      <td>2c27e67b4518e5db1b0b1faf8fb920c7</td>\n",
              "      <td>7cd07164e3693dd38f4cd09fc3872682</td>\n",
              "      <td>d11fd20c68a7d716b6e2df9bccda5b8e</td>\n",
              "      <td>c837fc7e43f0988bad8b017457238977</td>\n",
              "      <td>66cd6da20c67f83a9cf37e01a0105812</td>\n",
              "      <td>a588b12c755bd175e41e7965e94162d2</td>\n",
              "      <td>d104a1857bcb78c73dec2ac5a46ca210</td>\n",
              "      <td>8e04c0bebce561df488961624d5513f2</td>\n",
              "      <td>7d864c036b302b27d816156e43fe3885</td>\n",
              "      <td>2b19910e856b2ba3e7257e63a093a3df</td>\n",
              "      <td>c71a196d46a70ec611f3922db5755d1d</td>\n",
              "      <td>c86ab5ff2bac777c4e770a383feca4eb</td>\n",
              "      <td>8d488a7bc7c301bd9781b70e7970eeac</td>\n",
              "      <td>028c09f007292c4e3a3b10d296e47987</td>\n",
              "      <td>028c09f007292c4e3a3b10d296e47987</td>\n",
              "      <td>0e1dad535a5b2359a2ff0a7d475ffb86</td>\n",
              "      <td>2a3ab9bf9639491997586882c502540a</td>\n",
              "      <td>b2d2b4204f7fc4b4aeca38e3cd680a7e</td>\n",
              "      <td>6b42acb204802253acec6607ff3a9e0b</td>\n",
              "      <td>f736308cd9952b33b90b9fe94da9c8f5</td>\n",
              "      <td>f736308cd9952b33b90b9fe94da9c8f5</td>\n",
              "      <td>f736308cd9952b33b90b9fe94da9c8f5</td>\n",
              "      <td>f736308cd9952b33b90b9fe94da9c8f5</td>\n",
              "      <td>ecc3d4eb9b17d2f0865d21f2abecc51c</td>\n",
              "      <td>0c9aeda10a71f369396d0c04dce13a64</td>\n",
              "      <td>0da9fe112eae0c74d3ba1fe16de0988b</td>\n",
              "      <td>cd79b407828f02fdbba457111c38e4c4</td>\n",
              "      <td>eb803377c9315b564bdedad672039306</td>\n",
              "      <td>cd76a00d8e3ca5e6ab9ed9ecb6667ac4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_zip_code_prefix</th>\n",
              "      <td>28013</td>\n",
              "      <td>15775</td>\n",
              "      <td>35661</td>\n",
              "      <td>12952</td>\n",
              "      <td>13226</td>\n",
              "      <td>38017</td>\n",
              "      <td>16700</td>\n",
              "      <td>11702</td>\n",
              "      <td>11075</td>\n",
              "      <td>6636</td>\n",
              "      <td>13419</td>\n",
              "      <td>15910</td>\n",
              "      <td>21810</td>\n",
              "      <td>6600</td>\n",
              "      <td>6600</td>\n",
              "      <td>37137</td>\n",
              "      <td>13044</td>\n",
              "      <td>13458</td>\n",
              "      <td>13208</td>\n",
              "      <td>11533</td>\n",
              "      <td>4679</td>\n",
              "      <td>18900</td>\n",
              "      <td>27213</td>\n",
              "      <td>86870</td>\n",
              "      <td>22461</td>\n",
              "      <td>26263</td>\n",
              "      <td>1033</td>\n",
              "      <td>75123</td>\n",
              "      <td>9820</td>\n",
              "      <td>6160</td>\n",
              "      <td>22790</td>\n",
              "      <td>38304</td>\n",
              "      <td>74663</td>\n",
              "      <td>74663</td>\n",
              "      <td>74663</td>\n",
              "      <td>83325</td>\n",
              "      <td>85948</td>\n",
              "      <td>22775</td>\n",
              "      <td>45860</td>\n",
              "      <td>57250</td>\n",
              "      <td>...</td>\n",
              "      <td>38411</td>\n",
              "      <td>24451</td>\n",
              "      <td>48850</td>\n",
              "      <td>28740</td>\n",
              "      <td>1020</td>\n",
              "      <td>41810</td>\n",
              "      <td>41810</td>\n",
              "      <td>41810</td>\n",
              "      <td>8040</td>\n",
              "      <td>83065</td>\n",
              "      <td>12425</td>\n",
              "      <td>5653</td>\n",
              "      <td>21020</td>\n",
              "      <td>4880</td>\n",
              "      <td>6401</td>\n",
              "      <td>50790</td>\n",
              "      <td>77807</td>\n",
              "      <td>28660</td>\n",
              "      <td>38307</td>\n",
              "      <td>14700</td>\n",
              "      <td>22420</td>\n",
              "      <td>9715</td>\n",
              "      <td>27261</td>\n",
              "      <td>30881</td>\n",
              "      <td>58075</td>\n",
              "      <td>58075</td>\n",
              "      <td>4119</td>\n",
              "      <td>59955</td>\n",
              "      <td>13083</td>\n",
              "      <td>28540</td>\n",
              "      <td>56912</td>\n",
              "      <td>56912</td>\n",
              "      <td>56912</td>\n",
              "      <td>56912</td>\n",
              "      <td>39401</td>\n",
              "      <td>65077</td>\n",
              "      <td>81690</td>\n",
              "      <td>4039</td>\n",
              "      <td>13289</td>\n",
              "      <td>18605</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_city</th>\n",
              "      <td>campos dos goytacazes</td>\n",
              "      <td>santa fe do sul</td>\n",
              "      <td>para de minas</td>\n",
              "      <td>atibaia</td>\n",
              "      <td>varzea paulista</td>\n",
              "      <td>uberaba</td>\n",
              "      <td>guararapes</td>\n",
              "      <td>praia grande</td>\n",
              "      <td>santos</td>\n",
              "      <td>jandira</td>\n",
              "      <td>piracicaba</td>\n",
              "      <td>monte alto</td>\n",
              "      <td>rio de janeiro</td>\n",
              "      <td>jandira</td>\n",
              "      <td>jandira</td>\n",
              "      <td>alfenas</td>\n",
              "      <td>campinas</td>\n",
              "      <td>santa barbara d'oeste</td>\n",
              "      <td>jundiai</td>\n",
              "      <td>cubatao</td>\n",
              "      <td>sao paulo</td>\n",
              "      <td>santa cruz do rio pardo</td>\n",
              "      <td>volta redonda</td>\n",
              "      <td>ivaipora</td>\n",
              "      <td>rio de janeiro</td>\n",
              "      <td>nova iguacu</td>\n",
              "      <td>sao paulo</td>\n",
              "      <td>anapolis</td>\n",
              "      <td>sao bernardo do campo</td>\n",
              "      <td>osasco</td>\n",
              "      <td>rio de janeiro</td>\n",
              "      <td>ituiutaba</td>\n",
              "      <td>goiania</td>\n",
              "      <td>goiania</td>\n",
              "      <td>goiania</td>\n",
              "      <td>pinhais</td>\n",
              "      <td>pato bragado</td>\n",
              "      <td>rio de janeiro</td>\n",
              "      <td>canavieiras</td>\n",
              "      <td>campo alegre</td>\n",
              "      <td>...</td>\n",
              "      <td>uberlandia</td>\n",
              "      <td>sao goncalo</td>\n",
              "      <td>itiuba</td>\n",
              "      <td>conceicao de macabu</td>\n",
              "      <td>sao paulo</td>\n",
              "      <td>salvador</td>\n",
              "      <td>salvador</td>\n",
              "      <td>salvador</td>\n",
              "      <td>sao paulo</td>\n",
              "      <td>sao jose dos pinhais</td>\n",
              "      <td>pindamonhangaba</td>\n",
              "      <td>sao paulo</td>\n",
              "      <td>rio de janeiro</td>\n",
              "      <td>sao paulo</td>\n",
              "      <td>barueri</td>\n",
              "      <td>recife</td>\n",
              "      <td>araguaina</td>\n",
              "      <td>bom jardim</td>\n",
              "      <td>ituiutaba</td>\n",
              "      <td>bebedouro</td>\n",
              "      <td>rio de janeiro</td>\n",
              "      <td>sao bernardo do campo</td>\n",
              "      <td>volta redonda</td>\n",
              "      <td>belo horizonte</td>\n",
              "      <td>joao pessoa</td>\n",
              "      <td>joao pessoa</td>\n",
              "      <td>sao paulo</td>\n",
              "      <td>tenente ananias</td>\n",
              "      <td>campinas</td>\n",
              "      <td>cordeiro</td>\n",
              "      <td>serra talhada</td>\n",
              "      <td>serra talhada</td>\n",
              "      <td>serra talhada</td>\n",
              "      <td>serra talhada</td>\n",
              "      <td>montes claros</td>\n",
              "      <td>sao luis</td>\n",
              "      <td>curitiba</td>\n",
              "      <td>sao paulo</td>\n",
              "      <td>vinhedo</td>\n",
              "      <td>botucatu</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_state</th>\n",
              "      <td>RJ</td>\n",
              "      <td>SP</td>\n",
              "      <td>MG</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>MG</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>RJ</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>MG</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>RJ</td>\n",
              "      <td>PR</td>\n",
              "      <td>RJ</td>\n",
              "      <td>RJ</td>\n",
              "      <td>SP</td>\n",
              "      <td>GO</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>RJ</td>\n",
              "      <td>MG</td>\n",
              "      <td>GO</td>\n",
              "      <td>GO</td>\n",
              "      <td>GO</td>\n",
              "      <td>PR</td>\n",
              "      <td>PR</td>\n",
              "      <td>RJ</td>\n",
              "      <td>BA</td>\n",
              "      <td>AL</td>\n",
              "      <td>...</td>\n",
              "      <td>MG</td>\n",
              "      <td>RJ</td>\n",
              "      <td>BA</td>\n",
              "      <td>RJ</td>\n",
              "      <td>SP</td>\n",
              "      <td>BA</td>\n",
              "      <td>BA</td>\n",
              "      <td>BA</td>\n",
              "      <td>SP</td>\n",
              "      <td>PR</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>RJ</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>PE</td>\n",
              "      <td>TO</td>\n",
              "      <td>RJ</td>\n",
              "      <td>MG</td>\n",
              "      <td>SP</td>\n",
              "      <td>RJ</td>\n",
              "      <td>SP</td>\n",
              "      <td>RJ</td>\n",
              "      <td>MG</td>\n",
              "      <td>PB</td>\n",
              "      <td>PB</td>\n",
              "      <td>SP</td>\n",
              "      <td>RN</td>\n",
              "      <td>SP</td>\n",
              "      <td>RJ</td>\n",
              "      <td>PE</td>\n",
              "      <td>PE</td>\n",
              "      <td>PE</td>\n",
              "      <td>PE</td>\n",
              "      <td>MG</td>\n",
              "      <td>MA</td>\n",
              "      <td>PR</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "      <td>SP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_id</th>\n",
              "      <td>97ca439bc427b48bc1cd7177abe71365</td>\n",
              "      <td>7b07bacd811c4117b742569b04ce3580</td>\n",
              "      <td>0c5b33dea94867d1ac402749e5438e8b</td>\n",
              "      <td>f4028d019cb58564807486a6aaf33817</td>\n",
              "      <td>940144190dcba6351888cafa43f3a3a5</td>\n",
              "      <td>5e4e50af3b7960b7a10d86ec869509e8</td>\n",
              "      <td>0381de7572d99d75230ce91207807265</td>\n",
              "      <td>f0733ebeb51b637dfdc953983c867b89</td>\n",
              "      <td>67b1ab8f3ec19d5a90f153f21757d3a1</td>\n",
              "      <td>5c0b7e34ed85ec659bb064902d878e7a</td>\n",
              "      <td>7e92c32ae297ef950ee69781d9f1760c</td>\n",
              "      <td>5595c192e3c1566ab4e7a2748b8ed297</td>\n",
              "      <td>6322c405c0f34bf3ad870fd1a6b1fced</td>\n",
              "      <td>5505c1cce299b1e0b3f8e4b428417362</td>\n",
              "      <td>5505c1cce299b1e0b3f8e4b428417362</td>\n",
              "      <td>236ccf78a5c4c350c18fdc1ae12b0187</td>\n",
              "      <td>787a452b54147f8f64737b1e040234af</td>\n",
              "      <td>00800678dcf28b0ea0caef2147b6945d</td>\n",
              "      <td>51b9186876d4708a91786f8517fe7106</td>\n",
              "      <td>3b9a423bdbe8734ddfeb09bced16e5d9</td>\n",
              "      <td>06f45fcd8b9b54c30b0de110eb849228</td>\n",
              "      <td>a5fb93d6a9e707bd84c07da74e8d79fd</td>\n",
              "      <td>775038877f3c507777081ff685e14a60</td>\n",
              "      <td>fa2d523cc60173d4889520763a2e4851</td>\n",
              "      <td>f55e59915a07435c3615737a15470d96</td>\n",
              "      <td>e79b1300216401c0212ab9b5a66372ff</td>\n",
              "      <td>04a15fdeccc0572ca4f52b16cd50408a</td>\n",
              "      <td>08af1a16cca5edd546f4a10b6e87af2e</td>\n",
              "      <td>4ff9a24999699f7104ed23fec2563351</td>\n",
              "      <td>b5c9aa83935388c89bd9b1b2ce6d1439</td>\n",
              "      <td>fe1711409007a1243f6fa3a1118d416c</td>\n",
              "      <td>174a50ecc3181301a3585ff14ab5f98b</td>\n",
              "      <td>29ae131f1e1b52d81fb3ff6427ceb007</td>\n",
              "      <td>29ae131f1e1b52d81fb3ff6427ceb007</td>\n",
              "      <td>29ae131f1e1b52d81fb3ff6427ceb007</td>\n",
              "      <td>81c4070474d420a77a2254b8a5473f6a</td>\n",
              "      <td>282ec15daab81bd9afe2452fa0ee7b39</td>\n",
              "      <td>28e20f3ef22e8795ea14e65f54e087a3</td>\n",
              "      <td>f11d548dc1a7c713bff0b6d2ef0dff7c</td>\n",
              "      <td>f7bbac6b6901d7636435ea406a856e34</td>\n",
              "      <td>...</td>\n",
              "      <td>35c38f254835f157b51a1770b91cb205</td>\n",
              "      <td>45205fa09b3d9bd6c46fe2438ed0f350</td>\n",
              "      <td>c931b10d00040366429d6f35406a9c1a</td>\n",
              "      <td>d8b7a27e0ca2736c310d24a87bcba62a</td>\n",
              "      <td>45f17d4d646ab56632c51159f06a5b14</td>\n",
              "      <td>63f01eff060a94c562615719b3cc7e8c</td>\n",
              "      <td>63f01eff060a94c562615719b3cc7e8c</td>\n",
              "      <td>63f01eff060a94c562615719b3cc7e8c</td>\n",
              "      <td>e1c7f56bd61e4f0b284f66bf600dd64e</td>\n",
              "      <td>4e78f83fed69a70a3eb2796a9f24b368</td>\n",
              "      <td>49c3df0bcbf2d73e888164aa215e55a4</td>\n",
              "      <td>2eb4048dad368d3403dcf6b007d0cdec</td>\n",
              "      <td>3fe18c2deb0394df305dcfe3f19555c3</td>\n",
              "      <td>85ebc8f24b564ee8b85dbe209a5892e1</td>\n",
              "      <td>7c689f84c1fa0f0f12be33203ba6b21d</td>\n",
              "      <td>48ea312f89b793c39491fd2ba70e8d5b</td>\n",
              "      <td>cf0b8c06ba024a8a8d3f2ac51fcd99f4</td>\n",
              "      <td>c9b8be35bce7835ead3524ce03533ea4</td>\n",
              "      <td>8d9e9d54d74da0aac8ea7bceb754dd97</td>\n",
              "      <td>b18bbbad8ed93c9dafe7cdbb3e0d5f09</td>\n",
              "      <td>56813fd9cb7e1f24340539960a311122</td>\n",
              "      <td>dc668e3a7e692f8400234c769dddc2b7</td>\n",
              "      <td>18fd272eb3b30d832d8f459ca0bfc24b</td>\n",
              "      <td>04be5443ee0904052de26dcaaf90dff9</td>\n",
              "      <td>2b97d83f7c2b3a3b4285174e77379fbc</td>\n",
              "      <td>2b97d83f7c2b3a3b4285174e77379fbc</td>\n",
              "      <td>d36aebe5756a7aecd9805954a8533285</td>\n",
              "      <td>b49f4e0ca71a9801d56ff4e47cff1ded</td>\n",
              "      <td>8d5c94767f299be3d6f88fd407377fa8</td>\n",
              "      <td>75dc15ce1ccf026e1c9443a0d94aa183</td>\n",
              "      <td>269edb5280ad1f999b5043c93cc4e845</td>\n",
              "      <td>269edb5280ad1f999b5043c93cc4e845</td>\n",
              "      <td>269edb5280ad1f999b5043c93cc4e845</td>\n",
              "      <td>269edb5280ad1f999b5043c93cc4e845</td>\n",
              "      <td>a614fd24fbd8348db190dc720530e101</td>\n",
              "      <td>9185f849f32d82e216a4e025e0c50f5c</td>\n",
              "      <td>be803f6a93d64719fd685c1cc610918a</td>\n",
              "      <td>dbdd81cd59a1a9f94a10a990b4d48dce</td>\n",
              "      <td>fba117c9ac40d41ca7be54741f471303</td>\n",
              "      <td>b2700869a37f1aafc9dda829dc2f9027</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_score</th>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_comment_title</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Boa</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>produto não entregue</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Super Recomendo</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_comment_message</th>\n",
              "      <td>Perfeito, produto entregue antes do combinado.</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Chegou antes do prazo previsto e o produto sur...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Gostei pois veio no prazo determinado .</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Na descrição do produto quando fui efetuar a c...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>A caixa do produto veio com uma pequena avaria...</td>\n",
              "      <td>Fiquei um pouco triste, achei que a cor do cor...</td>\n",
              "      <td>Excelente serviço de compras on line.</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Mudo minha opinião assim que receber o produto...</td>\n",
              "      <td>Recebi td certinho antes do prazo!</td>\n",
              "      <td>Bom produto</td>\n",
              "      <td>5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>super recomendo</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Recebi o long 10 dias após a compra, e chegou ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>produto como descrito, satisfeitíssima com a c...</td>\n",
              "      <td>Produto entregue adequadamente e muito rápido,...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>COMPREI O PRODUTO: MACA PERUANA com VITAMINA C...</td>\n",
              "      <td>COMPREI O PRODUTO: MACA PERUANA com VITAMINA C...</td>\n",
              "      <td>COMPREI O PRODUTO: MACA PERUANA com VITAMINA C...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Entrega muito demorada. Ainda não recebi o pro...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>Produto, chegou corretamente, porém houve uma ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Produto dentro do esperado. Entrega rápida, an...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Amo comprar no baratheon, sempre recebemos os ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Adorei o produto ótimo e recomendo.</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Tudo ok</td>\n",
              "      <td>Tudo ok</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>A compra foi feita Há mais de um mes e ainda n...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Recebi o produto antes do prazo e corretamente.</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_creation_date</th>\n",
              "      <td>2017-09-21 00:00:00</td>\n",
              "      <td>2017-05-13 00:00:00</td>\n",
              "      <td>2018-01-23 00:00:00</td>\n",
              "      <td>2018-08-15 00:00:00</td>\n",
              "      <td>2017-03-02 00:00:00</td>\n",
              "      <td>2017-05-23 00:00:00</td>\n",
              "      <td>2017-12-19 00:00:00</td>\n",
              "      <td>2018-07-10 00:00:00</td>\n",
              "      <td>2018-03-30 00:00:00</td>\n",
              "      <td>2018-07-05 00:00:00</td>\n",
              "      <td>2018-03-30 00:00:00</td>\n",
              "      <td>2018-08-08 00:00:00</td>\n",
              "      <td>2018-07-31 00:00:00</td>\n",
              "      <td>2018-02-27 00:00:00</td>\n",
              "      <td>2018-02-27 00:00:00</td>\n",
              "      <td>2018-08-23 00:00:00</td>\n",
              "      <td>2018-05-01 00:00:00</td>\n",
              "      <td>2018-05-19 00:00:00</td>\n",
              "      <td>2017-08-20 00:00:00</td>\n",
              "      <td>2018-03-13 00:00:00</td>\n",
              "      <td>2018-03-28 00:00:00</td>\n",
              "      <td>2017-12-09 00:00:00</td>\n",
              "      <td>2018-03-23 00:00:00</td>\n",
              "      <td>2018-03-09 00:00:00</td>\n",
              "      <td>2017-09-24 00:00:00</td>\n",
              "      <td>2017-08-17 00:00:00</td>\n",
              "      <td>2018-01-27 00:00:00</td>\n",
              "      <td>2017-04-08 00:00:00</td>\n",
              "      <td>2018-06-14 00:00:00</td>\n",
              "      <td>2017-12-21 00:00:00</td>\n",
              "      <td>2017-12-12 00:00:00</td>\n",
              "      <td>2018-04-26 00:00:00</td>\n",
              "      <td>2017-10-28 00:00:00</td>\n",
              "      <td>2017-10-28 00:00:00</td>\n",
              "      <td>2017-10-28 00:00:00</td>\n",
              "      <td>2017-06-08 00:00:00</td>\n",
              "      <td>2018-02-02 00:00:00</td>\n",
              "      <td>2018-01-24 00:00:00</td>\n",
              "      <td>2017-05-23 00:00:00</td>\n",
              "      <td>2017-05-21 00:00:00</td>\n",
              "      <td>...</td>\n",
              "      <td>2017-04-06 00:00:00</td>\n",
              "      <td>2017-06-29 00:00:00</td>\n",
              "      <td>2017-09-20 00:00:00</td>\n",
              "      <td>2018-07-24 00:00:00</td>\n",
              "      <td>2018-03-29 00:00:00</td>\n",
              "      <td>2018-03-24 00:00:00</td>\n",
              "      <td>2018-03-24 00:00:00</td>\n",
              "      <td>2018-03-24 00:00:00</td>\n",
              "      <td>2017-08-15 00:00:00</td>\n",
              "      <td>2018-08-22 00:00:00</td>\n",
              "      <td>2017-10-26 00:00:00</td>\n",
              "      <td>2017-07-15 00:00:00</td>\n",
              "      <td>2018-02-06 00:00:00</td>\n",
              "      <td>2017-07-16 00:00:00</td>\n",
              "      <td>2018-06-29 00:00:00</td>\n",
              "      <td>2018-03-08 00:00:00</td>\n",
              "      <td>2018-03-09 00:00:00</td>\n",
              "      <td>2017-06-07 00:00:00</td>\n",
              "      <td>2018-07-28 00:00:00</td>\n",
              "      <td>2018-02-09 00:00:00</td>\n",
              "      <td>2017-09-29 00:00:00</td>\n",
              "      <td>2017-09-22 00:00:00</td>\n",
              "      <td>2017-06-09 00:00:00</td>\n",
              "      <td>2018-07-07 00:00:00</td>\n",
              "      <td>2018-04-08 00:00:00</td>\n",
              "      <td>2018-04-08 00:00:00</td>\n",
              "      <td>2017-11-30 00:00:00</td>\n",
              "      <td>2018-01-09 00:00:00</td>\n",
              "      <td>2017-05-17 00:00:00</td>\n",
              "      <td>2018-04-17 00:00:00</td>\n",
              "      <td>2017-11-18 00:00:00</td>\n",
              "      <td>2017-11-18 00:00:00</td>\n",
              "      <td>2017-11-18 00:00:00</td>\n",
              "      <td>2017-11-18 00:00:00</td>\n",
              "      <td>2018-07-06 00:00:00</td>\n",
              "      <td>2018-05-11 00:00:00</td>\n",
              "      <td>2018-07-24 00:00:00</td>\n",
              "      <td>2017-10-29 00:00:00</td>\n",
              "      <td>2017-08-17 00:00:00</td>\n",
              "      <td>2018-06-15 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>review_answer_timestamp</th>\n",
              "      <td>2017-09-22 10:57:03</td>\n",
              "      <td>2017-05-15 11:34:13</td>\n",
              "      <td>2018-01-23 16:06:31</td>\n",
              "      <td>2018-08-15 16:39:01</td>\n",
              "      <td>2017-03-03 10:54:59</td>\n",
              "      <td>2017-05-24 19:00:09</td>\n",
              "      <td>2017-12-29 02:40:12</td>\n",
              "      <td>2018-07-11 20:14:25</td>\n",
              "      <td>2018-04-02 00:52:01</td>\n",
              "      <td>2018-07-05 23:17:04</td>\n",
              "      <td>2018-03-30 04:04:56</td>\n",
              "      <td>2018-08-09 00:12:30</td>\n",
              "      <td>2018-08-01 23:05:10</td>\n",
              "      <td>2018-03-02 10:20:40</td>\n",
              "      <td>2018-03-02 10:20:40</td>\n",
              "      <td>2018-08-23 16:11:56</td>\n",
              "      <td>2018-05-01 21:14:43</td>\n",
              "      <td>2018-05-22 10:52:24</td>\n",
              "      <td>2017-08-20 19:56:31</td>\n",
              "      <td>2018-03-13 23:03:22</td>\n",
              "      <td>2018-03-28 18:32:10</td>\n",
              "      <td>2017-12-11 09:55:13</td>\n",
              "      <td>2018-03-24 04:17:06</td>\n",
              "      <td>2018-03-13 14:04:38</td>\n",
              "      <td>2017-09-24 18:35:01</td>\n",
              "      <td>2017-08-18 00:24:35</td>\n",
              "      <td>2018-01-28 13:18:49</td>\n",
              "      <td>2017-04-13 16:42:37</td>\n",
              "      <td>2018-06-14 19:50:09</td>\n",
              "      <td>2017-12-24 05:03:01</td>\n",
              "      <td>2017-12-13 11:08:31</td>\n",
              "      <td>2018-04-29 11:07:36</td>\n",
              "      <td>2017-10-28 23:20:11</td>\n",
              "      <td>2017-10-28 23:20:11</td>\n",
              "      <td>2017-10-28 23:20:11</td>\n",
              "      <td>2017-06-09 14:25:13</td>\n",
              "      <td>2018-02-03 09:38:42</td>\n",
              "      <td>2018-01-24 23:36:29</td>\n",
              "      <td>2017-05-24 20:08:51</td>\n",
              "      <td>2017-05-21 11:30:42</td>\n",
              "      <td>...</td>\n",
              "      <td>2017-04-10 13:32:15</td>\n",
              "      <td>2017-07-04 00:03:38</td>\n",
              "      <td>2017-09-22 00:41:31</td>\n",
              "      <td>2018-07-25 00:25:51</td>\n",
              "      <td>2018-04-02 12:37:00</td>\n",
              "      <td>2018-03-24 15:21:09</td>\n",
              "      <td>2018-03-24 15:21:09</td>\n",
              "      <td>2018-03-24 15:21:09</td>\n",
              "      <td>2017-08-15 20:51:08</td>\n",
              "      <td>2018-08-25 14:22:54</td>\n",
              "      <td>2017-10-27 19:32:58</td>\n",
              "      <td>2017-07-15 23:17:04</td>\n",
              "      <td>2018-02-06 18:57:43</td>\n",
              "      <td>2017-07-18 18:28:10</td>\n",
              "      <td>2018-06-30 15:56:43</td>\n",
              "      <td>2018-03-13 12:10:38</td>\n",
              "      <td>2018-04-23 17:52:49</td>\n",
              "      <td>2017-06-07 15:16:45</td>\n",
              "      <td>2018-07-30 16:20:24</td>\n",
              "      <td>2018-02-14 07:00:47</td>\n",
              "      <td>2017-10-02 08:29:15</td>\n",
              "      <td>2017-09-23 02:04:49</td>\n",
              "      <td>2017-06-12 11:05:17</td>\n",
              "      <td>2018-07-10 16:11:34</td>\n",
              "      <td>2018-04-12 20:25:15</td>\n",
              "      <td>2018-04-12 20:25:15</td>\n",
              "      <td>2017-12-02 10:52:34</td>\n",
              "      <td>2018-01-11 23:56:38</td>\n",
              "      <td>2017-05-17 12:51:43</td>\n",
              "      <td>2018-04-17 20:36:49</td>\n",
              "      <td>2017-11-18 22:50:50</td>\n",
              "      <td>2017-11-18 22:50:50</td>\n",
              "      <td>2017-11-18 22:50:50</td>\n",
              "      <td>2017-11-18 22:50:50</td>\n",
              "      <td>2018-07-09 10:41:17</td>\n",
              "      <td>2018-05-14 12:53:47</td>\n",
              "      <td>2018-07-25 09:25:29</td>\n",
              "      <td>2017-10-29 21:33:52</td>\n",
              "      <td>2017-08-18 12:24:05</td>\n",
              "      <td>2018-06-17 21:27:09</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>33 rows × 113322 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                                       0       ...                            113321\n",
              "order_id                                     00010242fe8c5a6d1ba2dd792cb16214  ...  fffe41c64501cc87c801fd61db3f6244\n",
              "order_item_id                                                               1  ...                                 1\n",
              "product_id                                   4244733e06e7ecb4970a6e2683c13e61  ...  350688d9dc1e75ff97be326363655e01\n",
              "seller_id                                    48436dade18ac8b2bce089ec2a041202  ...  f7ccf836d21b2fb1de37564105216cc1\n",
              "shipping_limit_date                                       2017-09-19 09:45:35  ...               2018-06-12 17:10:13\n",
              "price                                                                    58.9  ...                                43\n",
              "freight_value                                                           13.29  ...                             12.79\n",
              "customer_id                                  3ce436f183e68e07877b285a838db11a  ...  96d649da0cc4ff33bb408b199d4c7dcf\n",
              "order_status                                                        delivered  ...                         delivered\n",
              "order_purchase_timestamp                                  2017-09-13 08:59:02  ...               2018-06-09 17:00:18\n",
              "order_approved_at                                         2017-09-13 09:45:35  ...               2018-06-09 17:10:13\n",
              "order_delivered_carrier_date                              2017-09-19 18:34:16  ...               2018-06-11 14:11:00\n",
              "order_delivered_customer_date                             2017-09-20 23:43:48  ...               2018-06-14 17:56:26\n",
              "order_estimated_delivery_date                             2017-09-29 00:00:00  ...               2018-06-28 00:00:00\n",
              "product_category_name                                              cool_stuff  ...                   cama_mesa_banho\n",
              "product_name_lenght                                                        58  ...                                47\n",
              "product_description_lenght                                                598  ...                               511\n",
              "product_photos_qty                                                          4  ...                                 1\n",
              "product_weight_g                                                          650  ...                               600\n",
              "product_length_cm                                                          28  ...                                30\n",
              "product_height_cm                                                           9  ...                                 3\n",
              "product_width_cm                                                           14  ...                                19\n",
              "product_category_name_english                                      cool_stuff  ...                    bed_bath_table\n",
              "customer_unique_id                           871766c5855e863f6eccc05f988b23cb  ...  cd76a00d8e3ca5e6ab9ed9ecb6667ac4\n",
              "customer_zip_code_prefix                                                28013  ...                             18605\n",
              "customer_city                                           campos dos goytacazes  ...                          botucatu\n",
              "customer_state                                                             RJ  ...                                SP\n",
              "review_id                                    97ca439bc427b48bc1cd7177abe71365  ...  b2700869a37f1aafc9dda829dc2f9027\n",
              "review_score                                                                5  ...                                 5\n",
              "review_comment_title                                                      NaN  ...                               NaN\n",
              "review_comment_message         Perfeito, produto entregue antes do combinado.  ...                               NaN\n",
              "review_creation_date                                      2017-09-21 00:00:00  ...               2018-06-15 00:00:00\n",
              "review_answer_timestamp                                   2017-09-22 10:57:03  ...               2018-06-17 21:27:09\n",
              "\n",
              "[33 rows x 113322 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "seos6E5muBPo",
        "outputId": "80cf8f39-8460-4285-e4b4-e223c1b45127"
      },
      "source": [
        "# null 값 확인\n",
        "order_.isna().sum() \n",
        "\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "order_id                             0\n",
              "order_item_id                        0\n",
              "product_id                           0\n",
              "seller_id                            0\n",
              "shipping_limit_date                  0\n",
              "price                                0\n",
              "freight_value                        0\n",
              "customer_id                          0\n",
              "order_status                         0\n",
              "order_purchase_timestamp             0\n",
              "order_approved_at                   15\n",
              "order_delivered_carrier_date      1203\n",
              "order_delivered_customer_date     2475\n",
              "order_estimated_delivery_date        0\n",
              "product_category_name             1612\n",
              "product_name_lenght               1612\n",
              "product_description_lenght        1612\n",
              "product_photos_qty                1612\n",
              "product_weight_g                    18\n",
              "product_length_cm                   18\n",
              "product_height_cm                   18\n",
              "product_width_cm                    18\n",
              "product_category_name_english     1636\n",
              "customer_unique_id                   0\n",
              "customer_zip_code_prefix             0\n",
              "customer_city                        0\n",
              "customer_state                       0\n",
              "review_id                            0\n",
              "review_score                         0\n",
              "review_comment_title             99700\n",
              "review_comment_message           64730\n",
              "review_creation_date                 0\n",
              "review_answer_timestamp              0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9tAltVBn9jic",
        "outputId": "28264d1d-624a-4efa-8a59-7a9dd076997d"
      },
      "source": [
        "# review_comment_title/message 데이터가 많이 없어 제외. / customer_unique_id 는 customer_id와 겹치므로 제외\n",
        "order_ = order_.drop(['review_comment_title', 'review_comment_message', 'customer_unique_id'], axis=1)\n",
        "order_.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "order_id                            0\n",
              "order_item_id                       0\n",
              "product_id                          0\n",
              "seller_id                           0\n",
              "shipping_limit_date                 0\n",
              "price                               0\n",
              "freight_value                       0\n",
              "customer_id                         0\n",
              "order_status                        0\n",
              "order_purchase_timestamp            0\n",
              "order_approved_at                  15\n",
              "order_delivered_carrier_date     1203\n",
              "order_delivered_customer_date    2475\n",
              "order_estimated_delivery_date       0\n",
              "product_category_name            1612\n",
              "product_name_lenght              1612\n",
              "product_description_lenght       1612\n",
              "product_photos_qty               1612\n",
              "product_weight_g                   18\n",
              "product_length_cm                  18\n",
              "product_height_cm                  18\n",
              "product_width_cm                   18\n",
              "product_category_name_english    1636\n",
              "customer_zip_code_prefix            0\n",
              "customer_city                       0\n",
              "customer_state                      0\n",
              "review_id                           0\n",
              "review_score                        0\n",
              "review_creation_date                0\n",
              "review_answer_timestamp             0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wwj5ROaG-SUn",
        "outputId": "827de932-fc96-42b7-c975-45453b3ad63f"
      },
      "source": [
        "# 그 외 칼럼에서 na 값 제거\n",
        "order_ = order_.dropna()\n",
        "order_.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "order_id                         0\n",
              "order_item_id                    0\n",
              "product_id                       0\n",
              "seller_id                        0\n",
              "shipping_limit_date              0\n",
              "price                            0\n",
              "freight_value                    0\n",
              "customer_id                      0\n",
              "order_status                     0\n",
              "order_purchase_timestamp         0\n",
              "order_approved_at                0\n",
              "order_delivered_carrier_date     0\n",
              "order_delivered_customer_date    0\n",
              "order_estimated_delivery_date    0\n",
              "product_category_name            0\n",
              "product_name_lenght              0\n",
              "product_description_lenght       0\n",
              "product_photos_qty               0\n",
              "product_weight_g                 0\n",
              "product_length_cm                0\n",
              "product_height_cm                0\n",
              "product_width_cm                 0\n",
              "product_category_name_english    0\n",
              "customer_zip_code_prefix         0\n",
              "customer_city                    0\n",
              "customer_state                   0\n",
              "review_id                        0\n",
              "review_score                     0\n",
              "review_creation_date             0\n",
              "review_answer_timestamp          0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "IwQDTdR0-av1",
        "outputId": "5a7af69b-204b-4979-e166-bf9d5e70c758"
      },
      "source": [
        "df = order_[['customer_id', 'product_id', 'product_category_name_english',\n",
        "             'review_score']]\n",
        "df\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>product_category_name_english</th>\n",
              "      <th>review_score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3ce436f183e68e07877b285a838db11a</td>\n",
              "      <td>4244733e06e7ecb4970a6e2683c13e61</td>\n",
              "      <td>cool_stuff</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>f6dd3ec061db4e3987629fe6b26e5cce</td>\n",
              "      <td>e5f2d52b802189ee658865ca93d83a8f</td>\n",
              "      <td>pet_shop</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6489ae5e4333f3693df5ad4372dab6d3</td>\n",
              "      <td>c777355d18b72b67abbeef9df44fd0fd</td>\n",
              "      <td>furniture_decor</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>d4eb9395c8c0431ee92fce09860c5a06</td>\n",
              "      <td>7634da152a4610f1595efa32f14722fc</td>\n",
              "      <td>perfumery</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>58dbd0b2d70206bf40e62cd34e84d795</td>\n",
              "      <td>ac6c3623068f30de03045865e4e10089</td>\n",
              "      <td>garden_tools</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113317</th>\n",
              "      <td>b51593916b4b8e0d6f66f2ae24f2673d</td>\n",
              "      <td>4aa6014eceb682077f9dc4bffebc05b0</td>\n",
              "      <td>housewares</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113318</th>\n",
              "      <td>84c5d4fbaf120aae381fad077416eaa0</td>\n",
              "      <td>32e07fd915822b0765e448c4dd74c828</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113319</th>\n",
              "      <td>29309aa813182aaddc9b259e31b870e6</td>\n",
              "      <td>72a30483855e2eafc67aee5dc2560482</td>\n",
              "      <td>sports_leisure</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113320</th>\n",
              "      <td>b5e6afd5a41800fdf401e0272ca74655</td>\n",
              "      <td>9c422a519119dcad7575db5af1ba540e</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113321</th>\n",
              "      <td>96d649da0cc4ff33bb408b199d4c7dcf</td>\n",
              "      <td>350688d9dc1e75ff97be326363655e01</td>\n",
              "      <td>bed_bath_table</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>109264 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                             customer_id  ... review_score\n",
              "0       3ce436f183e68e07877b285a838db11a  ...            5\n",
              "1       f6dd3ec061db4e3987629fe6b26e5cce  ...            4\n",
              "2       6489ae5e4333f3693df5ad4372dab6d3  ...            5\n",
              "3       d4eb9395c8c0431ee92fce09860c5a06  ...            4\n",
              "4       58dbd0b2d70206bf40e62cd34e84d795  ...            5\n",
              "...                                  ...  ...          ...\n",
              "113317  b51593916b4b8e0d6f66f2ae24f2673d  ...            5\n",
              "113318  84c5d4fbaf120aae381fad077416eaa0  ...            5\n",
              "113319  29309aa813182aaddc9b259e31b870e6  ...            5\n",
              "113320  b5e6afd5a41800fdf401e0272ca74655  ...            5\n",
              "113321  96d649da0cc4ff33bb408b199d4c7dcf  ...            5\n",
              "\n",
              "[109264 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "zwDr5KMf1CPf",
        "outputId": "e3b9acc3-9e80-47c0-ea34-e59f063e205d"
      },
      "source": [
        "# df_scorecount = (df.groupby(by = ['product_id'])['review_score'].count().reset_index().rename(columns={'review_score': 'total_review_score'})[['product_id', 'total_review_score']])\n",
        "# df_scorecount\n",
        "\n",
        "df_scorecount_ = (df.groupby(by = ['product_category_name_english'])['review_score'].count().reset_index().rename(columns={'review_score': 'total_review_score'})[['product_category_name_english', 'total_review_score']])\n",
        "df_scorecount_"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>product_category_name_english</th>\n",
              "      <th>total_review_score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>agro_industry_and_commerce</td>\n",
              "      <td>206</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>air_conditioning</td>\n",
              "      <td>289</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>art</td>\n",
              "      <td>197</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>arts_and_craftmanship</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>audio</td>\n",
              "      <td>363</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>stationery</td>\n",
              "      <td>2474</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>tablets_printing_image</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68</th>\n",
              "      <td>telephony</td>\n",
              "      <td>4432</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>toys</td>\n",
              "      <td>4038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>watches_gifts</td>\n",
              "      <td>5867</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>71 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   product_category_name_english  total_review_score\n",
              "0     agro_industry_and_commerce                 206\n",
              "1               air_conditioning                 289\n",
              "2                            art                 197\n",
              "3          arts_and_craftmanship                  24\n",
              "4                          audio                 363\n",
              "..                           ...                 ...\n",
              "66                    stationery                2474\n",
              "67        tablets_printing_image                  83\n",
              "68                     telephony                4432\n",
              "69                          toys                4038\n",
              "70                 watches_gifts                5867\n",
              "\n",
              "[71 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "WLuZWw-G1vxF",
        "outputId": "664abb65-36a9-4523-ae3d-1f6afe0f174f"
      },
      "source": [
        "df_total = df_scorecount.merge(df, how='left', on='product_id')\n",
        "df_total = df_total[['customer_id','product_id', 'product_category_name_english', 'review_score', 'total_review_score']]\n",
        "df_total"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>product_category_name_english</th>\n",
              "      <th>review_score</th>\n",
              "      <th>total_review_score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>86c180c33f454b35e1596a99da3dddc4</td>\n",
              "      <td>00066f42aeeb9f3007548bb9d3f33c38</td>\n",
              "      <td>perfumery</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>68f2b37558e27791155db34bcded5ac0</td>\n",
              "      <td>00088930e925c41fd95ebfe695fd2655</td>\n",
              "      <td>auto</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6cd217b674e22cf568f6a2cf6060fd07</td>\n",
              "      <td>0009406fd7479715e4bef61dd91f2462</td>\n",
              "      <td>bed_bath_table</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>82b838f513e00463174cc7cae7e76c1f</td>\n",
              "      <td>000b8f95fcb9e0096488278317764d19</td>\n",
              "      <td>housewares</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8517e7c86998bf39a540087da6f115d9</td>\n",
              "      <td>000b8f95fcb9e0096488278317764d19</td>\n",
              "      <td>housewares</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109259</th>\n",
              "      <td>839b3007f7e5aee8f8eb130c8fa51c29</td>\n",
              "      <td>fffdb2d0ec8d6a61f0a0a0db3f25b441</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109260</th>\n",
              "      <td>d14930bf3da4e0ba5a02cc8d6ac80f6e</td>\n",
              "      <td>fffdb2d0ec8d6a61f0a0a0db3f25b441</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109261</th>\n",
              "      <td>550ccac77275f9cdec4b6cd97ac118d0</td>\n",
              "      <td>fffdb2d0ec8d6a61f0a0a0db3f25b441</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109262</th>\n",
              "      <td>35e8f2cff4eeed925cfa42f6731a4425</td>\n",
              "      <td>fffdb2d0ec8d6a61f0a0a0db3f25b441</td>\n",
              "      <td>computers_accessories</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109263</th>\n",
              "      <td>e24fae1db3d4f392215beb9553f72f82</td>\n",
              "      <td>fffe9eeff12fcbd74a2f2b007dde0c58</td>\n",
              "      <td>toys</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>109264 rows × 5 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                             customer_id  ... total_review_score\n",
              "0       86c180c33f454b35e1596a99da3dddc4  ...                  1\n",
              "1       68f2b37558e27791155db34bcded5ac0  ...                  1\n",
              "2       6cd217b674e22cf568f6a2cf6060fd07  ...                  1\n",
              "3       82b838f513e00463174cc7cae7e76c1f  ...                  2\n",
              "4       8517e7c86998bf39a540087da6f115d9  ...                  2\n",
              "...                                  ...  ...                ...\n",
              "109259  839b3007f7e5aee8f8eb130c8fa51c29  ...                  5\n",
              "109260  d14930bf3da4e0ba5a02cc8d6ac80f6e  ...                  5\n",
              "109261  550ccac77275f9cdec4b6cd97ac118d0  ...                  5\n",
              "109262  35e8f2cff4eeed925cfa42f6731a4425  ...                  5\n",
              "109263  e24fae1db3d4f392215beb9553f72f82  ...                  1\n",
              "\n",
              "[109264 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NBhoJAbh2gg-",
        "outputId": "4eaf2198-ebe2-42dd-91a7-491087aeae20"
      },
      "source": [
        "pd.set_option('display.float_format', lambda x: '%.3f' % x)\n",
        "print(df_total['total_review_score'].describe())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "count   109264.000\n",
            "mean        36.477\n",
            "std         81.465\n",
            "min          1.000\n",
            "25%          2.000\n",
            "50%          7.000\n",
            "75%         27.000\n",
            "max        520.000\n",
            "Name: total_review_score, dtype: float64\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f7BI5WPR4Z8a",
        "outputId": "2561670f-af1d-401a-bb3e-cc6524532f48"
      },
      "source": [
        "df_total['total_review_score'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1     17241\n",
              "2     11174\n",
              "3      7761\n",
              "4      5964\n",
              "5      4745\n",
              "      ...  \n",
              "76       76\n",
              "74       74\n",
              "66       66\n",
              "61       61\n",
              "51       51\n",
              "Name: total_review_score, Length: 138, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z-PignSe3I7p",
        "outputId": "e9fb212f-15b3-44e7-9d32-1c861921ba15"
      },
      "source": [
        "# total review score = 100 이상으로 선정. \n",
        "# popularity_threshold = 100 \n",
        "# df_popular_score = df_total.query('total_review_score >= @popularity_threshold')\n",
        "# df_popular_score.total_review_score.value_counts()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "520    520\n",
              "487    487\n",
              "480    480\n",
              "391    391\n",
              "390    390\n",
              "375    375\n",
              "332    332\n",
              "321    321\n",
              "104    312\n",
              "144    288\n",
              "285    285\n",
              "141    282\n",
              "272    272\n",
              "263    263\n",
              "119    238\n",
              "117    234\n",
              "116    232\n",
              "228    228\n",
              "224    224\n",
              "105    210\n",
              "195    195\n",
              "194    194\n",
              "185    185\n",
              "177    177\n",
              "166    166\n",
              "164    164\n",
              "156    156\n",
              "155    155\n",
              "154    154\n",
              "153    153\n",
              "151    151\n",
              "149    149\n",
              "148    148\n",
              "139    139\n",
              "138    138\n",
              "137    137\n",
              "136    136\n",
              "135    135\n",
              "134    134\n",
              "131    131\n",
              "124    124\n",
              "120    120\n",
              "115    115\n",
              "114    114\n",
              "110    110\n",
              "108    108\n",
              "103    103\n",
              "101    101\n",
              "100    100\n",
              "Name: total_review_score, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cWK_7lue41FG",
        "outputId": "fb3dd386-c52f-4384-b3aa-986a42653a44"
      },
      "source": [
        "df_popular_score.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10456, 5)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u2tbaXlo9fKg",
        "outputId": "89105fd2-f632-40b2-97f3-633af82d037a"
      },
      "source": [
        "df_total.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(109264, 5)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "AuZFQ1LX44Xg",
        "outputId": "de58cdd3-b5d0-4286-c63e-043eb0320f15"
      },
      "source": [
        "# df_product = df_popular_score.pivot_table(index='product_id', columns='customer_id', values='review_score').fillna(0)\n",
        "# df_product\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>customer_id</th>\n",
              "      <th>00066ccbe787a588c52bd5ff404590e3</th>\n",
              "      <th>000e943451fc2788ca6ac98a682f2f49</th>\n",
              "      <th>000fd45d6fedae68fc6676036610f879</th>\n",
              "      <th>001028b78fd413e19704b3867c369d3a</th>\n",
              "      <th>0054f2f885ca69abcf4935c9506d7851</th>\n",
              "      <th>00573ea7a2ac9dff51ac3d177cd6eaea</th>\n",
              "      <th>00620f738107803e6c0f6818a7a3b7e3</th>\n",
              "      <th>006496598c918064dc19eef95e5e47f8</th>\n",
              "      <th>00652f7a6e012d58f58fefd69d1a1ea4</th>\n",
              "      <th>006a5d6b5f648f3811fd4fa94d93a67c</th>\n",
              "      <th>00701ade29704fc9aa33a8766b082cb6</th>\n",
              "      <th>00765aebd8e20a9a8aa8c28d0099a938</th>\n",
              "      <th>0078867a1043bd408c6134cf5ca1bbf5</th>\n",
              "      <th>007a444502902587d7aa72af38cbd1de</th>\n",
              "      <th>0093eadfb5536c158311672bdf418044</th>\n",
              "      <th>0098400373e087d3c231fb5d37834fde</th>\n",
              "      <th>009e30667771830117017cf8581b98a5</th>\n",
              "      <th>00a860aeb15fb205efdb0c689d8f9c6a</th>\n",
              "      <th>00acc750f0c2bda99b95c4043ff1e662</th>\n",
              "      <th>00b366712a38454d2e62c9d2509d0623</th>\n",
              "      <th>00b5072ef1192bc4d02e1d6264317bb0</th>\n",
              "      <th>00b694184c8c2f2a565e4def5a00b8ee</th>\n",
              "      <th>00ba24d5e8869fd25950fd26c098ee20</th>\n",
              "      <th>00cef6d9683eaa39aaf401e3b02bdbca</th>\n",
              "      <th>00d4c7cec24152e73f88312fdbf09ffa</th>\n",
              "      <th>00d9314fb3f147133d0dae548abab307</th>\n",
              "      <th>00da45766aa7d360508cf25434334a8d</th>\n",
              "      <th>00e7c7983371f6e0c6ce890040d431db</th>\n",
              "      <th>00f3b3a7cd0b6566435090c7fbda03a2</th>\n",
              "      <th>00fd2c64e6e3f94a81541196fc536f4f</th>\n",
              "      <th>01016b17e79a0a428384c6916b426aed</th>\n",
              "      <th>0105f165f3be4b229fcca1cba2349186</th>\n",
              "      <th>01077b7579fd4c86971c6598bd550ee5</th>\n",
              "      <th>0116b6f7b023ad7b078ead9dc8f68897</th>\n",
              "      <th>0117fc26c948641502349399aa649dc0</th>\n",
              "      <th>011a899e735ec86f00f26089cdae09cf</th>\n",
              "      <th>01206a881130146c337962e714f06d66</th>\n",
              "      <th>0120f40c1cfb22b538c7f78c8b5265dd</th>\n",
              "      <th>012413f25e1a3f143b2001198e916594</th>\n",
              "      <th>0131193f8b1b149f85f1326ac337effb</th>\n",
              "      <th>...</th>\n",
              "      <th>fefb72a9cc34f58bb01edfefee3bdea1</th>\n",
              "      <th>fefbd500a315bb3290af290fdaf5253c</th>\n",
              "      <th>fefe47950f42fddc66afdf7315a36dae</th>\n",
              "      <th>ff0da136fbd35fb34d88d49e88dbff2a</th>\n",
              "      <th>ff18d77e35600709ff43a4644f9eaec1</th>\n",
              "      <th>ff1acf503bdf96c225e4dc499dac6954</th>\n",
              "      <th>ff20ff0d4c2d7dde8622bf9875f32455</th>\n",
              "      <th>ff319a4ce17236c6a104237b7970f479</th>\n",
              "      <th>ff321454b4ea8fda58a0d3a0ab2609cb</th>\n",
              "      <th>ff33ddf6fafd5d38aaa6c0f7385e418f</th>\n",
              "      <th>ff349ea42c06633992fc3c94c3da0f58</th>\n",
              "      <th>ff44ec08cbec7536134c279fc52ae437</th>\n",
              "      <th>ff4b5d3b660b635bcbdb988ca60eafbe</th>\n",
              "      <th>ff53737545b992cfdf52fcfba37e2424</th>\n",
              "      <th>ff55a5afd93c0f7de549bd83e418f55a</th>\n",
              "      <th>ff5ca282b802097cc7182d5f4b58d199</th>\n",
              "      <th>ff6414bc057a2275b727e817428a1637</th>\n",
              "      <th>ff774d667d8f3f8fe0bdd578e8d0a85f</th>\n",
              "      <th>ff792fe1772fd36b73b4ef17a42f7e6c</th>\n",
              "      <th>ff83b1b9ffb0f2f60273867bb26f671e</th>\n",
              "      <th>ff869205a42a4de9aa4a4bc357c62507</th>\n",
              "      <th>ff886777efd58cd30781969d96dfe558</th>\n",
              "      <th>ff898eb678319bd6f600449bb0713f87</th>\n",
              "      <th>ff8b10ae20558c8201652e505e41b0fb</th>\n",
              "      <th>ff8f6d3e8686235229636f5b388e3b44</th>\n",
              "      <th>ff8fa0e333a5b7b5362e76311b4ae90a</th>\n",
              "      <th>ff9f5774bdf98c9eb203a168b58ded57</th>\n",
              "      <th>ffa219109978b03ab5d6340856861021</th>\n",
              "      <th>ffb0ffdb00e2e0b31c423577db3520eb</th>\n",
              "      <th>ffbc1b5517c488c7959e231ff9a0a787</th>\n",
              "      <th>ffbcf1eb664ce45bed8883fbcbdc2b06</th>\n",
              "      <th>ffbda9243760f2492df6e71c590e070a</th>\n",
              "      <th>ffc5e5000221495c2cbb2b099aaec969</th>\n",
              "      <th>ffcbcec4480d074ffd50398e66bff27c</th>\n",
              "      <th>ffd940dedc35e4f459eddfa41291e824</th>\n",
              "      <th>ffdaaad4323306777060ca43b3f87e7f</th>\n",
              "      <th>ffdd80d8f3655192a9d2a38d5b18732c</th>\n",
              "      <th>ffed5d4f6245fe13cd57054621eec36a</th>\n",
              "      <th>fff212062d600f2e1d53f3c5d4a25138</th>\n",
              "      <th>fffb97495f78be80e2759335275df2aa</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>06edb72f1e0c64b14c5b79353f7abea3</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>08574b074924071f4e201e151b152b4e</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0aabfb375647d9738ad0f7b4ea3653b1</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0bcc3eeca39e1064258aa1e932269894</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>154e7e31ebfa092203795c972e5804a6</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>165f86fe8b799a708a20ee4ba125c289</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19c91ef95d509ea33eda93495c4d3481</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2028bf1b01cafb2d2b1901fca4083222</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2b4609f8948be18874494203496bc318</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35afc973633aaeb6b877ff57b2793310</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>368c6c730842d78016ad823897a372db</th>\n",
              "      <td>1.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36f60d45225e60c7da4558b070ce4b60</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>2.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>2.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389d119b48cf3043d311335e499d9c6b</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3dd2a17168ec895c781a9191c1e95ad7</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3fbc0ef745950c7932d5f2a446189725</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>1.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422879e10f46682990de24d770e7f83d</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42a2c92a0979a949ca4ea89ec5c7b934</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437c05a395e9e47f9762e677a7068ce7</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>461f43be3bdf8844e65b62d9ac2c7a5a</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4c2394abfbac7ff59ec7a420918562fa</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4fe644d766c7566dbc46fb851363cb3b</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52c80cedd4e90108bf4fa6a206ef6b03</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53759a2ecddad2bb87a079a1f1519f73</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.500</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53b36df67ebb7c41585e8d54d6772e08</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54d9ac713e253fa1fae9c8003b011c2a</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>595fac2a385ac33a80bd5114aec74eb8</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>601a360bd2a916ecef0e88de72a6531a</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>656e0eca68dcecf6a31b8ececfabe3e8</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6cdd53843498f92890544667809f1595</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6f3b5b605d91b7439c5e3f5a8dffeea7</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78efe838c04bbc568be034082200ac20</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7a10781637204d8d10485c71a6108a2e</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7c1bd920dbdf22470b68bde975dd3ccf</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7ce94ab189134e2d3c05f496d635419c</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84f456958365164420cfc80fbe4c7fab</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>880be32f4db1d9f6e2bec38fb6ac23ab</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89321f94e35fc6d7903d36f74e351d40</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8c591ab0ca519558779df02023177f44</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99a4788cb24856965c36a24e339b6058</th>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9ecadb84c81da840dbf3564378b586e9</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>a62e25e09e05e6faf31d90c6ec1aa3d1</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>a92930c327948861c015c919a0bcb4a8</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>aca2eb7d00ea1a7b8ebd4e68314663af</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>b0961721fd839e9982420e807758a2a6</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>b532349fe46b38fbc7bb3914c1bdae07</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bb50f2e236e5eea0100680137654686c</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>c4baedd846ed09b85f78a781b522f126</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>c6dd917a0be2a704582055949915ab32</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>d017a2151d543a9885604dc62a3d9dcc</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>d1c427060a0f73f6b889a5c7c61f2ac4</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>d285360f29ac7fd97640bf0baef03de0</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>d5991653e037ccb7af6ed7d94246b249</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>e0cf79767c5b016251fe139915c59a26</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>e0d64dcfaa3b6db5c54ca298ae101d05</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>e53e557d5a159f5aa2c5e995dfdf244b</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>2.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ec2d43cc59763ec91694573b31f1c29a</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>f1c7f353075ce59d8a6f3cf58f419c9c</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>57 rows × 9115 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "customer_id                       00066ccbe787a588c52bd5ff404590e3  ...  fffb97495f78be80e2759335275df2aa\n",
              "product_id                                                          ...                                  \n",
              "06edb72f1e0c64b14c5b79353f7abea3                             0.000  ...                             0.000\n",
              "08574b074924071f4e201e151b152b4e                             0.000  ...                             0.000\n",
              "0aabfb375647d9738ad0f7b4ea3653b1                             0.000  ...                             0.000\n",
              "0bcc3eeca39e1064258aa1e932269894                             0.000  ...                             0.000\n",
              "154e7e31ebfa092203795c972e5804a6                             0.000  ...                             0.000\n",
              "165f86fe8b799a708a20ee4ba125c289                             0.000  ...                             0.000\n",
              "19c91ef95d509ea33eda93495c4d3481                             0.000  ...                             0.000\n",
              "2028bf1b01cafb2d2b1901fca4083222                             0.000  ...                             0.000\n",
              "2b4609f8948be18874494203496bc318                             0.000  ...                             0.000\n",
              "35afc973633aaeb6b877ff57b2793310                             0.000  ...                             0.000\n",
              "368c6c730842d78016ad823897a372db                             1.000  ...                             0.000\n",
              "36f60d45225e60c7da4558b070ce4b60                             0.000  ...                             0.000\n",
              "389d119b48cf3043d311335e499d9c6b                             0.000  ...                             0.000\n",
              "3dd2a17168ec895c781a9191c1e95ad7                             0.000  ...                             0.000\n",
              "3fbc0ef745950c7932d5f2a446189725                             0.000  ...                             0.000\n",
              "422879e10f46682990de24d770e7f83d                             0.000  ...                             0.000\n",
              "42a2c92a0979a949ca4ea89ec5c7b934                             0.000  ...                             0.000\n",
              "437c05a395e9e47f9762e677a7068ce7                             0.000  ...                             0.000\n",
              "461f43be3bdf8844e65b62d9ac2c7a5a                             0.000  ...                             0.000\n",
              "4c2394abfbac7ff59ec7a420918562fa                             0.000  ...                             0.000\n",
              "4fe644d766c7566dbc46fb851363cb3b                             0.000  ...                             0.000\n",
              "52c80cedd4e90108bf4fa6a206ef6b03                             0.000  ...                             0.000\n",
              "53759a2ecddad2bb87a079a1f1519f73                             0.000  ...                             0.000\n",
              "53b36df67ebb7c41585e8d54d6772e08                             0.000  ...                             0.000\n",
              "54d9ac713e253fa1fae9c8003b011c2a                             0.000  ...                             0.000\n",
              "595fac2a385ac33a80bd5114aec74eb8                             0.000  ...                             0.000\n",
              "601a360bd2a916ecef0e88de72a6531a                             0.000  ...                             0.000\n",
              "656e0eca68dcecf6a31b8ececfabe3e8                             0.000  ...                             0.000\n",
              "6cdd53843498f92890544667809f1595                             0.000  ...                             0.000\n",
              "6f3b5b605d91b7439c5e3f5a8dffeea7                             0.000  ...                             0.000\n",
              "78efe838c04bbc568be034082200ac20                             0.000  ...                             0.000\n",
              "7a10781637204d8d10485c71a6108a2e                             0.000  ...                             0.000\n",
              "7c1bd920dbdf22470b68bde975dd3ccf                             0.000  ...                             0.000\n",
              "7ce94ab189134e2d3c05f496d635419c                             0.000  ...                             0.000\n",
              "84f456958365164420cfc80fbe4c7fab                             0.000  ...                             0.000\n",
              "880be32f4db1d9f6e2bec38fb6ac23ab                             0.000  ...                             0.000\n",
              "89321f94e35fc6d7903d36f74e351d40                             0.000  ...                             0.000\n",
              "8c591ab0ca519558779df02023177f44                             0.000  ...                             0.000\n",
              "99a4788cb24856965c36a24e339b6058                             0.000  ...                             0.000\n",
              "9ecadb84c81da840dbf3564378b586e9                             0.000  ...                             0.000\n",
              "a62e25e09e05e6faf31d90c6ec1aa3d1                             0.000  ...                             0.000\n",
              "a92930c327948861c015c919a0bcb4a8                             0.000  ...                             0.000\n",
              "aca2eb7d00ea1a7b8ebd4e68314663af                             0.000  ...                             0.000\n",
              "b0961721fd839e9982420e807758a2a6                             0.000  ...                             0.000\n",
              "b532349fe46b38fbc7bb3914c1bdae07                             0.000  ...                             0.000\n",
              "bb50f2e236e5eea0100680137654686c                             0.000  ...                             0.000\n",
              "c4baedd846ed09b85f78a781b522f126                             0.000  ...                             0.000\n",
              "c6dd917a0be2a704582055949915ab32                             0.000  ...                             0.000\n",
              "d017a2151d543a9885604dc62a3d9dcc                             0.000  ...                             0.000\n",
              "d1c427060a0f73f6b889a5c7c61f2ac4                             0.000  ...                             0.000\n",
              "d285360f29ac7fd97640bf0baef03de0                             0.000  ...                             0.000\n",
              "d5991653e037ccb7af6ed7d94246b249                             0.000  ...                             0.000\n",
              "e0cf79767c5b016251fe139915c59a26                             0.000  ...                             0.000\n",
              "e0d64dcfaa3b6db5c54ca298ae101d05                             0.000  ...                             0.000\n",
              "e53e557d5a159f5aa2c5e995dfdf244b                             0.000  ...                             0.000\n",
              "ec2d43cc59763ec91694573b31f1c29a                             0.000  ...                             5.000\n",
              "f1c7f353075ce59d8a6f3cf58f419c9c                             0.000  ...                             0.000\n",
              "\n",
              "[57 rows x 9115 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "id": "uIED6UgG6TLw",
        "outputId": "d6518802-6f41-4e90-bf0b-91448a00f9f3"
      },
      "source": [
        "# df_category = df_popular_score.pivot_table(index='product_category_name_english', columns='customer_id', values='review_score').fillna(0)\n",
        "# df_category\n",
        "\n",
        "# df_total 사용 \n",
        "df_category = df_total.pivot_table(index='product_category_name_english', columns='customer_id', values='review_score').fillna(0)\n",
        "df_category"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>customer_id</th>\n",
              "      <th>00012a2ce6f8dcda20d059ce98491703</th>\n",
              "      <th>000161a058600d5901f007fab4c27140</th>\n",
              "      <th>0001fd6190edaaf884bcaf3d49edf079</th>\n",
              "      <th>0002414f95344307404f0ace7a26f1d5</th>\n",
              "      <th>000379cdec625522490c315e70c7a9fb</th>\n",
              "      <th>0004164d20a9e969af783496f3408652</th>\n",
              "      <th>000419c5494106c306a97b5635748086</th>\n",
              "      <th>00046a560d407e99b969756e0b10f282</th>\n",
              "      <th>00050bf6e01e69d5c0fd612f1bcfb69c</th>\n",
              "      <th>000598caf2ef4117407665ac33275130</th>\n",
              "      <th>0005aefbb696d34b3424dccd0a0e9fd0</th>\n",
              "      <th>00062b33cb9f6fe976afdcff967ea74d</th>\n",
              "      <th>00066ccbe787a588c52bd5ff404590e3</th>\n",
              "      <th>00072d033fe2e59061ae5c3aff1a2be5</th>\n",
              "      <th>0009a69b72033b2d0ec8c69fc70ef768</th>\n",
              "      <th>000bf8121c3412d3057d32371c5d3395</th>\n",
              "      <th>000e943451fc2788ca6ac98a682f2f49</th>\n",
              "      <th>000f17e290c26b28549908a04cfe36c1</th>\n",
              "      <th>000fd45d6fedae68fc6676036610f879</th>\n",
              "      <th>0010068a73b7c56da5758c3f9e5c7375</th>\n",
              "      <th>001028b78fd413e19704b3867c369d3a</th>\n",
              "      <th>00104a47c29da701ce41ee52077587d9</th>\n",
              "      <th>001051abfcfdbed9f87b4266213a5df1</th>\n",
              "      <th>00114026c1b7b52ab1773f317ef4880b</th>\n",
              "      <th>001226b2341ef620415ce7bbafcfac28</th>\n",
              "      <th>0012a5c13793cf51e253f096a7e740dd</th>\n",
              "      <th>0013280441d86a4f7a8006efdaf1b0fe</th>\n",
              "      <th>0013cd8e350a7cc76873441e431dd5ee</th>\n",
              "      <th>001450ebb4a77efb3d68be5f7887cb1e</th>\n",
              "      <th>00146ad30454993879adaa91c518f68c</th>\n",
              "      <th>00155f0530cc7b2bf73cc3f81cb01c52</th>\n",
              "      <th>0015bc9fd2d5395446143e8b215d7c75</th>\n",
              "      <th>0015f7887e2fde13ddaa7b8e385af919</th>\n",
              "      <th>0017a0b4c1f1bdb9c395fa0ac517109c</th>\n",
              "      <th>0018c09f333634ca9c80d9ff46e43e9c</th>\n",
              "      <th>0018f7fde63ca77254dbc47f4ea358b2</th>\n",
              "      <th>0019c9aaad15b043c48f0a1180f22ce8</th>\n",
              "      <th>001a57041f56400917a187dd74e6cbc1</th>\n",
              "      <th>001b4e9b73aa98a6276b241bfd496822</th>\n",
              "      <th>001c7f05398c45b42eee0d5a77783bca</th>\n",
              "      <th>...</th>\n",
              "      <th>ffe1eab23bff108bf37c973b05d4e9ba</th>\n",
              "      <th>ffe509f377a33554f5a677dcd83e669e</th>\n",
              "      <th>ffe51ba924ffabbb6e1ec2c92e582851</th>\n",
              "      <th>ffe6224c02307bc5fd2e5c7566bd674a</th>\n",
              "      <th>ffe642291d0c94528389d64c07ec8341</th>\n",
              "      <th>ffe6d825d8a60d5cca942bcc57e9d8e6</th>\n",
              "      <th>ffe74a03e68b1c23d2bd6a1ecdc2f3d7</th>\n",
              "      <th>ffe82abbde8061e75c4c0b72f3b2accf</th>\n",
              "      <th>ffeaa6d37b3691d54a01171f6562f44f</th>\n",
              "      <th>ffeac04ef924e20238b3ad2f9cecfbfa</th>\n",
              "      <th>ffed5d4f6245fe13cd57054621eec36a</th>\n",
              "      <th>ffed827348cd4b083956ce2b634b763b</th>\n",
              "      <th>ffee99041e111172de2006fe9e90202a</th>\n",
              "      <th>ffef8c44b23871ffd6a1df761bd61783</th>\n",
              "      <th>fff0f9fbcdf9cfe4d9328bd3a7af71d7</th>\n",
              "      <th>fff168ca1f8a1d2e8e2108b231a68a8c</th>\n",
              "      <th>fff1da51c6d3b52986925d7bcd8a6d30</th>\n",
              "      <th>fff200ad56bd3e1caa576cce9d282672</th>\n",
              "      <th>fff212062d600f2e1d53f3c5d4a25138</th>\n",
              "      <th>fff25ab9d3c9ba6ad8119576f285a3d9</th>\n",
              "      <th>fff39f01a81d96b066b1893ad395a98b</th>\n",
              "      <th>fff3a5c6d542d52b05f7e4518adf996e</th>\n",
              "      <th>fff415b4c72e09483a25c15108c65d31</th>\n",
              "      <th>fff4f0c85a4d710abe06599e1ed08a42</th>\n",
              "      <th>fff4fdd0de70a51d4e0f57a4c1c6bfae</th>\n",
              "      <th>fff5169e583fd07fac9fec88962f189d</th>\n",
              "      <th>fff55ba8dffa552b6fdfd86c2e806459</th>\n",
              "      <th>fff5dd22d522cf28a902185817642a2e</th>\n",
              "      <th>fff675a0d5924b9162b4a1bf410466cd</th>\n",
              "      <th>fff7466a253c0e59499ea943462c10f9</th>\n",
              "      <th>fff89c8ed4fcf69a823c1d149e429a0b</th>\n",
              "      <th>fff906ecb75de5809be384e0f8d65e45</th>\n",
              "      <th>fff93c1da78dafaaa304ff032abc6205</th>\n",
              "      <th>fffa0238b217e18a8adeeda0669923a3</th>\n",
              "      <th>fffb97495f78be80e2759335275df2aa</th>\n",
              "      <th>fffcb937e9dd47a13f05ecb8290f4d3e</th>\n",
              "      <th>fffecc9f79fd8c764f843e9951b11341</th>\n",
              "      <th>fffeda5b6d849fbd39689bb92087f431</th>\n",
              "      <th>ffff42319e9b2d713724ae527742af25</th>\n",
              "      <th>ffffa3172527f765de70084a7e53aae8</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_category_name_english</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>agro_industry_and_commerce</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>air_conditioning</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>art</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>arts_and_craftmanship</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>audio</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>stationery</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>tablets_printing_image</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>telephony</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>2.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>toys</th>\n",
              "      <td>1.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>4.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>watches_gifts</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>71 rows × 95110 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "customer_id                    00012a2ce6f8dcda20d059ce98491703  ...  ffffa3172527f765de70084a7e53aae8\n",
              "product_category_name_english                                    ...                                  \n",
              "agro_industry_and_commerce                                0.000  ...                             0.000\n",
              "air_conditioning                                          0.000  ...                             0.000\n",
              "art                                                       0.000  ...                             0.000\n",
              "arts_and_craftmanship                                     0.000  ...                             0.000\n",
              "audio                                                     0.000  ...                             0.000\n",
              "...                                                         ...  ...                               ...\n",
              "stationery                                                0.000  ...                             0.000\n",
              "tablets_printing_image                                    0.000  ...                             0.000\n",
              "telephony                                                 0.000  ...                             0.000\n",
              "toys                                                      1.000  ...                             0.000\n",
              "watches_gifts                                             0.000  ...                             0.000\n",
              "\n",
              "[71 rows x 95110 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EdwY2QdU5V40",
        "outputId": "890d67f7-549a-4ddb-97b5-133ad0a1a42d"
      },
      "source": [
        "#product\n",
        "from scipy.sparse import csr_matrix\n",
        "\n",
        "# df_product_matrix = csr_matrix(df_product.values)\n",
        "\n",
        "df_category_matrix = csr_matrix(df_category.values)\n",
        "\n",
        "from sklearn.neighbors import NearestNeighbors\n",
        "\n",
        "\n",
        "model_knn = NearestNeighbors(metric = 'cosine', algorithm = 'brute')\n",
        "# model_knn.fit(df_product_matrix)\n",
        "model_knn.fit(df_category_matrix)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NearestNeighbors(algorithm='brute', leaf_size=30, metric='cosine',\n",
              "                 metric_params=None, n_jobs=None, n_neighbors=5, p=2,\n",
              "                 radius=1.0)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sGBpVR9d6wcS",
        "outputId": "bac50f25-09b4-4e5f-b5a0-0c5959537d96"
      },
      "source": [
        "#category\n",
        "from scipy.sparse import csr_matrix\n",
        "\n",
        "# df_product_matrix = csr_matrix(df_product.values)\n",
        "\n",
        "df_category_matrix = csr_matrix(df_category.values)\n",
        "\n",
        "from sklearn.neighbors import NearestNeighbors\n",
        "\n",
        "\n",
        "model_knn = NearestNeighbors(metric = 'cosine', algorithm = 'brute')\n",
        "# model_knn.fit(df_product_matrix)\n",
        "model_knn.fit(df_category_matrix)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NearestNeighbors(algorithm='brute', leaf_size=30, metric='cosine',\n",
              "                 metric_params=None, n_jobs=None, n_neighbors=5, p=2,\n",
              "                 radius=1.0)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O0hzBFyh5lrh",
        "outputId": "5a8df0ea-5f0a-43ed-a0f4-b16e69720d07"
      },
      "source": [
        "#product\n",
        "import numpy as np \n",
        "query_index = np.random.choice(df_product.shape[0])\n",
        "print(query_index)\n",
        "distances, indices = model_knn.kneighbors(df_product.iloc[query_index,:].values.reshape(1, -1), n_neighbors = 6)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "5\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WjlFIpz6655i",
        "outputId": "af550151-3496-4aa8-b8db-96dcd16706a4"
      },
      "source": [
        "#category\n",
        "import numpy as np \n",
        "query_index = np.random.choice(df_category.shape[0])\n",
        "print(query_index)\n",
        "distances, indices = model_knn.kneighbors(df_category.iloc[query_index,:].values.reshape(1, -1), n_neighbors = 6)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "33\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oNuZwe99P0YY",
        "outputId": "b4132018-ffab-4042-8096-d9aa22be26f5"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Hh1vZ2Um5l9P",
        "outputId": "881cdd1f-4592-4f7e-fdf7-c203817f659b"
      },
      "source": [
        "#product\n",
        "for i in range(0, len(distances.flatten())):\n",
        "    if i == 0:\n",
        "        print('Recommendations for {0}:\\n'.format(df_product.index[query_index]))\n",
        "    else:\n",
        "        print('{0}: {1}, with distance of {2}:'.format(i, df_product.index[indices.flatten()[i]], distances.flatten()[i]))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Recommendations for 7ce94ab189134e2d3c05f496d635419c:\n",
            "\n",
            "1: d1c427060a0f73f6b889a5c7c61f2ac4, with distance of 1.0:\n",
            "2: d5991653e037ccb7af6ed7d94246b249, with distance of 1.0:\n",
            "3: d017a2151d543a9885604dc62a3d9dcc, with distance of 1.0:\n",
            "4: c4baedd846ed09b85f78a781b522f126, with distance of 1.0:\n",
            "5: b532349fe46b38fbc7bb3914c1bdae07, with distance of 1.0:\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "boZu456I7Ba6",
        "outputId": "8b7f35de-ac49-4e33-faaf-42746fb2b371"
      },
      "source": [
        "#category\n",
        "for i in range(0, len(distances.flatten())):\n",
        "    if i == 0:\n",
        "        print('Recommendations for {0}:\\n'.format(df_category.index[query_index]))\n",
        "    else:\n",
        "        print('{0}: {1}, with distance of {2}:'.format(i, df_category.index[indices.flatten()[i]], distances.flatten()[i]))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Recommendations for fashion_underwear_beach:\n",
            "\n",
            "1: housewares, with distance of 1.0:\n",
            "2: kitchen_dining_laundry_garden_furniture, with distance of 1.0:\n",
            "3: home_construction, with distance of 1.0:\n",
            "4: home_comfort_2, with distance of 1.0:\n",
            "5: home_appliances, with distance of 1.0:\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "turbfbXh3IWe"
      },
      "source": [
        "# 이 문서도 활용해보기, 추천 리스트 보여주는데 코드가 조금 다름. \n",
        "# https://wikidocs.net/24603\n",
        "\n",
        "# cosine 유사도 해석하는 것 다시 알아보기. \n",
        "## 1. 유저 유사도로 봐도 동일한지 알아보기.\n",
        "## 2. 데이터 셋 필요시 상품 명 명확하게 나온 것으로 다시 골라서 돌려보기. \n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a9fXtRXI6c7C"
      },
      "source": [
        "### 2. 기본 모델"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-NlQQzQswGJx"
      },
      "source": [
        "\n",
        "영화 데이터 튜토리얼\n",
        "- 1. 검색 단계 : https://www.tensorflow.org/recommenders/examples/basic_retrieval \n",
        "- 2. 순위 단계 : https://www.tensorflow.org/recommenders/examples/basic_ranking \n",
        "- 3. 컨텍스트 정보 사용(시간 데이터 추가) : https://www.tensorflow.org/recommenders/examples/movielens_side_information"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9c6YWo4INq0a"
      },
      "source": [
        "#### 데이터 로드"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EZsCHD0U2fni"
      },
      "source": [
        "# tensorflow 추천 모델 \n",
        "# https://github.com/tensorflow/recommenders\n",
        "# https://github.com/ogerhsou/Youtube-Recommendation-Tensorflow/blob/master/youtube_recommendation.py"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3tT7U__5g9aw",
        "outputId": "9a74854d-e133-4fc3-8776-5442d271645c"
      },
      "source": [
        "# tensorflow recommenders \n",
        "# https://www.tensorflow.org/recommenders/examples/quickstart\n",
        "!pip install tensorflow-recommenders"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting tensorflow-recommenders\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/60/78/1e16788f8360aaf23b34ef8e0b8803ff3cc5f99c3513309f2486fa798c27/tensorflow_recommenders-0.3.2-py3-none-any.whl (43kB)\n",
            "\r\u001b[K     |███████▌                        | 10kB 20.7MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 20kB 17.1MB/s eta 0:00:01\r\u001b[K     |██████████████████████▌         | 30kB 13.7MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 40kB 12.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 51kB 4.6MB/s \n",
            "\u001b[?25hRequirement already satisfied: absl-py>=0.1.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow-recommenders) (0.10.0)\n",
            "Requirement already satisfied: tensorflow>=2.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow-recommenders) (2.4.0)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from absl-py>=0.1.6->tensorflow-recommenders) (1.15.0)\n",
            "Requirement already satisfied: flatbuffers~=1.12.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (1.12)\n",
            "Requirement already satisfied: h5py~=2.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (2.10.0)\n",
            "Requirement already satisfied: wrapt~=1.12.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (1.12.1)\n",
            "Requirement already satisfied: termcolor~=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (1.1.0)\n",
            "Requirement already satisfied: wheel~=0.35 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (0.36.2)\n",
            "Requirement already satisfied: typing-extensions~=3.7.4 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (3.7.4.3)\n",
            "Requirement already satisfied: grpcio~=1.32.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (1.32.0)\n",
            "Requirement already satisfied: tensorboard~=2.4 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (2.4.0)\n",
            "Requirement already satisfied: keras-preprocessing~=1.1.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (1.1.2)\n",
            "Requirement already satisfied: tensorflow-estimator<2.5.0,>=2.4.0rc0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (2.4.0)\n",
            "Requirement already satisfied: google-pasta~=0.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (0.2.0)\n",
            "Requirement already satisfied: astunparse~=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (1.6.3)\n",
            "Requirement already satisfied: gast==0.3.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (0.3.3)\n",
            "Requirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (3.12.4)\n",
            "Requirement already satisfied: numpy~=1.19.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (1.19.4)\n",
            "Requirement already satisfied: opt-einsum~=3.3.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.3->tensorflow-recommenders) (3.3.0)\n",
            "Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (1.0.1)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (3.3.3)\n",
            "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (2.23.0)\n",
            "Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (0.4.2)\n",
            "Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (1.7.0)\n",
            "Requirement already satisfied: setuptools>=41.0.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (51.1.1)\n",
            "Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (1.17.2)\n",
            "Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from markdown>=2.6.8->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (3.3.0)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (3.0.4)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (2.10)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (1.24.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (2020.12.5)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (1.3.0)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (4.6)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (0.2.8)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (4.2.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (3.4.0)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (3.1.0)\n",
            "Requirement already satisfied: pyasn1>=0.1.3 in /usr/local/lib/python3.6/dist-packages (from rsa<5,>=3.1.4; python_version >= \"3\"->google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=2.3->tensorflow-recommenders) (0.4.8)\n",
            "Installing collected packages: tensorflow-recommenders\n",
            "Successfully installed tensorflow-recommenders-0.3.2\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Hp2pivuziT3E"
      },
      "source": [
        "from typing import Dict, Text\n",
        "\n",
        "import tensorflow as tf\n",
        "import tensorflow_datasets as tfds\n",
        "import tensorflow_recommenders as tfrs\n",
        "\n",
        "\n",
        "# Ratings data.\n",
        "ratings = tfds.load('movielens/100k-ratings', split=\"train\")\n",
        "# Features of all the available movies.\n",
        "movies = tfds.load('movielens/100k-movies', split=\"train\")\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VIQlPxd50_jJ",
        "outputId": "07ba1151-ee35-406c-edb5-57fa1e6b3cf0"
      },
      "source": [
        "import pprint\n",
        "for x in ratings.take(1).as_numpy_iterator():\n",
        "  pprint.pprint(x)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'bucketized_user_age': 45.0,\n",
            " 'movie_genres': array([7]),\n",
            " 'movie_id': b'357',\n",
            " 'movie_title': b\"One Flew Over the Cuckoo's Nest (1975)\",\n",
            " 'raw_user_age': 46.0,\n",
            " 'timestamp': 879024327,\n",
            " 'user_gender': True,\n",
            " 'user_id': b'138',\n",
            " 'user_occupation_label': 4,\n",
            " 'user_occupation_text': b'doctor',\n",
            " 'user_rating': 4.0,\n",
            " 'user_zip_code': b'53211'}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vQ330S5P1EwF",
        "outputId": "aa3b88d0-e1b0-4c66-8f08-acbac4e9b42d"
      },
      "source": [
        "for x in movies.take(1).as_numpy_iterator():\n",
        "  pprint.pprint(x)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'movie_genres': array([4]),\n",
            " 'movie_id': b'1681',\n",
            " 'movie_title': b'You So Crazy (1994)'}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jD_SyHTK1VVi"
      },
      "source": [
        "ratings = ratings.map(lambda x: {\n",
        "    \"movie_id\": x[\"movie_id\"],\n",
        "    \"user_id\": x[\"user_id\"],\n",
        "})\n",
        "movies = movies.map(lambda x: {\n",
        "    \"movie_id\": x[\"movie_id\"],\n",
        "    \"movie_title\": x[\"movie_title\"],\n",
        "})"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5Tey8AzINZ0v",
        "outputId": "5647a46d-4150-4035-a471-9f5fc204c544"
      },
      "source": [
        "ratings"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<MapDataset shapes: {movie_id: (), user_id: ()}, types: {movie_id: tf.string, user_id: tf.string}>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 178
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ny0EVc1K1c5p"
      },
      "source": [
        "# 기본 모델 : 시간을 고려하지 않고, 학습/테스트 데이터로 분할. \n",
        "tf.random.set_seed(42)\n",
        "shuffled = ratings.shuffle(100_000, seed=42, reshuffle_each_iteration=False)\n",
        "\n",
        "train = shuffled.take(80_000)\n",
        "test = shuffled.skip(80_000).take(20_000)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "30PZeSmCHvT9"
      },
      "source": [
        "# 범주형 데이터를 연속 범위의 정수로 맵핑 -> 모델 layer에 넣을 수 있는 데이터로 변환하기 위함. \n",
        "import numpy as np\n",
        "movie_ids = movies.batch(1_000).map(lambda x: x[\"movie_id\"])\n",
        "user_ids = ratings.batch(1_000_000).map(lambda x: x[\"user_id\"])\n",
        "\n",
        "unique_movie_ids = np.unique(np.concatenate(list(movie_ids)))\n",
        "unique_user_ids = np.unique(np.concatenate(list(user_ids)))\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7veVAQUhIX3J",
        "outputId": "dc7346f6-4460-4991-9e9d-44374ec0939d"
      },
      "source": [
        "type(movies)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tensorflow.python.data.ops.dataset_ops.MapDataset"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 157
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "39ph8jXvHwpF",
        "outputId": "c3330f93-0842-448c-9726-70cc4cd9b356"
      },
      "source": [
        "unique_user_ids.dtype\n",
        "unique_movie_ids.dtype"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('O')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 151
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XiPULwiy1oDh"
      },
      "source": [
        "\n",
        "# We convert bytes to strings since bytes are not serializable\n",
        "unique_movie_id_strings = [id.decode(\"utf-8\") for id in unique_movie_ids]\n",
        "# unique_user_id_strings = [id.decode(\"utf-8\") for id in unique_user_ids]\n",
        "\n",
        "# unique_movie_id_strings[:10]\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "osEddkeVniFy"
      },
      "source": [
        "# 입력, 후보 데이터 차원 결정. \n",
        "embedding_dimension = 32"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-FU26cDa2vto"
      },
      "source": [
        "# 입력 기능 정의 - user_id 를 유일한 입력 특성으로 지정. \n",
        "\n",
        "class UserModel(tf.keras.Model):\n",
        "\n",
        "  def __init__(self, embedding_dimension):\n",
        "    super(UserModel, self).__init__()\n",
        "    # The model itself is a single embedding layer.\n",
        "    # However, we could expand this to an arbitrarily complicated Keras model, as long\n",
        "    # as the output is an vector `embedding_dimension` wide.\n",
        "    user_features = [tf.feature_column.embedding_column(\n",
        "        tf.feature_column.categorical_column_with_vocabulary_list(\n",
        "            \"user_id\", unique_user_id_strings,\n",
        "        ),\n",
        "        embedding_dimension,\n",
        "    )]\n",
        "    self.embedding_layer = tf.keras.layers.DenseFeatures(user_features, name=\"user_embedding\")\n",
        "\n",
        "  def call(self, inputs):\n",
        "    return self.embedding_layer(inputs)\n",
        "\n",
        "# We initialize these models and later pass them to the full model.\n",
        "user_model = UserModel(embedding_dimension)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-8aKUIgu2vw6"
      },
      "source": [
        "# 후보 타워 정의 \n",
        "class MovieModel(tf.keras.Model):\n",
        "\n",
        "  def __init__(self, embedding_dimension):\n",
        "    super(MovieModel, self).__init__()\n",
        "    movie_features = [tf.feature_column.embedding_column(\n",
        "        tf.feature_column.categorical_column_with_vocabulary_list(\n",
        "            \"movie_id\", unique_movie_id_strings,\n",
        "        ),\n",
        "        embedding_dimension,\n",
        "    )]\n",
        "    self.embedding_layer = tf.keras.layers.DenseFeatures(movie_features, name=\"movie_embedding\")\n",
        "  \n",
        "  def call(self, inputs):\n",
        "    return self.embedding_layer(inputs)\n",
        "\n",
        "movie_model = MovieModel(embedding_dimension)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HqxWY0uE2vz6",
        "outputId": "886c5dbf-ffe5-4872-8d66-1c77abab8a02"
      },
      "source": [
        "# 기본 검증 지표 : 훈련 데이터의 양쌍(user, movie) 의 선호도 점수를 다른 모든 후보 데이터 점수와 비교. \n",
        "# 다른 모든 후보 데이터보다 훈련데이터 점수가 높으면 모델 정확도가 높다고 판단. \n",
        "metrics = tfrs.metrics.FactorizedTopK(\n",
        "  candidates=movies.batch(128).map(lambda x: {\"movie_id\": x[\"movie_id\"]}).map(movie_model)\n",
        ")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:4: UserWarning: Creating resources inside a function passed to Dataset.map() is not supported. Create each resource outside the function, and capture it inside the function to use it.\n",
            "  after removing the cwd from sys.path.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BxCu_58G3tAh"
      },
      "source": [
        "# 손실\n",
        "import tensorflow_recommenders.tasks\n",
        "\n",
        "task = tfrs.tasks.Retrieval(\n",
        "  metrics=metrics\n",
        ")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IOtZM5g43tDi"
      },
      "source": [
        "# 전체 모델\n",
        "#이제 모든 것을 모델로 통합 할 수 있습니다. \n",
        "#TFRS는 기본 모델 클래스 tfrs.models.Model 을 노출하여 빌딩 모델을 간소화합니다. 우리가해야 할 일은 __init__ 메서드에 구성 요소를 설정하고 compute_loss 메서드를 구현하여 원시 기능을 compute_loss 손실 값을 반환하는 것입니다.\n",
        "#그런 다음 기본 모델은 모델에 맞는 적절한 학습 루프를 생성합니다.\n",
        "\n",
        "class MovielensModel(tfrs.models.Model):\n",
        "\n",
        "  def __init__(self, user_model, movie_model):\n",
        "    super().__init__()\n",
        "    self.movie_model: tf.keras.Model = movie_model\n",
        "    self.user_model: tf.keras.Model = user_model\n",
        "    self.task: tf.keras.layers.Layer = task\n",
        "\n",
        "  def compute_loss(self, features: Dict[Text, tf.Tensor], training=False) -> tf.Tensor:\n",
        "    # We pick out the user features and pass them into the user model.\n",
        "    user_embeddings = self.user_model({\"user_id\": features[\"user_id\"]})\n",
        "    # And pick out the movie features and pass them into the movie model,\n",
        "    # getting embeddings back.\n",
        "    positive_movie_embeddings = self.movie_model({\"movie_id\": features[\"movie_id\"]})\n",
        "\n",
        "    # The task computes the loss and the metrics.\n",
        "    return self.task(user_embeddings, positive_movie_embeddings)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bjVMJplz3tH6"
      },
      "source": [
        "# 모델 인스턴스화\n",
        "model = MovielensModel(user_model, movie_model)\n",
        "model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.1))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XmWsq9v35GAa"
      },
      "source": [
        "# 훈련, 테스트 데이터 섞음\n",
        "cached_train = train.shuffle(100_000).batch(8192).cache()\n",
        "cached_test = test.batch(4096).cache()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AxFdkZXq5GPd",
        "outputId": "dad02c2e-1991-43cb-db20-d69d9c4adb56"
      },
      "source": [
        "# 모델 학습\n",
        "model.fit(cached_train, epochs=3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/3\n",
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "10/10 [==============================] - 12s 942ms/step - factorized_top_k/top_1_categorical_accuracy: 0.0000e+00 - factorized_top_k/top_5_categorical_accuracy: 7.3750e-04 - factorized_top_k/top_10_categorical_accuracy: 0.0024 - factorized_top_k/top_50_categorical_accuracy: 0.0204 - factorized_top_k/top_100_categorical_accuracy: 0.0512 - loss: 70373.8082 - regularization_loss: 0.0000e+00 - total_loss: 70373.8082\n",
            "Epoch 2/3\n",
            "10/10 [==============================] - 9s 904ms/step - factorized_top_k/top_1_categorical_accuracy: 3.5000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0108 - factorized_top_k/top_10_categorical_accuracy: 0.0245 - factorized_top_k/top_50_categorical_accuracy: 0.1275 - factorized_top_k/top_100_categorical_accuracy: 0.2329 - loss: 66580.8132 - regularization_loss: 0.0000e+00 - total_loss: 66580.8132\n",
            "Epoch 3/3\n",
            "10/10 [==============================] - 9s 911ms/step - factorized_top_k/top_1_categorical_accuracy: 0.0015 - factorized_top_k/top_5_categorical_accuracy: 0.0207 - factorized_top_k/top_10_categorical_accuracy: 0.0432 - factorized_top_k/top_50_categorical_accuracy: 0.1838 - factorized_top_k/top_100_categorical_accuracy: 0.3103 - loss: 64813.3232 - regularization_loss: 0.0000e+00 - total_loss: 64813.3232\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow.python.keras.callbacks.History at 0x7fb989c9ac50>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V6spXdfP8eKN",
        "outputId": "27e73747-d8de-4087-9093-4978e335b114"
      },
      "source": [
        "# 모델 평가 \n",
        "model.evaluate(cached_test, return_dict=True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "5/5 [==============================] - 3s 534ms/step - factorized_top_k/top_1_categorical_accuracy: 0.0000e+00 - factorized_top_k/top_5_categorical_accuracy: 0.0014 - factorized_top_k/top_10_categorical_accuracy: 0.0046 - factorized_top_k/top_50_categorical_accuracy: 0.0635 - factorized_top_k/top_100_categorical_accuracy: 0.1517 - loss: 32365.2773 - regularization_loss: 0.0000e+00 - total_loss: 32365.2773\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'factorized_top_k/top_100_categorical_accuracy': 0.15174999833106995,\n",
              " 'factorized_top_k/top_10_categorical_accuracy': 0.004600000102072954,\n",
              " 'factorized_top_k/top_1_categorical_accuracy': 0.0,\n",
              " 'factorized_top_k/top_50_categorical_accuracy': 0.06350000202655792,\n",
              " 'factorized_top_k/top_5_categorical_accuracy': 0.001449999981559813,\n",
              " 'loss': 29391.20703125,\n",
              " 'regularization_loss': 0,\n",
              " 'total_loss': 29391.20703125}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mMMtYCzw8j4s",
        "outputId": "471d5ce6-5e39-4456-932a-bd393a7a36c3"
      },
      "source": [
        "# 테스트 세트 성능은 훈련 성능보다 훨씬 나쁩니다. 이것은 두 가지 요인 때문입니다.\n",
        "# 1. 우리 모델은 단순히 기억할 수 있기 때문에 본 데이터에 대해 더 잘 수행 할 수 있습니다. \n",
        "# 이 과적 합 현상은 모델에 매개 변수가 많을 때 특히 강합니다. \n",
        "# 모델 정규화와 모델이 보이지 않는 데이터를 더 잘 일반화하는 데 도움이되는 사용자 및 영화 기능의 사용에 의해 매개 될 수 있습니다.\n",
        "\n",
        "# 2. 이 모델은 일부 사용자가 이미 본 영화를 다시 추천합니다. 이러한 알려진 양성 시계는 상위 K 권장 사항에서 테스트 영화를 몰아 낼 수 있습니다.\n",
        "# 두 번째 현상은 테스트 권장 사항에서 이전에 본 영화를 제외하여 해결할 수 있습니다.\n",
        "\n",
        "tfrs.examples.movielens.evaluate(\n",
        "    user_model=model.user_model,\n",
        "    movie_model=model.movie_model,\n",
        "    test=test,\n",
        "    movies=movies,\n",
        "    train=train,\n",
        "    k=10,\n",
        ")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'precision_at_k': 0.04065817409766454, 'recall_at_k': 0.03506924751617635}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RhmTWyuz9gDz",
        "outputId": "3ddae961-9421-48ef-e5e9-8b65d2e88688"
      },
      "source": [
        "# 이러한 값은 훈련 세트 시계를 제외하지 않은 경우보다 높습니다.\n",
        "tfrs.examples.movielens.evaluate(\n",
        "    user_model=model.user_model,\n",
        "    movie_model=model.movie_model,\n",
        "    test=test,\n",
        "    movies=movies,\n",
        "    train=None,\n",
        "    k=10,\n",
        ")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'precision_at_k': 0.010084925690021231, 'recall_at_k': 0.009065941058719384}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GuaBReaw9v18",
        "outputId": "6a1377d8-1c23-4478-cfb1-96489b8e13fe"
      },
      "source": [
        "# 훈련세트의 정확도는 훨씬 높다 \n",
        "tfrs.examples.movielens.evaluate(\n",
        "    user_model=model.user_model,\n",
        "    movie_model=model.movie_model,\n",
        "    test=train,\n",
        "    movies=movies,\n",
        "    k=10,\n",
        ")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'precision_at_k': 0.5727465535524919, 'recall_at_k': 0.1322686761859456}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "671eBEcy_rDO"
      },
      "source": [
        "# 추천 결과 추가하기 "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WKjdcA-6NflW"
      },
      "source": [
        "### 기본모델 - 추천 결과"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WyJAIsy5jbL7"
      },
      "source": [
        "# 모델 정의 \n",
        "\n",
        "class MovieLensModel(tfrs.Model):\n",
        "  # We derive from a custom base class to help reduce boilerplate. Under the hood,\n",
        "  # these are still plain Keras Models.\n",
        "\n",
        "  def __init__(\n",
        "      self,\n",
        "      user_model: tf.keras.Model,\n",
        "      movie_model: tf.keras.Model,\n",
        "      task: tfrs.tasks.Retrieval):\n",
        "    super().__init__()\n",
        "\n",
        "    # Set up user and movie representations.\n",
        "    self.user_model = user_model\n",
        "    self.movie_model = movie_model\n",
        "\n",
        "    # Set up a retrieval task.\n",
        "    self.task = task\n",
        "\n",
        "  def compute_loss(self, features: Dict[Text, tf.Tensor], training=False) -> tf.Tensor:\n",
        "    # Define how the loss is computed.\n",
        "\n",
        "    user_embeddings = self.user_model(features[\"user_id\"])\n",
        "    movie_embeddings = self.movie_model(features[\"movie_title\"])\n",
        "\n",
        "    return self.task(user_embeddings, movie_embeddings)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2EpnRAOB8dnu"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RTGCN11ajbXK"
      },
      "source": [
        "# Define user and movie models.\n",
        "user_model = tf.keras.Sequential([\n",
        "    user_ids_vocabulary,\n",
        "    tf.keras.layers.Embedding(user_ids_vocabulary.vocab_size(), 64)\n",
        "])\n",
        "movie_model = tf.keras.Sequential([\n",
        "    movie_titles_vocabulary,\n",
        "    tf.keras.layers.Embedding(movie_titles_vocabulary.vocab_size(), 64)\n",
        "])\n",
        "\n",
        "# Define your objectives.\n",
        "task = tfrs.tasks.Retrieval(metrics=tfrs.metrics.FactorizedTopK(\n",
        "    movies.batch(128).map(movie_model)\n",
        "  )\n",
        ")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pGPEqNzZjt44",
        "outputId": "a1654250-dffb-4798-b94b-af42ef516047"
      },
      "source": [
        "# 모델 학습, 예측 생성 \n",
        "import numpy as np\n",
        "\n",
        "# Create a retrieval model.\n",
        "model = MovieLensModel(user_model, movie_model, task)\n",
        "model.compile(optimizer=tf.keras.optimizers.Adagrad(0.5))\n",
        "\n",
        "# Train for 3 epochs.\n",
        "model.fit(ratings.batch(4096), epochs=3)\n",
        "\n",
        "# Use brute-force search to set up retrieval using the trained representations.\n",
        "index = tfrs.layers.factorized_top_k.BruteForce(model.user_model)\n",
        "index.index(movies.batch(100).map(model.movie_model), movies)\n",
        "\n",
        "# Get some recommendations.\n",
        "_, titles = index(np.array([\"42\"]))\n",
        "print(f\"Top 3 recommendations for user 42: {titles[0, :3]}\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/3\n",
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "25/25 [==============================] - 14s 532ms/step - factorized_top_k/top_1_categorical_accuracy: 2.9000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0041 - factorized_top_k/top_10_categorical_accuracy: 0.0103 - factorized_top_k/top_50_categorical_accuracy: 0.0736 - factorized_top_k/top_100_categorical_accuracy: 0.1554 - loss: 33206.8643 - regularization_loss: 0.0000e+00 - total_loss: 33206.8643\n",
            "Epoch 2/3\n",
            "25/25 [==============================] - 13s 532ms/step - factorized_top_k/top_1_categorical_accuracy: 4.6000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0076 - factorized_top_k/top_10_categorical_accuracy: 0.0203 - factorized_top_k/top_50_categorical_accuracy: 0.1349 - factorized_top_k/top_100_categorical_accuracy: 0.2560 - loss: 30599.9274 - regularization_loss: 0.0000e+00 - total_loss: 30599.9274\n",
            "Epoch 3/3\n",
            "25/25 [==============================] - 13s 530ms/step - factorized_top_k/top_1_categorical_accuracy: 4.4000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0094 - factorized_top_k/top_10_categorical_accuracy: 0.0256 - factorized_top_k/top_50_categorical_accuracy: 0.1703 - factorized_top_k/top_100_categorical_accuracy: 0.3053 - loss: 30150.6816 - regularization_loss: 0.0000e+00 - total_loss: 30150.6816\n",
            "Top 3 recommendations for user 42: [b'Rent-a-Kid (1995)' b'Just Cause (1995)' b'House Arrest (1996)']\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GCZyEVFgj1mT",
        "outputId": "3e92737e-2a82-4d6f-afa8-5ea2c91cb2bd"
      },
      "source": [
        "# epochs = 10 모델 \n",
        "\n",
        "# 모델 학습, 예측 생성 \n",
        "import numpy as np\n",
        "\n",
        "# Create a retrieval model.\n",
        "model = MovieLensModel(user_model, movie_model, task)\n",
        "model.compile(optimizer=tf.keras.optimizers.Adagrad(0.5))\n",
        "\n",
        "# Train for 3 epochs.\n",
        "model.fit(ratings.batch(4096), epochs=10)\n",
        "\n",
        "# Use brute-force search to set up retrieval using the trained representations.\n",
        "index = tfrs.layers.factorized_top_k.BruteForce(model.user_model)\n",
        "index.index(movies.batch(100).map(model.movie_model), movies)\n",
        "\n",
        "# Get some recommendations.\n",
        "_, titles = index(np.array([\"42\"]))\n",
        "print(f\"Top 3 recommendations for user 42: {titles[0, :3]}\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/10\n",
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:The dtype of the source tensor must be floating (e.g. tf.float32) when calling GradientTape.gradient, got tf.int32\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Gradients do not exist for variables ['counter:0'] when minimizing the loss.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "25/25 [==============================] - 14s 523ms/step - factorized_top_k/top_1_categorical_accuracy: 8.0000e-05 - factorized_top_k/top_5_categorical_accuracy: 0.0016 - factorized_top_k/top_10_categorical_accuracy: 0.0048 - factorized_top_k/top_50_categorical_accuracy: 0.0438 - factorized_top_k/top_100_categorical_accuracy: 0.0996 - loss: 33081.7867 - regularization_loss: 0.0000e+00 - total_loss: 33081.7867\n",
            "Epoch 2/10\n",
            "25/25 [==============================] - 13s 523ms/step - factorized_top_k/top_1_categorical_accuracy: 1.5000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0051 - factorized_top_k/top_10_categorical_accuracy: 0.0146 - factorized_top_k/top_50_categorical_accuracy: 0.1052 - factorized_top_k/top_100_categorical_accuracy: 0.2104 - loss: 31013.1652 - regularization_loss: 0.0000e+00 - total_loss: 31013.1652\n",
            "Epoch 3/10\n",
            "25/25 [==============================] - 13s 531ms/step - factorized_top_k/top_1_categorical_accuracy: 3.8000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0083 - factorized_top_k/top_10_categorical_accuracy: 0.0219 - factorized_top_k/top_50_categorical_accuracy: 0.1438 - factorized_top_k/top_100_categorical_accuracy: 0.2672 - loss: 30422.7510 - regularization_loss: 0.0000e+00 - total_loss: 30422.7510\n",
            "Epoch 4/10\n",
            "25/25 [==============================] - 13s 527ms/step - factorized_top_k/top_1_categorical_accuracy: 4.4000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0103 - factorized_top_k/top_10_categorical_accuracy: 0.0281 - factorized_top_k/top_50_categorical_accuracy: 0.1756 - factorized_top_k/top_100_categorical_accuracy: 0.3120 - loss: 30073.3168 - regularization_loss: 0.0000e+00 - total_loss: 30073.3168\n",
            "Epoch 5/10\n",
            "25/25 [==============================] - 13s 526ms/step - factorized_top_k/top_1_categorical_accuracy: 3.3000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0112 - factorized_top_k/top_10_categorical_accuracy: 0.0312 - factorized_top_k/top_50_categorical_accuracy: 0.1976 - factorized_top_k/top_100_categorical_accuracy: 0.3439 - loss: 29815.3961 - regularization_loss: 0.0000e+00 - total_loss: 29815.3961\n",
            "Epoch 6/10\n",
            "25/25 [==============================] - 13s 532ms/step - factorized_top_k/top_1_categorical_accuracy: 4.6000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0118 - factorized_top_k/top_10_categorical_accuracy: 0.0327 - factorized_top_k/top_50_categorical_accuracy: 0.2130 - factorized_top_k/top_100_categorical_accuracy: 0.3675 - loss: 29613.5346 - regularization_loss: 0.0000e+00 - total_loss: 29613.5346\n",
            "Epoch 7/10\n",
            "25/25 [==============================] - 13s 529ms/step - factorized_top_k/top_1_categorical_accuracy: 4.0000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0122 - factorized_top_k/top_10_categorical_accuracy: 0.0342 - factorized_top_k/top_50_categorical_accuracy: 0.2264 - factorized_top_k/top_100_categorical_accuracy: 0.3871 - loss: 29451.4087 - regularization_loss: 0.0000e+00 - total_loss: 29451.4087\n",
            "Epoch 8/10\n",
            "25/25 [==============================] - 13s 526ms/step - factorized_top_k/top_1_categorical_accuracy: 3.9000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0123 - factorized_top_k/top_10_categorical_accuracy: 0.0350 - factorized_top_k/top_50_categorical_accuracy: 0.2366 - factorized_top_k/top_100_categorical_accuracy: 0.4009 - loss: 29314.2055 - regularization_loss: 0.0000e+00 - total_loss: 29314.2055\n",
            "Epoch 9/10\n",
            "25/25 [==============================] - 13s 521ms/step - factorized_top_k/top_1_categorical_accuracy: 4.3000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0128 - factorized_top_k/top_10_categorical_accuracy: 0.0365 - factorized_top_k/top_50_categorical_accuracy: 0.2446 - factorized_top_k/top_100_categorical_accuracy: 0.4131 - loss: 29198.6031 - regularization_loss: 0.0000e+00 - total_loss: 29198.6031\n",
            "Epoch 10/10\n",
            "25/25 [==============================] - 13s 528ms/step - factorized_top_k/top_1_categorical_accuracy: 3.8000e-04 - factorized_top_k/top_5_categorical_accuracy: 0.0129 - factorized_top_k/top_10_categorical_accuracy: 0.0369 - factorized_top_k/top_50_categorical_accuracy: 0.2522 - factorized_top_k/top_100_categorical_accuracy: 0.4234 - loss: 29099.2976 - regularization_loss: 0.0000e+00 - total_loss: 29099.2976\n",
            "Top 3 recommendations for user 42: [b'Rent-a-Kid (1995)' b'House Arrest (1996)' b'Just Cause (1995)']\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JNM-1rkVNYMg"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9Vqgh34zNYbk"
      },
      "source": [
        "### 아마존 데이터 적용\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jRYOYpJzJsSk"
      },
      "source": [
        "#### 아마존 데이터 원본"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BzMqY57T3BCE",
        "outputId": "582e9e86-07af-4160-fa68-3ef6b3240c2e"
      },
      "source": [
        "# amazon data 비교해서 knn 모델과 딥러닝 모델 비교하기. \n",
        "# amazon data - deep learning 모델 \n",
        "import pandas as pd\n",
        "amazon = pd.read_csv('/content/drive/MyDrive/amazon_products/1429_1.csv')\n",
        "# amazon_ = amazon[['id', 'name', 'asins', 'reviews.rating']]\n",
        "# amazon_\n",
        "\n",
        "amazon['name'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Amazon Echo Show Alexa-enabled Bluetooth Speaker with 7\" Screen                                                                     845\n",
              "All-New Fire HD 8 Tablet, 8\" HD Display, Wi-Fi, 16 GB - Includes Special Offers, Magenta                                            797\n",
              "Amazon - Echo Plus w/ Built-In Hub - Silver                                                                                         590\n",
              "Fire Kids Edition Tablet, 7 Display, Wi-Fi, 16 GB, Blue Kid-Proof Case                                                              561\n",
              "Brand New Amazon Kindle Fire 16gb 7\" Ips Display Tablet Wifi 16 Gb Blue                                                             467\n",
              "Fire Tablet, 7 Display, Wi-Fi, 16 GB - Includes Special Offers, Black                                                               371\n",
              "Amazon Tap - Alexa-Enabled Portable Bluetooth Speaker                                                                               225\n",
              "Fire Kids Edition Tablet, 7 Display, Wi-Fi, 16 GB, Green Kid-Proof Case                                                             217\n",
              "Kindle E-reader - White, 6 Glare-Free Touchscreen Display, Wi-Fi - Includes Special Offers                                          159\n",
              "Fire HD 10 Tablet, 10.1 HD Display, Wi-Fi, 16 GB - Includes Special Offers, Silver Aluminum                                         106\n",
              "Fire Tablet with Alexa, 7\" Display, 16 GB, Magenta - with Special Offers                                                            101\n",
              "Amazon Kindle E-Reader 6\" Wifi (8th Generation, 2016)                                                                                96\n",
              "Amazon - Kindle Voyage - 6\" - 4GB - Black                                                                                            82\n",
              "All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi, 32 GB - Includes Special Offers, Blue                                                 70\n",
              "All-New Fire HD 8 Tablet, 8\" HD Display, Wi-Fi, 32 GB - Includes Special Offers, Black                                               58\n",
              "Fire HD 8 Tablet with Alexa, 8\" HD Display, 32 GB, Tangerine - with Special Offers                                                   53\n",
              "All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi, 16 GB - Includes Special Offers, Blue                                                 51\n",
              "All-New Fire HD 8 Tablet, 8\" HD Display, Wi-Fi, 32 GB - Includes Special Offers, Magenta                                             40\n",
              "Kindle Oasis E-reader with Leather Charging Cover - Black, 6\" High-Resolution Display (300 ppi), Wi-Fi - Includes Special Offers     39\n",
              "Kindle Oasis E-reader with Leather Charging Cover - Merlot, 6 High-Resolution Display (300 ppi), Wi-Fi - Includes Special Offers     24\n",
              "Amazon - Kindle Voyage - 4GB - Wi-Fi + 3G - Black                                                                                    22\n",
              "Amazon 9W PowerFast Official OEM USB Charger and Power Adapter for Fire Tablets and Kindle eReaders                                  22\n",
              "Amazon Fire TV with 4K Ultra HD and Alexa Voice Remote (Pendant Design) | Streaming Media Player                                      4\n",
              "Name: name, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 184
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "maQIYieyR6uk",
        "outputId": "8a84806e-e1ab-4678-8f9a-3b3093fc7349"
      },
      "source": [
        "amazon_ = amazon_.rename(columns={\"id\": \"user_id\", \"name\": \"product_name\", \"asins\":'product_id', 'reviews.rating': \"rating\"})\n",
        "amazon_\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>product_name</th>\n",
              "      <th>product_id</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34655</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34656</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34657</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34658</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34659</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>34660 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                    user_id  ... rating\n",
              "0      AVqkIhwDv8e3D1O-lebb  ...    5.0\n",
              "1      AVqkIhwDv8e3D1O-lebb  ...    5.0\n",
              "2      AVqkIhwDv8e3D1O-lebb  ...    5.0\n",
              "3      AVqkIhwDv8e3D1O-lebb  ...    4.0\n",
              "4      AVqkIhwDv8e3D1O-lebb  ...    5.0\n",
              "...                     ...  ...    ...\n",
              "34655  AVpfiBlyLJeJML43-4Tp  ...    3.0\n",
              "34656  AVpfiBlyLJeJML43-4Tp  ...    1.0\n",
              "34657  AVpfiBlyLJeJML43-4Tp  ...    1.0\n",
              "34658  AVpfiBlyLJeJML43-4Tp  ...    1.0\n",
              "34659  AVpfiBlyLJeJML43-4Tp  ...    1.0\n",
              "\n",
              "[34660 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Flsm5WunSqrk"
      },
      "source": [
        "# ramen = pd.read_csv('/content/drive/MyDrive/ramen-ratings.csv')\n",
        "# ramen.head()\n",
        "\n",
        "# beauty는 상품명 해석이 안되는 문제. \n",
        "# summer 는 유저아이디가 없는 문제. \n",
        "\n",
        "# user_id, product_id, product_name, timestamp 다 있는 건 아마존 뿐. \n",
        "# 아마존은 상품들이 다 비슷한 문제. 근데 더 나을 수도 있어. \n",
        "\n",
        "#olist : user_id, product_id, product_name이 없음."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "O-KvT24LU8KQ",
        "outputId": "fb6bcc98-85c5-4cd3-d810-337d563c91c8"
      },
      "source": [
        "\n",
        "ratings = amazon_\n",
        "ratings\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>product_name</th>\n",
              "      <th>product_id</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>AVqkIhwDv8e3D1O-lebb</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34655</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34656</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34657</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34658</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34659</th>\n",
              "      <td>AVpfiBlyLJeJML43-4Tp</td>\n",
              "      <td>NaN</td>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>34660 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                    user_id  ... rating\n",
              "0      AVqkIhwDv8e3D1O-lebb  ...    5.0\n",
              "1      AVqkIhwDv8e3D1O-lebb  ...    5.0\n",
              "2      AVqkIhwDv8e3D1O-lebb  ...    5.0\n",
              "3      AVqkIhwDv8e3D1O-lebb  ...    4.0\n",
              "4      AVqkIhwDv8e3D1O-lebb  ...    5.0\n",
              "...                     ...  ...    ...\n",
              "34655  AVpfiBlyLJeJML43-4Tp  ...    3.0\n",
              "34656  AVpfiBlyLJeJML43-4Tp  ...    1.0\n",
              "34657  AVpfiBlyLJeJML43-4Tp  ...    1.0\n",
              "34658  AVpfiBlyLJeJML43-4Tp  ...    1.0\n",
              "34659  AVpfiBlyLJeJML43-4Tp  ...    1.0\n",
              "\n",
              "[34660 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 159
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "HSHW9yPsQLUZ",
        "outputId": "d9826342-b502-4804-f935-82ec4294a6bd"
      },
      "source": [
        "\n",
        "products = amazon_[['product_id', 'product_name']]\n",
        "products"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>product_id</th>\n",
              "      <th>product_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>B01AHB9CN2</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34655</th>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34656</th>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34657</th>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34658</th>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34659</th>\n",
              "      <td>B006GWO5WK</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>34660 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       product_id                                       product_name\n",
              "0      B01AHB9CN2  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "1      B01AHB9CN2  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "2      B01AHB9CN2  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "3      B01AHB9CN2  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "4      B01AHB9CN2  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "...           ...                                                ...\n",
              "34655  B006GWO5WK                                                NaN\n",
              "34656  B006GWO5WK                                                NaN\n",
              "34657  B006GWO5WK                                                NaN\n",
              "34658  B006GWO5WK                                                NaN\n",
              "34659  B006GWO5WK                                                NaN\n",
              "\n",
              "[34660 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "227UxzsNJfW3"
      },
      "source": [
        "#### encoding 부분\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CToj6thwXJEZ",
        "outputId": "5bb4cebd-1eec-4a11-bef6-69344e420702"
      },
      "source": [
        "!pip install category_encoders"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting category_encoders\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/44/57/fcef41c248701ee62e8325026b90c432adea35555cbc870aff9cfba23727/category_encoders-2.2.2-py2.py3-none-any.whl (80kB)\n",
            "\r\u001b[K     |████                            | 10kB 20.5MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 20kB 20.4MB/s eta 0:00:01\r\u001b[K     |████████████▏                   | 30kB 11.7MB/s eta 0:00:01\r\u001b[K     |████████████████▎               | 40kB 9.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 51kB 8.2MB/s eta 0:00:01\r\u001b[K     |████████████████████████▍       | 61kB 7.9MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▍   | 71kB 9.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 81kB 5.6MB/s \n",
            "\u001b[?25hRequirement already satisfied: scipy>=1.0.0 in /usr/local/lib/python3.6/dist-packages (from category_encoders) (1.4.1)\n",
            "Requirement already satisfied: statsmodels>=0.9.0 in /usr/local/lib/python3.6/dist-packages (from category_encoders) (0.10.2)\n",
            "Requirement already satisfied: pandas>=0.21.1 in /usr/local/lib/python3.6/dist-packages (from category_encoders) (1.1.5)\n",
            "Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.6/dist-packages (from category_encoders) (0.22.2.post1)\n",
            "Requirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.6/dist-packages (from category_encoders) (1.19.4)\n",
            "Requirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.6/dist-packages (from category_encoders) (0.5.1)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.6/dist-packages (from pandas>=0.21.1->category_encoders) (2.8.1)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas>=0.21.1->category_encoders) (2018.9)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from scikit-learn>=0.20.0->category_encoders) (1.0.0)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from patsy>=0.5.1->category_encoders) (1.15.0)\n",
            "Installing collected packages: category-encoders\n",
            "Successfully installed category-encoders-2.2.2\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "RXTv3wNOVT1D",
        "outputId": "0c1b057d-b475-42e9-9da6-e803823e6e89"
      },
      "source": [
        "# 문자 숫자화.\n",
        "# import numpy as np\n",
        "# # movie_ids = movies.batch(1_000).map(lambda x: x[\"movie_id\"])\n",
        "# # user_ids = ratings.batch(1_000_000).map(lambda x: x[\"user_id\"])\n",
        "\n",
        "# unique_product_ids = np.unique(np.concatenate(list(products['product_id'])))\n",
        "# unique_user_ids = np.unique(np.concatenate(list(rating['user_id'])))\n",
        "\n",
        "# # We convert bytes to strings since bytes are not serializable\n",
        "# unique_product_id_strings = [id.decode(\"utf-8\") for id in unique_product_ids]\n",
        "# unique_user_id_strings = [id.decode(\"utf-8\") for id in unique_user_ids]\n",
        "\n",
        "# unique_product_id_strings[:10]\n",
        "\n",
        "from category_encoders import OrdinalEncoder\n",
        "from sklearn.impute import SimpleImputer\n",
        "\n",
        "#encoding \n",
        "\n",
        "encoder = OrdinalEncoder()\n",
        "rating_enc = encoder.fit_transform(rating) # 학습데이터\n",
        "# products_enc = encoder.fit_transform(products) # 검증데이터\n",
        "rating_enc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>product_name</th>\n",
              "      <th>product_id</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34655</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "      <td>42</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34656</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "      <td>42</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34657</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "      <td>42</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34658</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "      <td>42</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34659</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "      <td>42</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>34660 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       user_id  product_name  product_id  rating\n",
              "0            1             1           1     5.0\n",
              "1            1             1           1     5.0\n",
              "2            1             1           1     5.0\n",
              "3            1             1           1     4.0\n",
              "4            1             1           1     5.0\n",
              "...        ...           ...         ...     ...\n",
              "34655       42            49          42     3.0\n",
              "34656       42            49          42     1.0\n",
              "34657       42            49          42     1.0\n",
              "34658       42            49          42     1.0\n",
              "34659       42            49          42     1.0\n",
              "\n",
              "[34660 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "gD20nQEYXzq-",
        "outputId": "9ca608a2-be50-4269-c401-6f3225ef1ea9"
      },
      "source": [
        "encoder2 = OrdinalEncoder()\n",
        "products_enc = encoder2.fit_transform(products)\n",
        "products_enc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>product_id</th>\n",
              "      <th>product_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34655</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34656</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34657</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34658</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34659</th>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>34660 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       product_id  product_name\n",
              "0               1             1\n",
              "1               1             1\n",
              "2               1             1\n",
              "3               1             1\n",
              "4               1             1\n",
              "...           ...           ...\n",
              "34655          42            49\n",
              "34656          42            49\n",
              "34657          42            49\n",
              "34658          42            49\n",
              "34659          42            49\n",
              "\n",
              "[34660 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "gRYbva4zEJmm",
        "outputId": "5288bd51-71ea-46c0-9c68-8c0e70b58674"
      },
      "source": [
        "products_enc['product_name_str'] = products['product_name']\n",
        "products_enc = products_enc[['product_id', 'product_name_str']]\n",
        "products_enc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>product_id</th>\n",
              "      <th>product_name_str</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34655</th>\n",
              "      <td>42</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34656</th>\n",
              "      <td>42</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34657</th>\n",
              "      <td>42</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34658</th>\n",
              "      <td>42</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34659</th>\n",
              "      <td>42</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>34660 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       product_id                                   product_name_str\n",
              "0               1  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "1               1  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "2               1  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "3               1  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "4               1  All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n",
              "...           ...                                                ...\n",
              "34655          42                                                NaN\n",
              "34656          42                                                NaN\n",
              "34657          42                                                NaN\n",
              "34658          42                                                NaN\n",
              "34659          42                                                NaN\n",
              "\n",
              "[34660 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 135
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SK1xV0KVJj05"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yZAtsh2bJkE7"
      },
      "source": [
        "### 모델에 넣기 위한 데이터 형태변환 작업"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 386
        },
        "id": "6H0nwKzwOopg",
        "outputId": "543ef8e5-d749-4556-e9d0-782fb2941be2"
      },
      "source": [
        "# amazon 데이터 tf data로 받기. \n",
        "import pandas as pd\n",
        "import tensorflow as tf\n",
        "dataurl='/content/drive/MyDrive/amazon_products/1429_1.csv'\n",
        "csv_file = tf.keras.utils.get_file('1429_1.csv', origin=dataurl)\n",
        "df = pd.read_csv(csv_file)\n",
        "df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading data from /content/drive/MyDrive/amazon_products/1429_1.csv\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-2-61474272e471>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtensorflow\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mdataurl\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'/content/drive/MyDrive/amazon_products/1429_1.csv'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mcsv_file\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_file\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'1429_1.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morigin\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdataurl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcsv_file\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/data_utils.py\u001b[0m in \u001b[0;36mget_file\u001b[0;34m(fname, origin, untar, md5_hash, file_hash, cache_subdir, hash_algorithm, extract, archive_format, cache_dir)\u001b[0m\n\u001b[1;32m    273\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    274\u001b[0m       \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 275\u001b[0;31m         \u001b[0murlretrieve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0morigin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfpath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdl_progress\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    276\u001b[0m       \u001b[0;32mexcept\u001b[0m \u001b[0mHTTPError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    277\u001b[0m         \u001b[0;32mraise\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merror_msg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0morigin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.6/urllib/request.py\u001b[0m in \u001b[0;36murlretrieve\u001b[0;34m(url, filename, reporthook, data)\u001b[0m\n\u001b[1;32m    246\u001b[0m     \u001b[0murl_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpath\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msplittype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    247\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 248\u001b[0;31m     \u001b[0;32mwith\u001b[0m \u001b[0mcontextlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclosing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murlopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfp\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    249\u001b[0m         \u001b[0mheaders\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    250\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.6/urllib/request.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(url, data, timeout, cafile, capath, cadefault, context)\u001b[0m\n\u001b[1;32m    221\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    222\u001b[0m         \u001b[0mopener\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_opener\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 223\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mopener\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    224\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    225\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0minstall_opener\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopener\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.6/urllib/request.py\u001b[0m in \u001b[0;36mopen\u001b[0;34m(self, fullurl, data, timeout)\u001b[0m\n\u001b[1;32m    509\u001b[0m         \u001b[0;31m# accept a URL or a Request object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    510\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfullurl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 511\u001b[0;31m             \u001b[0mreq\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfullurl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    512\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    513\u001b[0m             \u001b[0mreq\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfullurl\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.6/urllib/request.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, url, data, headers, origin_req_host, unverifiable, method)\u001b[0m\n\u001b[1;32m    327\u001b[0m                  \u001b[0morigin_req_host\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0munverifiable\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    328\u001b[0m                  method=None):\n\u001b[0;32m--> 329\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfull_url\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    330\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mheaders\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    331\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munredirected_hdrs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.6/urllib/request.py\u001b[0m in \u001b[0;36mfull_url\u001b[0;34m(self, url)\u001b[0m\n\u001b[1;32m    353\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_full_url\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0munwrap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_full_url\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfragment\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msplittag\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_full_url\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 355\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    356\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    357\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfull_url\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdeleter\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.6/urllib/request.py\u001b[0m in \u001b[0;36m_parse\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    382\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrest\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msplittype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_full_url\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    383\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 384\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"unknown url type: %r\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfull_url\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    385\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhost\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselector\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msplithost\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrest\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    386\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhost\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: unknown url type: '/content/drive/MyDrive/amazon_products/1429_1.csv'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 353
        },
        "id": "Hz5267z0Ki-K",
        "outputId": "0c4483ed-368c-450c-e291-1c5e37351f73"
      },
      "source": [
        "|##아래 솔루션 폐기. 이유: 애초에 tensorflow map과 그냥 map이 다루는 데이터 차원이 다름. \n",
        "##따라서, dataframe을 tf.dataset으로 바꾼 다음(인코딩 없이), tf.dataset.map을 실행해야 함. \n",
        "# dataframe -> series 변환\n",
        "ratings_s = pd.Series(ratings[['product_id', 'user_id']])\n",
        "ratings_s\n",
        "# ratings.iloc[:, [1,3]]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-170-e5d5692a7b36>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# dataframe -> series 변환\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mratings_s\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mratings\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'product_id'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'user_id'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mratings_s\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# ratings.iloc[:, [1,3]]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, index, dtype, name, copy, fastpath)\u001b[0m\n\u001b[1;32m    229\u001b[0m             \u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mibase\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmaybe_extract_name\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    230\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 231\u001b[0;31m             \u001b[0;32mif\u001b[0m \u001b[0mis_empty_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    232\u001b[0m                 \u001b[0;31m# gh-17261\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    233\u001b[0m                 warnings.warn(\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/construction.py\u001b[0m in \u001b[0;36mis_empty_data\u001b[0;34m(data)\u001b[0m\n\u001b[1;32m    594\u001b[0m     \u001b[0mis_none\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    595\u001b[0m     \u001b[0mis_list_like_without_dtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mis_list_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"dtype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 596\u001b[0;31m     \u001b[0mis_simple_empty\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mis_list_like_without_dtype\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    597\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mis_none\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_simple_empty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    598\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__nonzero__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1328\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__nonzero__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1329\u001b[0m         raise ValueError(\n\u001b[0;32m-> 1330\u001b[0;31m             \u001b[0;34mf\"The truth value of a {type(self).__name__} is ambiguous. \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1331\u001b[0m             \u001b[0;34m\"Use a.empty, a.bool(), a.item(), a.any() or a.all().\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1332\u001b[0m         )\n",
            "\u001b[0;31mValueError\u001b[0m: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all()."
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 386
        },
        "id": "gEJ8uCgmJqQm",
        "outputId": "8b8230dc-18fd-4478-ef86-1abfb210fa1e"
      },
      "source": [
        "# 인코딩 하지 않고, map형태로 만들기 \n",
        "\n",
        "ratings_a = pd.Series(ratings[['product_id', 'user_id']]).map(lambda x: {\n",
        "    \"product_id\": x[\"product_id\"],\n",
        "    \"user_id\": x[\"user_id\"]\n",
        "})\n",
        "products = pd.Series(products[['product_id', 'product_name']]).map(lambda x: {\n",
        "    \"product_id\": x[\"prodcut_id\"],\n",
        "    \"product_name\": x[\"product_name\"]\n",
        "})"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-171-c7f6be0712f1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# 인코딩 하지 않고, map형태로 만들기\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m ratings_a = pd.Series(ratings[['product_id', 'user_id']]).map(lambda x: {\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0;34m\"product_id\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"product_id\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;34m\"user_id\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"user_id\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, index, dtype, name, copy, fastpath)\u001b[0m\n\u001b[1;32m    229\u001b[0m             \u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mibase\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmaybe_extract_name\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    230\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 231\u001b[0;31m             \u001b[0;32mif\u001b[0m \u001b[0mis_empty_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    232\u001b[0m                 \u001b[0;31m# gh-17261\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    233\u001b[0m                 warnings.warn(\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/construction.py\u001b[0m in \u001b[0;36mis_empty_data\u001b[0;34m(data)\u001b[0m\n\u001b[1;32m    594\u001b[0m     \u001b[0mis_none\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    595\u001b[0m     \u001b[0mis_list_like_without_dtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mis_list_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"dtype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 596\u001b[0;31m     \u001b[0mis_simple_empty\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mis_list_like_without_dtype\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    597\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mis_none\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_simple_empty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    598\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__nonzero__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1328\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__nonzero__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1329\u001b[0m         raise ValueError(\n\u001b[0;32m-> 1330\u001b[0;31m             \u001b[0;34mf\"The truth value of a {type(self).__name__} is ambiguous. \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1331\u001b[0m             \u001b[0;34m\"Use a.empty, a.bool(), a.item(), a.any() or a.all().\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1332\u001b[0m         )\n",
            "\u001b[0;31mValueError\u001b[0m: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all()."
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 690
        },
        "id": "zZJdwD_ZPKFh",
        "outputId": "c778386a-917f-44d0-ef7c-73fce3e27bc1"
      },
      "source": [
        "# 위 데이터로 적용. \n",
        "import pandas as pd\n",
        "import tensorflow as tf\n",
        "\n",
        "rating_tf = tf.data.Dataset.from_tensor_slices(dict(rating_enc))\n",
        "print(next(iter(rating_tf)))\n",
        "\n",
        "products_tf = tf.data.Dataset.from_tensor_slices(dict(products_enc))\n",
        "print(next(iter(products_tf)))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'user_id': <tf.Tensor: shape=(), dtype=int64, numpy=1>, 'product_name': <tf.Tensor: shape=(), dtype=int64, numpy=1>, 'product_id': <tf.Tensor: shape=(), dtype=int64, numpy=1>, 'rating': <tf.Tensor: shape=(), dtype=float64, numpy=5.0>}\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/data/util/structure.py\u001b[0m in \u001b[0;36mnormalize_element\u001b[0;34m(element, element_signature)\u001b[0m\n\u001b[1;32m    105\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mspec\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 106\u001b[0;31m           \u001b[0mspec\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtype_spec_from_value\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0muse_fallback\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    107\u001b[0m       \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/data/util/structure.py\u001b[0m in \u001b[0;36mtype_spec_from_value\u001b[0;34m(element, use_fallback)\u001b[0m\n\u001b[1;32m    479\u001b[0m   raise TypeError(\"Could not build a TypeSpec for %r with type %s\" %\n\u001b[0;32m--> 480\u001b[0;31m                   (element, type(element).__name__))\n\u001b[0m\u001b[1;32m    481\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: Could not build a TypeSpec for 0        All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n1        All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n2        All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n3        All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n4        All-New Fire HD 8 Tablet, 8 HD Display, Wi-Fi,...\n                               ...                        \n34655                                                  NaN\n34656                                                  NaN\n34657                                                  NaN\n34658                                                  NaN\n34659                                                  NaN\nName: product_name_str, Length: 34660, dtype: object with type Series",
            "\nDuring handling of the above exception, another exception occurred:\n",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-136-48ded81d6d41>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrating_tf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mproducts_tf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfrom_tensor_slices\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproducts_enc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproducts_tf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/data/ops/dataset_ops.py\u001b[0m in \u001b[0;36mfrom_tensor_slices\u001b[0;34m(tensors)\u001b[0m\n\u001b[1;32m    689\u001b[0m       \u001b[0mDataset\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mA\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m`\u001b[0m\u001b[0mDataset\u001b[0m\u001b[0;31m`\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    690\u001b[0m     \"\"\"\n\u001b[0;32m--> 691\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mTensorSliceDataset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtensors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    692\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    693\u001b[0m   \u001b[0;32mclass\u001b[0m \u001b[0m_GeneratorState\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobject\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/data/ops/dataset_ops.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, element)\u001b[0m\n\u001b[1;32m   3153\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0melement\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3154\u001b[0m     \u001b[0;34m\"\"\"See `Dataset.from_tensor_slices()` for details.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3155\u001b[0;31m     \u001b[0melement\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstructure\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnormalize_element\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0melement\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3156\u001b[0m     \u001b[0mbatched_spec\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstructure\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype_spec_from_value\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0melement\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3157\u001b[0m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_tensors\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstructure\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_batched_tensor_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatched_spec\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0melement\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/data/util/structure.py\u001b[0m in \u001b[0;36mnormalize_element\u001b[0;34m(element, element_signature)\u001b[0m\n\u001b[1;32m    109\u001b[0m         \u001b[0;31m# the value. As a fallback try converting the value to a tensor.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m         normalized_components.append(\n\u001b[0;32m--> 111\u001b[0;31m             ops.convert_to_tensor(t, name=\"component_%d\" % i))\n\u001b[0m\u001b[1;32m    112\u001b[0m       \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    113\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mspec\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msparse_tensor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSparseTensorSpec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/profiler/trace.py\u001b[0m in \u001b[0;36mwrapped\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    161\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mTrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrace_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mtrace_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    162\u001b[0m           \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 163\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    164\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    165\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36mconvert_to_tensor\u001b[0;34m(value, dtype, name, as_ref, preferred_dtype, dtype_hint, ctx, accepted_result_types)\u001b[0m\n\u001b[1;32m   1538\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1539\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mret\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1540\u001b[0;31m       \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconversion_func\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mas_ref\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mas_ref\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1541\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1542\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mret\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mNotImplemented\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36m_constant_tensor_conversion_function\u001b[0;34m(v, dtype, name, as_ref)\u001b[0m\n\u001b[1;32m    337\u001b[0m                                          as_ref=False):\n\u001b[1;32m    338\u001b[0m   \u001b[0m_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mas_ref\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 339\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mconstant\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    340\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    341\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36mconstant\u001b[0;34m(value, dtype, shape, name)\u001b[0m\n\u001b[1;32m    263\u001b[0m   \"\"\"\n\u001b[1;32m    264\u001b[0m   return _constant_impl(value, dtype, shape, name, verify_shape=False,\n\u001b[0;32m--> 265\u001b[0;31m                         allow_broadcast=True)\n\u001b[0m\u001b[1;32m    266\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    267\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36m_constant_impl\u001b[0;34m(value, dtype, shape, name, verify_shape, allow_broadcast)\u001b[0m\n\u001b[1;32m    274\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mtrace\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"tf.constant\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    275\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0m_constant_eager_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mctx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverify_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 276\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_constant_eager_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mctx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverify_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    277\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    278\u001b[0m   \u001b[0mg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_default_graph\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36m_constant_eager_impl\u001b[0;34m(ctx, value, dtype, shape, verify_shape)\u001b[0m\n\u001b[1;32m    299\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0m_constant_eager_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mctx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverify_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    300\u001b[0m   \u001b[0;34m\"\"\"Implementation of eager constant.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 301\u001b[0;31m   \u001b[0mt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconvert_to_eager_tensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mctx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    302\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mshape\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    303\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py\u001b[0m in \u001b[0;36mconvert_to_eager_tensor\u001b[0;34m(value, ctx, dtype)\u001b[0m\n\u001b[1;32m     96\u001b[0m       \u001b[0mdtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdtypes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_datatype_enum\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     97\u001b[0m   \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 98\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mEagerTensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdevice_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     99\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    100\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: Failed to convert a NumPy array to a Tensor (Unsupported object type float)."
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YLzXiFDw1Xb7"
      },
      "source": [
        "import pprint"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dk5WQ9KT1UGJ",
        "outputId": "6566d6bd-77fd-4390-c499-86b462e4051f"
      },
      "source": [
        "for x in rating_tf.take(1).as_numpy_iterator():\n",
        "  pprint.pprint(x)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'product_id': 1, 'product_name': 1, 'rating': 5.0, 'user_id': 1}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B67AVV0a1gy4",
        "outputId": "7817efa7-a1ba-4fa0-9234-fa5f7a95da06"
      },
      "source": [
        "for x in products_tf.take(1).as_numpy_iterator():\n",
        "  pprint.pprint(x)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "{'product_id': 1, 'product_name': 1}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TpiBkdq-1nFi"
      },
      "source": [
        "ratings_ = rating_tf.map(lambda x: {\n",
        "    \"product_name\": x[\"product_name\"],\n",
        "    \"user_id\": x[\"user_id\"],\n",
        "})\n",
        "\n",
        "products_ = products_tf.map(lambda x: x['product_name'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OsUafpSe3e3R"
      },
      "source": [
        "\n",
        "products_name = products['product_name']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JxEpkmbA21yz"
      },
      "source": [
        "# 훈련, 테스트 데이터 분리 (무작위 80, 20)\n",
        "tf.random.set_seed(42)\n",
        "shuffled = ratings_.shuffle(100_000, seed=42, reshuffle_each_iteration=False)\n",
        "\n",
        "train = shuffled.take(80_000)\n",
        "test = shuffled.skip(80_000).take(20_000)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EPNu4okX53bP",
        "outputId": "bb2d267d-c86b-4cb5-9dcc-2b3a566856cf"
      },
      "source": [
        "train"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<TakeDataset shapes: {product_name: (), user_id: ()}, types: {product_name: tf.int64, user_id: tf.int64}>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CMniGqf5G3ml",
        "outputId": "bb85a9b2-7aee-4aa5-8c31-c9931ad17c0b"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('<U21')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 345
        },
        "id": "QviplOVG3Gkf",
        "outputId": "f3ed4bfc-6366-4237-b54c-844d5bcb7a4f"
      },
      "source": [
        "# # \n",
        "# # product_name = products_.batch(1_000)\n",
        "# import numpy as np\n",
        "# product_name = products_.batch(1_000)\n",
        "# user_ids = ratings_.batch(1_000_000).map(lambda x: x[\"user_id\"])\n",
        "\n",
        "# unique_product_name = np.unique(np.concatenate(list(product_name)))\n",
        "# unique_user_ids = np.unique(np.concatenate(list(user_ids)))\n",
        "\n",
        "# unique_product_name[:20]\n",
        "\n",
        "# 범주형 데이터를 연속 범위의 정수로 맵핑 -> 모델 layer에 넣을 수 있는 데이터로 변환하기 위함. \n",
        "import numpy as np\n",
        "product_ids = products_tf.batch(1_000).map(lambda x: x[\"product_id\"])\n",
        "user_ids = ratings_.batch(1_000_000).map(lambda x: x[\"user_id\"])\n",
        "\n",
        "unique_product_ids = np.unique(np.concatenate(list(product_ids)))\n",
        "unique_user_ids = np.unique(np.concatenate(list(user_ids)))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-141-6190f7431e35>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;31m# We convert bytes to strings since bytes are not serializable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;31m# unique_movie_id_strings = [id.decode(\"utf-8\") for id in unique_movie_ids]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 22\u001b[0;31m \u001b[0munique_user_id_strings\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mid\u001b[0m \u001b[0;32min\u001b[0m \u001b[0munique_user_ids\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     23\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[0;31m# unique_movie_id_strings[:10]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-141-6190f7431e35>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;31m# We convert bytes to strings since bytes are not serializable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;31m# unique_movie_id_strings = [id.decode(\"utf-8\") for id in unique_movie_ids]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 22\u001b[0;31m \u001b[0munique_user_id_strings\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mid\u001b[0m \u001b[0;32min\u001b[0m \u001b[0munique_user_ids\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     23\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[0;31m# unique_movie_id_strings[:10]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: 'numpy.int64' object has no attribute 'decode'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "29308fK8HWTk",
        "outputId": "ffb447f4-6c4c-4cec-ea8d-1ad4c4225f98"
      },
      "source": [
        "unique_user_ids=unique_user_ids.astype(object)\n",
        "unique_user_ids.dtype"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('O')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 147
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Nc-z0NEjIDML",
        "outputId": "396ffedd-3dd3-4d64-ceb8-a441cee6cbb0"
      },
      "source": [
        "unique_product_ids = unique_product_ids.astype(object)\n",
        "unique_product_ids.dtype"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dtype('O')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 153
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 345
        },
        "id": "bWepKPuhHVrs",
        "outputId": "0f0fe72d-a647-410c-a0ac-a314555e1bed"
      },
      "source": [
        "\n",
        "# We convert bytes to strings since bytes are not serializable\n",
        "unique_product_id_strings = [id.decode(\"utf-8\") for id in unique_product_ids]\n",
        "unique_user_id_strings = [id.decode(\"utf-8\") for id in unique_user_ids]\n",
        "\n",
        "unique_product_id_strings[:10]\n",
        "## 튜토리얼에는 있으나, 이미 연속된 정수이기 때문에 이 부분 생략. \n",
        "## 튜토리얼 데이터는 unique_user_ids의 dtype이 object. 본 데이터는 dtype 이 int.\n",
        "## 근데 여기가 막히니까 모델에서 오류가 남. 다시 시도. \n",
        "## string으로 만든 다음, 다시 decoding \n",
        "## int라서 안되는 게 아니라, movie와 product 차이 : \n",
        "#### -> 아마존 데이터를 인코딩 하지 않고, tf.map 데이터로 변환해야 함. tensorflow.python.data.ops.dataset_ops.MapDataset"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-158-a055667eeeac>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# We convert bytes to strings since bytes are not serializable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0munique_product_id_strings\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mid\u001b[0m \u001b[0;32min\u001b[0m \u001b[0munique_product_ids\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0munique_user_id_strings\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mid\u001b[0m \u001b[0;32min\u001b[0m \u001b[0munique_user_ids\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-158-a055667eeeac>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# We convert bytes to strings since bytes are not serializable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0munique_product_id_strings\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mid\u001b[0m \u001b[0;32min\u001b[0m \u001b[0munique_product_ids\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0munique_user_id_strings\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mid\u001b[0m \u001b[0;32min\u001b[0m \u001b[0munique_user_ids\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: 'int' object has no attribute 'decode'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VaKYJ2hR4Hq4"
      },
      "source": [
        "embedding_dimension = 32"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qCKh7GGr4I4T"
      },
      "source": [
        "# 입력 기능 정의 - user_id 를 유일한 입력 특성으로 지정. \n",
        "\n",
        "class UserModel(tf.keras.Model):\n",
        "\n",
        "  def __init__(self, embedding_dimension):\n",
        "    super(UserModel, self).__init__()\n",
        "    # The model itself is a single embedding layer.\n",
        "    # However, we could expand this to an arbitrarily complicated Keras model, as long\n",
        "    # as the output is an vector `embedding_dimension` wide.\n",
        "    user_features = [tf.feature_column.embedding_column(\n",
        "        tf.feature_column.categorical_column_with_vocabulary_list(\n",
        "            \"user_id\", unique_user_ids,\n",
        "        ),\n",
        "        embedding_dimension,\n",
        "    )]\n",
        "    self.embedding_layer = tf.keras.layers.DenseFeatures(user_features, name=\"user_embedding\")\n",
        "\n",
        "  def call(self, inputs):\n",
        "    return self.embedding_layer(inputs)\n",
        "\n",
        "# We initialize these models and later pass them to the full model.\n",
        "user_model = UserModel(embedding_dimension)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9Vu-lpRl_d9S"
      },
      "source": [
        "# 후보 타워 정의 \n",
        "class ProductModel(tf.keras.Model):\n",
        "\n",
        "  def __init__(self, embedding_dimension):\n",
        "    super(ProductModel, self).__init__()\n",
        "    # product_features = [tf.feature_column.embedding_column(\n",
        "    #     tf.feature_column.categorical_column_with_vocabulary_list(\n",
        "    #         \"product_id\", unique_product_ids,\n",
        "    #     ),\n",
        "    #     embedding_dimension,\n",
        "    # )]\n",
        "    product_features = [tf.feature_column.embedding_column(\n",
        "        tf.feature_column.categorical_column_with_vocabulary_list(\n",
        "            \"product_id\", unique_product_ids,\n",
        "        ),\n",
        "        embedding_dimension,\n",
        "    )]\n",
        "    self.embedding_layer = tf.keras.layers.DenseFeatures(product_features, name=\"product_embedding\")\n",
        "  \n",
        "  def call(self, inputs):\n",
        "    return self.embedding_layer(inputs)\n",
        "\n",
        "product_model = ProductModel(embedding_dimension)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "moULI4-F_1Oj",
        "outputId": "7de44f97-ddd6-44c3-bdf4-ccc4f7980494"
      },
      "source": [
        "# 기본 검증 지표 : 훈련 데이터의 양쌍(user, movie) 의 선호도 점수를 다른 모든 후보 데이터 점수와 비교. \n",
        "# 다른 모든 후보 데이터보다 훈련데이터 점수가 높으면 모델 정확도가 높다고 판단. \n",
        "metrics = tfrs.metrics.FactorizedTopK(\n",
        "  candidates=products_tf.batch(128).map(lambda x: {\"product_id\": x[\"product_id\"]}).map(product_model)\n",
        ")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:4: UserWarning: Creating resources inside a function passed to Dataset.map() is not supported. Create each resource outside the function, and capture it inside the function to use it.\n",
            "  after removing the cwd from sys.path.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tjiPxqH1_1Rf"
      },
      "source": [
        "# 손실\n",
        "import tensorflow_recommenders.tasks\n",
        "\n",
        "task = tfrs.tasks.Retrieval(\n",
        "  metrics=metrics\n",
        ")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9u7Tlm33_1Vc"
      },
      "source": [
        "# 전체 모델\n",
        "#이제 모든 것을 모델로 통합 할 수 있습니다. \n",
        "#TFRS는 기본 모델 클래스 tfrs.models.Model 을 노출하여 빌딩 모델을 간소화합니다. 우리가해야 할 일은 __init__ 메서드에 구성 요소를 설정하고 compute_loss 메서드를 구현하여 원시 기능을 compute_loss 손실 값을 반환하는 것입니다.\n",
        "#그런 다음 기본 모델은 모델에 맞는 적절한 학습 루프를 생성합니다.\n",
        "\n",
        "class ProductlensModel(tfrs.models.Model):\n",
        "\n",
        "  def __init__(self, user_model, product_model):\n",
        "    super().__init__()\n",
        "    self.product_model: tf.keras.Model = product_model\n",
        "    self.user_model: tf.keras.Model = user_model\n",
        "    self.task: tf.keras.layers.Layer = task\n",
        "\n",
        "  def compute_loss(self, features: Dict[Text, tf.Tensor], training=False) -> tf.Tensor:\n",
        "    # We pick out the user features and pass them into the user model.\n",
        "    user_embeddings = self.user_model({\"user_id\": features[\"user_id\"]})\n",
        "    # And pick out the product features and pass them into the product model,\n",
        "    # getting embeddings back.\n",
        "    positive_product_embeddings = self.product_model({\"product_id\": features[\"product_id\"]})\n",
        "\n",
        "    # The task computes the loss and the metrics.\n",
        "    return self.task(user_embeddings, positive_product_embeddings)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oFIMp0OCAm5l"
      },
      "source": [
        "# 모델 인스턴스화\n",
        "model = ProductlensModel(user_model, product_model)\n",
        "model.compile(optimizer=tf.keras.optimizers.Adagrad(learning_rate=0.1))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SG1CMByyAuGe"
      },
      "source": [
        "# 훈련, 테스트 데이터 섞음\n",
        "cached_train = train.shuffle(100_000).batch(8192).cache()\n",
        "cached_test = test.batch(4096).cache()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 903
        },
        "id": "C3dELMH1Am-9",
        "outputId": "c26bb377-0dbe-4f12-e32b-21669ed72c90"
      },
      "source": [
        "# 모델 학습\n",
        "model.fit(train, epochs=3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/3\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-131-d460a544fd26>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# 모델 학습\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1098\u001b[0m                 _r=1):\n\u001b[1;32m   1099\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1100\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1101\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1102\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    826\u001b[0m     \u001b[0mtracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    827\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mtrace\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_name\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mtm\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 828\u001b[0;31m       \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    829\u001b[0m       \u001b[0mcompiler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"xla\"\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_experimental_compile\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;34m\"nonXla\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    830\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    860\u001b[0m       \u001b[0;31m# In this case we have not created variables on the first call. So we can\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    861\u001b[0m       \u001b[0;31m# run the first trace but we should fail if variables are created.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 862\u001b[0;31m       \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    863\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_created_variables\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    864\u001b[0m         raise ValueError(\"Creating variables on a non-first call to a function\"\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2939\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_lock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2940\u001b[0m       (graph_function,\n\u001b[0;32m-> 2941\u001b[0;31m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[0m\u001b[1;32m   2942\u001b[0m     return graph_function._call_flat(\n\u001b[1;32m   2943\u001b[0m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_maybe_define_function\u001b[0;34m(self, args, kwargs)\u001b[0m\n\u001b[1;32m   3356\u001b[0m               call_context_key in self._function_cache.missed):\n\u001b[1;32m   3357\u001b[0m             return self._define_function_with_shape_relaxation(\n\u001b[0;32m-> 3358\u001b[0;31m                 args, kwargs, flat_args, filtered_flat_args, cache_key_context)\n\u001b[0m\u001b[1;32m   3359\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3360\u001b[0m           \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_function_cache\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmissed\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcall_context_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_define_function_with_shape_relaxation\u001b[0;34m(self, args, kwargs, flat_args, filtered_flat_args, cache_key_context)\u001b[0m\n\u001b[1;32m   3278\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3279\u001b[0m     graph_function = self._create_graph_function(\n\u001b[0;32m-> 3280\u001b[0;31m         args, kwargs, override_flat_arg_shapes=relaxed_arg_shapes)\n\u001b[0m\u001b[1;32m   3281\u001b[0m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_function_cache\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marg_relaxed\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrank_only_cache_key\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgraph_function\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3282\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_create_graph_function\u001b[0;34m(self, args, kwargs, override_flat_arg_shapes)\u001b[0m\n\u001b[1;32m   3204\u001b[0m             \u001b[0marg_names\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0marg_names\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3205\u001b[0m             \u001b[0moverride_flat_arg_shapes\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0moverride_flat_arg_shapes\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3206\u001b[0;31m             capture_by_value=self._capture_by_value),\n\u001b[0m\u001b[1;32m   3207\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_function_attributes\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3208\u001b[0m         \u001b[0mfunction_spec\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfunction_spec\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py\u001b[0m in \u001b[0;36mfunc_graph_from_py_func\u001b[0;34m(name, python_func, args, kwargs, signature, func_graph, autograph, autograph_options, add_control_dependencies, arg_names, op_return_value, collections, capture_by_value, override_flat_arg_shapes)\u001b[0m\n\u001b[1;32m    988\u001b[0m         \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moriginal_func\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf_decorator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munwrap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpython_func\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    989\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 990\u001b[0;31m       \u001b[0mfunc_outputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpython_func\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mfunc_args\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mfunc_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    991\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    992\u001b[0m       \u001b[0;31m# invariant: `func_outputs` contains only Tensors, CompositeTensors,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36mwrapped_fn\u001b[0;34m(*args, **kwds)\u001b[0m\n\u001b[1;32m    632\u001b[0m             \u001b[0mxla_context\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mExit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    633\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 634\u001b[0;31m           \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mweak_wrapped_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__wrapped__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    635\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    636\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/func_graph.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    975\u001b[0m           \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint:disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    976\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"ag_error_metadata\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 977\u001b[0;31m               \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mag_error_metadata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    978\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    979\u001b[0m               \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: in user code:\n\n    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py:805 train_function  *\n        return step_function(self, iterator)\n    <ipython-input-110-3f9dd4b36095>:19 call  *\n        return self.embedding_layer(inputs)\n    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py:1012 __call__  **\n        outputs = call_fn(inputs, *args, **kwargs)\n    /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/feature_column/dense_features.py:169 call  **\n        self._state_manager)\n    /usr/local/lib/python3.6/dist-packages/tensorflow/python/feature_column/feature_column_v2.py:2954 get_dense_tensor\n        transformation_cache, state_manager)\n    /usr/local/lib/python3.6/dist-packages/tensorflow/python/feature_column/feature_column_v2.py:3582 get_sparse_tensors\n        transformation_cache.get(self, state_manager), None)\n    /usr/local/lib/python3.6/dist-packages/tensorflow/python/feature_column/feature_column_v2.py:2355 get\n        transformed = column.transform_feature(self, state_manager)\n    /usr/local/lib/python3.6/dist-packages/tensorflow/python/feature_column/feature_column_v2.py:3559 transform_feature\n        transformation_cache.get(self.key, state_manager))\n    /usr/local/lib/python3.6/dist-packages/tensorflow/python/feature_column/feature_column_v2.py:2334 get\n        feature_tensor = self._get_raw_feature_as_tensor(key)\n    /usr/local/lib/python3.6/dist-packages/tensorflow/python/feature_column/feature_column_v2.py:2396 _get_raw_feature_as_tensor\n        key, feature_tensor))\n\n    ValueError: Feature (key: user_id) cannot have rank 0. Given: Tensor(\"IteratorGetNext:1\", shape=(), dtype=int64)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "krKqZLTwAnB7"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6lPJ9w-IAnGM"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_JmPVJ4z0bjV"
      },
      "source": [
        "### tesorrec - ratail 데이터 사례"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "AocGajgU0ggt",
        "outputId": "15011c18-9dd5-4b9b-fc34-ae5fd2b1a51b"
      },
      "source": [
        "!pip install tensorrec"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting tensorrec\n",
            "  Downloading https://files.pythonhosted.org/packages/1d/14/608abc1c669caf7f2f9a7a13d237bd3f58df08ed71b8eb4c2d756b025adf/tensorrec-0.26.2-py3-none-any.whl\n",
            "Requirement already satisfied: tensorflow>=1.7.0 in /usr/local/lib/python3.6/dist-packages (from tensorrec) (2.4.0)\n",
            "Requirement already satisfied: scipy>=0.19.1 in /usr/local/lib/python3.6/dist-packages (from tensorrec) (1.4.1)\n",
            "Requirement already satisfied: numpy>=1.14.1 in /usr/local/lib/python3.6/dist-packages (from tensorrec) (1.19.4)\n",
            "Collecting six==1.11.0\n",
            "  Downloading https://files.pythonhosted.org/packages/67/4b/141a581104b1f6397bfa78ac9d43d8ad29a7ca43ea90a2d863fe3056e86a/six-1.11.0-py2.py3-none-any.whl\n",
            "Requirement already satisfied: astunparse~=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (1.6.3)\n",
            "Requirement already satisfied: h5py~=2.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (2.10.0)\n",
            "Requirement already satisfied: wheel~=0.35 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (0.36.2)\n",
            "Requirement already satisfied: grpcio~=1.32.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (1.32.0)\n",
            "Requirement already satisfied: flatbuffers~=1.12.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (1.12)\n",
            "Requirement already satisfied: gast==0.3.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (0.3.3)\n",
            "Requirement already satisfied: tensorboard~=2.4 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (2.4.0)\n",
            "Requirement already satisfied: wrapt~=1.12.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (1.12.1)\n",
            "Requirement already satisfied: absl-py~=0.10 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (0.10.0)\n",
            "Requirement already satisfied: google-pasta~=0.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (0.2.0)\n",
            "Requirement already satisfied: tensorflow-estimator<2.5.0,>=2.4.0rc0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (2.4.0)\n",
            "Requirement already satisfied: opt-einsum~=3.3.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (3.3.0)\n",
            "Requirement already satisfied: keras-preprocessing~=1.1.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (1.1.2)\n",
            "Requirement already satisfied: termcolor~=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (1.1.0)\n",
            "Requirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (3.12.4)\n",
            "Requirement already satisfied: typing-extensions~=3.7.4 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=1.7.0->tensorrec) (3.7.4.3)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (3.3.3)\n",
            "Requirement already satisfied: setuptools>=41.0.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (51.1.1)\n",
            "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (2.23.0)\n",
            "Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (1.0.1)\n",
            "Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (1.17.2)\n",
            "Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (1.7.0)\n",
            "Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (0.4.2)\n",
            "Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from markdown>=2.6.8->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (3.3.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (2020.12.5)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (1.24.3)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (3.0.4)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (2.10)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (0.2.8)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (4.6)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (4.2.0)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (1.3.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (3.4.0)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.6/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (0.4.8)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow>=1.7.0->tensorrec) (3.1.0)\n",
            "\u001b[31mERROR: tensorflow 2.4.0 has requirement six~=1.15.0, but you'll have six 1.11.0 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: nbclient 0.5.1 has requirement jupyter-client>=6.1.5, but you'll have jupyter-client 5.3.5 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: google-colab 1.0.0 has requirement six~=1.15.0, but you'll have six 1.11.0 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: dm-tree 0.1.5 has requirement six>=1.12.0, but you'll have six 1.11.0 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: datascience 0.10.6 has requirement folium==0.2.1, but you'll have folium 0.8.3 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: albumentations 0.1.12 has requirement imgaug<0.2.7,>=0.2.5, but you'll have imgaug 0.2.9 which is incompatible.\u001b[0m\n",
            "Installing collected packages: six, tensorrec\n",
            "  Found existing installation: six 1.15.0\n",
            "    Uninstalling six-1.15.0:\n",
            "      Successfully uninstalled six-1.15.0\n",
            "Successfully installed six-1.11.0 tensorrec-0.26.2\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "six"
                ]
              }
            }
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0ciHtCmz0gpZ"
      },
      "source": [
        "# Import the standard packages normally utilize by Data Scientist\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import pickle\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "sns.set_style('whitegrid')\n",
        "%matplotlib inline\n",
        "\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn import preprocessing\n",
        "from collections import Counter\n",
        "import scipy.sparse as sparse\n",
        "\n",
        "# os is a handy module to explore operating system directory\n",
        "import os\n",
        "\n",
        "# import keras as the Tensorflow engine uses Keras Neural Net backend\n",
        "import keras as ks\n",
        "\n",
        "# Import Tensorrec recommendation packages\n",
        "import tensorrec\n",
        "from tensorrec import TensorRec\n",
        "from tensorrec.eval import *\n",
        "from tensorrec.util import append_to_string_at_point\n",
        "\n",
        "### the rest of these representation graphs are also available as an alternative\n",
        "### feel free to play around to tune up the model\n",
        "from tensorrec.representation_graphs import (AbstractKerasRepresentationGraph, \n",
        "#                                              ReLURepresentationGraph, \n",
        "                                             NormalizedLinearRepresentationGraph, \n",
        "#                                              LinearRepresentationGraph\n",
        "                                            )\n",
        "\n",
        "from tensorrec.loss_graphs import (WMRBLossGraph, \n",
        "#                                    BalancedWMRBLossGraph,\n",
        "#                                    RMSELossGraph, \n",
        "#                                    RMSEDenseLossGraph, \n",
        "#                                    SeparationDenseLossGraph\n",
        "                                  ) \n",
        "\n",
        "from tensorrec.eval import fit_and_eval, eval_random_ranks_on_dataset\n",
        "from tensorrec.util import append_to_string_at_point\n",
        "\n",
        "### we need to construct a Keras representation graph by inheriting tensorrec.representation_graphs.AbstractKerasRepresentationGraph\n",
        "### https://www.tensorflow.org/tensorboard/graphs\n",
        "### many thanks to James Kirk for his article: \n",
        "### https://medium.com/hackernoon/deep-learning-for-recommendation-with-keras-and-tensorrec-2b8935c795d0\n",
        "\n",
        "class DeepRepresentationGraph(AbstractKerasRepresentationGraph):\n",
        "\n",
        "    # This method returns an ordered list of Keras layers connecting the user/item features to the user/item\n",
        "    # representation. When TensorRec learns, the learning will happen in these layers.\n",
        "    def create_layers(self, n_features, n_components):\n",
        "        return [\n",
        "            ks.layers.Dense(n_components * 16, activation='relu'), #rectified linear unit\n",
        "            ks.layers.Dense(n_components * 8, activation='relu'), #you can try other activation layer too\n",
        "            ks.layers.Dense(n_components * 2, activation='relu'), #most likely changes only benefit other ML like image recog.\n",
        "            ks.layers.Dense(n_components, activation='tanh'),\n",
        "        ]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OcwIe7s90gyC"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GHaKGebw7rXx"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P3rJZsGN6gnA"
      },
      "source": [
        "### 3. 성능개선 결과(cv 적용, 하이퍼파라미터 조정) 최종 딥러닝 파이프라인\n",
        " - 시간 데이터 적용한 결과: https://www.tensorflow.org/recommenders/examples/movielens_side_information#representing_time"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Oc6y5IIX6lIe"
      },
      "source": [
        "# epochs 늘려서(3->10) 성능 개선 확인 top5 accuracy 증가. \n",
        "# 모델 비교하는 툴 완다 db? 사용해보기 "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2nuLMMzY6l70"
      },
      "source": [
        "# "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PBm-99HA2ECG"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2eDuyNgCod71"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XS7sJlLB6mdM"
      },
      "source": [
        "### 4. 결과 분석, 해석"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uQqlAtOqOriU"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
}
